{"version":3,"sources":["../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js"],"names":["Object","defineProperty","exports","value","default","path","file","builtinClasses","isLoose","assumptions","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","Map","methods","instance","hasComputed","list","map","static","setState","newState","assign","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","expression","ast","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","key","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","has","set","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","elem","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","require","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","statement","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","parser","validate","opts","Error","_ref","source","excluded","target","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","_excluded","RegExp","normalizeReplacements","replacements","Array","isArray","reduce","acc","replacement","formatter","code","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","err","loc","message","_codeFrame","codeFrameColumns","start","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholders","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","_t","isFunction","isJSXIdentifier","isNewExpression","isPlaceholder","isStatement","PATTERN","ancestors","state","_state$placeholderWhi","test","type","expectedNode","resolve","index","resolveAncestors","isDuplicate","metadata","forEach","placeholder","prototype","hasOwnProperty","placeholderName","reverse","emptyStatement","items","splice","applyReplacement","e","program","statements","smart","formatters","_builder","_default","bind","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","filter","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","assertExpressionStatement","makeStatementFormatter","str","unwrap","stmt","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","error","stack","split","join","_parse","_populate","shouldHighlight","getChalk","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","isKeyword","isStrictReservedWord","substr","toLowerCase","highlighted","colorize","supportsColor","forceColor","enabled","level","match","exec","matchToToken","names","nameSet","prefix","result","buildTemplateCode","from","some","buildLiteralData","defaultReplacements","beforeExpr","startsExpr","isAssign","TokenType","label","conf","this","rightAssociative","postfix","binop","updateContext","keywords$1","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","setTrailingComments","comments","trailingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","leadingComments","commentStart","input","charCodeAt","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","lineStart","lastIndex","getLineInfo","raiseWithData","getLocationForPosition","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","preserveSpace","brace","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","startLine","curPosition","skipArrays","val","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","current","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","oldState","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","ranges","range","NodePrototype","cloneIdentifier","cloned","create","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","option","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","estreeParseLiteral","bigInt","BigInt","parseLiteral","expressionValue","raw","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset"],"mappings":"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","file":"static/js/vendors-runtime-template.9bbc67d3.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(\"static\") && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(types$1.privateName) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= types$1._in.binop || !this.prodParam.hasIn || !this.match(types$1._in)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(types$1.bracketL);\n\n      if (computed || optional || this.eat(types$1.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}"],"sourceRoot":""}
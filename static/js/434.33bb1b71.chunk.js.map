{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","newtok","tokenBase","readBlockComment","m","phrase","mayIndent","readQuoted","start","pos","found","escaped","indexOf","regexpAhead","embed","delim","propertyIsEnumerable","skipToEnd","pop","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","unescaped","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","finishContinue","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","offset","idx","restore","backup","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","query","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","startSubMode","slimTag","slim","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine"],"mappings":"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","file":"static/js/434.33bb1b71.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ruby\", function (config) {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj([\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"]);\n    var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\n    var dedentWords = wordObj([\"end\", \"until\"]);\n    var opening = {\n      \"[\": \"]\",\n      \"{\": \"}\",\n      \"(\": \")\"\n    };\n    var closing = {\n      \"]\": \"[\",\n      \"}\": \"{\",\n      \")\": \"(\"\n    };\n    var curPunc;\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n        state.tokenize.push(readBlockComment);\n        return \"comment\";\n      }\n\n      if (stream.eatSpace()) return null;\n      var ch = stream.next(),\n          m;\n\n      if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n        return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n      } else if (ch == \"/\") {\n        if (regexpAhead(stream)) return chain(readQuoted(ch, \"string-2\", true), stream, state);else return \"operator\";\n      } else if (ch == \"%\") {\n        var style = \"string\",\n            embed = true;\n        if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string-2\";else if (stream.eat(/[wxq]/)) {\n          style = \"string\";\n          embed = false;\n        }\n        var delim = stream.eat(/[^\\w\\s=]/);\n        if (!delim) return \"operator\";\n        if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n        return chain(readQuoted(delim, style, embed, true), stream, state);\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n        return chain(readHereDoc(m[2], m[1]), stream, state);\n      } else if (ch == \"0\") {\n        if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n        return \"number\";\n      } else if (ch == \"?\") {\n        while (stream.match(/^\\\\[CM]-/)) {}\n\n        if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n        return \"string\";\n      } else if (ch == \":\") {\n        if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n        if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n        if (stream.eat(/[\\<\\>]/)) {\n          stream.eat(/[\\<\\>]/);\n          return \"atom\";\n        } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n        if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n          return \"atom\";\n        } // Symbols can't start by a digit\n\n\n        if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n          stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n          stream.eat(/[\\?\\!\\=]/);\n          return \"atom\";\n        }\n\n        return \"operator\";\n      } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n        stream.eat(\"@\");\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        return \"variable-2\";\n      } else if (ch == \"$\") {\n        if (stream.eat(/[a-zA-Z_]/)) {\n          stream.eatWhile(/[\\w]/);\n        } else if (stream.eat(/\\d/)) {\n          stream.eat(/\\d/);\n        } else {\n          stream.next(); // Must be a special global like $: or $!\n        }\n\n        return \"variable-3\";\n      } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        stream.eat(/[\\?\\!]/);\n        if (stream.eat(\":\")) return \"atom\";\n        return \"ident\";\n      } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n        curPunc = \"|\";\n        return null;\n      } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      } else if (ch == \"-\" && stream.eat(\">\")) {\n        return \"arrow\";\n      } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n        var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n        if (ch == \".\" && !more) curPunc = \".\";\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function regexpAhead(stream) {\n      var start = stream.pos,\n          depth = 0,\n          next,\n          found = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (!escaped) {\n          if (\"[{(\".indexOf(next) > -1) {\n            depth++;\n          } else if (\"]})\".indexOf(next) > -1) {\n            depth--;\n            if (depth < 0) break;\n          } else if (next == \"/\" && depth == 0) {\n            found = true;\n            break;\n          }\n\n          escaped = next == \"\\\\\";\n        } else {\n          escaped = false;\n        }\n      }\n\n      stream.backUp(stream.pos - start);\n      return found;\n    }\n\n    function tokenBaseUntilBrace(depth) {\n      if (!depth) depth = 1;\n      return function (stream, state) {\n        if (stream.peek() == \"}\") {\n          if (depth == 1) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else {\n            state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n          }\n        } else if (stream.peek() == \"{\") {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenBaseOnce() {\n      var alreadyCalled = false;\n      return function (stream, state) {\n        if (alreadyCalled) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        }\n\n        alreadyCalled = true;\n        return tokenBase(stream, state);\n      };\n    }\n\n    function readQuoted(quote, style, embed, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        if (state.context.type === 'read-quoted-paused') {\n          state.context = state.context.prev;\n          stream.eat(\"}\");\n        }\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              if (quote == \"}\") {\n                state.context = {\n                  prev: state.context,\n                  type: 'read-quoted-paused'\n                };\n              }\n\n              state.tokenize.push(tokenBaseUntilBrace());\n              break;\n            } else if (/[@\\$]/.test(stream.peek())) {\n              state.tokenize.push(tokenBaseOnce());\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return style;\n      };\n    }\n\n    function readHereDoc(phrase, mayIndent) {\n      return function (stream, state) {\n        if (mayIndent) stream.eatSpace();\n        if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n        return \"string\";\n      };\n    }\n\n    function readBlockComment(stream, state) {\n      if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase],\n          indented: 0,\n          context: {\n            type: \"top\",\n            indented: -config.indentUnit\n          },\n          continuedLine: false,\n          lastTok: null,\n          varList: false\n        };\n      },\n      token: function token(stream, state) {\n        curPunc = null;\n        if (stream.sol()) state.indented = stream.indentation();\n        var style = state.tokenize[state.tokenize.length - 1](stream, state),\n            kwtype;\n        var thisTok = curPunc;\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n          if (style == \"keyword\") {\n            thisTok = word;\n            if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n          }\n        }\n\n        if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n        if (curPunc == \"|\") state.varList = !state.varList;\n        if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n          prev: state.context,\n          type: curPunc || style,\n          indented: state.indented\n        };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n        if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize[state.tokenize.length - 1] != tokenBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0);\n        var ct = state.context;\n        var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n        return ct.indented + (closed ? 0 : config.indentUnit) + (state.continuedLine ? config.indentUnit : 0);\n      },\n      electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function (config) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"htmlmixed\"\n    });\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = {\n      html: htmlMode,\n      ruby: rubyMode\n    };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\",\n      // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\",\n      // no highlighting so far\n      creole: \"text/x-creole\",\n      // no highlighting so far\n      wiki: \"text/x-wiki\",\n      // no highlighting so far\n      mediawiki: \"text/x-mediawiki\",\n      // no highlighting so far\n      rdoc: \"text/x-rdoc\",\n      // no highlighting so far\n      builder: \"text/x-builder\",\n      // no highlighting so far\n      nokogiri: \"text/x-nokogiri\",\n      // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n\n    var embeddedRegexp = function (map) {\n      var arr = [];\n\n      for (var key in map) {\n        arr.push(key);\n      }\n\n      return new RegExp(\"^(\" + arr.join('|') + \"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\" + nameStartChar + \"](?::[\" + nameChar + \"]|[\" + nameChar + \"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function restore(stream, state) {\n        state.tokenize = tokenize;\n\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n\n        return state.tokenize(stream, state);\n      };\n\n      return function (stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function commaContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function (stream, state) {\n        var ch = stream.peek();\n\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function startRubySplat(tokenize) {\n      var rubyState;\n\n      var runSplat = function runSplat(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n\n          stream.next();\n        }\n\n        return ruby(stream, state);\n      };\n\n      return function (stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n\n      return html(stream, state);\n    }\n\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function (stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset,\n        // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n\n      return attributeWrapper(stream, state);\n    }\n\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n\n      var factory = CodeMirror.modes[query];\n\n      if (factory) {\n        return factory(config, {\n          name: query\n        });\n      }\n\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n      state.subMode = subMode;\n      state.subState = subState;\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n\n      return slimContent(stream, state);\n    }\n\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      } // should never happen, because of forward lookup\n\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^\\/$/)) {\n        // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n\n      if (stream.match(/^:/)) {\n        // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function startState() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n      blankLine: function blankLine(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n      innerMode: function innerMode(state) {\n        if (state.subMode) return {\n          state: state.subState,\n          mode: state.subMode\n        };\n        return {\n          state: state,\n          mode: mode\n        };\n      } //indent: function(state) {\n      //  return state.indented;\n      //}\n\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});"],"sourceRoot":""}
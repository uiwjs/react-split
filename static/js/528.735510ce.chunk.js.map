{"version":3,"sources":["../node_modules/codemirror/mode/troff/troff.js"],"names":["CodeMirror","defineMode","words","tokenBase","stream","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","hasOwnProperty","tokenize","state","tokens","startState","token","defineMIME","mod"],"mappings":"mHAIG,SAAUA,GACX,aAEAA,EAAWC,WAAW,SAAS,WAC7B,IAAIC,EAAQ,GAEZ,SAASC,EAAUC,GACjB,GAAIA,EAAOC,WAAY,OAAO,KAC9B,IAAIC,EAAMF,EAAOE,MACbC,EAAKH,EAAOI,OAEhB,GAAW,OAAPD,EACF,OAAIH,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,MAAQL,EAAOK,MAAM,MAAQL,EAAOK,MAAM,MAAQL,EAAOK,MAAM,KACzI,SAGLL,EAAOK,MAAM,OACfL,EAAOM,OAAO,KACdN,EAAOI,OACA,UAGLJ,EAAOK,MAAM,OAASL,EAAOK,MAAM,OACrCL,EAAOO,SAAS,SACT,UAGLP,EAAOK,MAAM,MAASL,EAAOK,MAAM,OACrCL,EAAOO,SAAS,SACT,UAGF,SAGT,GAAIL,IAAe,MAAPC,GAAqB,MAAPA,IACpBH,EAAOQ,IAAI,OAASR,EAAOQ,IAAI,KAEjC,OADAR,EAAOS,YACA,UAIX,GAAIP,GAAc,MAAPC,EAAY,CACrB,GAAIH,EAAOK,MAAM,OAASL,EAAOK,MAAM,OAASL,EAAOK,MAAM,MAC3D,MAAO,YAGT,GAAIL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,QAAUL,EAAOK,MAAM,OAEpF,OADAL,EAAOS,YACA,QAGT,GAAIT,EAAOK,MAAM,UAAYL,EAAOK,MAAM,UAAYL,EAAOK,MAAM,UAAYL,EAAOK,MAAM,SAC1F,MAAO,YAIXL,EAAOO,SAAS,SAChB,IAAIG,EAAMV,EAAOW,UACjB,OAAOb,EAAMc,eAAeF,GAAOZ,EAAMY,GAAO,KAGlD,SAASG,EAASb,EAAQc,GACxB,OAAQA,EAAMC,OAAO,IAAMhB,GAAWC,EAAQc,GAIhD,MAAO,CACLE,WAAY,WACV,MAAO,CACLD,OAAQ,KAGZE,MAAO,SAAejB,EAAQc,GAC5B,OAAOD,EAASb,EAAQc,QAI9BlB,EAAWsB,WAAW,aAAc,SACpCtB,EAAWsB,WAAW,eAAgB,SACtCtB,EAAWsB,WAAW,sBAAuB,SAjFgBC,CAAI,EAAQ","file":"static/js/528.735510ce.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) define([\"../../lib/codemirror\"], mod);else mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('troff', function () {\n    var words = {};\n\n    function tokenBase(stream) {\n      if (stream.eatSpace()) return null;\n      var sol = stream.sol();\n      var ch = stream.next();\n\n      if (ch === '\\\\') {\n        if (stream.match('fB') || stream.match('fR') || stream.match('fI') || stream.match('u') || stream.match('d') || stream.match('%') || stream.match('&')) {\n          return 'string';\n        }\n\n        if (stream.match('m[')) {\n          stream.skipTo(']');\n          stream.next();\n          return 'string';\n        }\n\n        if (stream.match('s+') || stream.match('s-')) {\n          stream.eatWhile(/[\\d-]/);\n          return 'string';\n        }\n\n        if (stream.match('\\(') || stream.match('*\\(')) {\n          stream.eatWhile(/[\\w-]/);\n          return 'string';\n        }\n\n        return 'string';\n      }\n\n      if (sol && (ch === '.' || ch === '\\'')) {\n        if (stream.eat('\\\\') && stream.eat('\\\"')) {\n          stream.skipToEnd();\n          return 'comment';\n        }\n      }\n\n      if (sol && ch === '.') {\n        if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n          return 'attribute';\n        }\n\n        if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n          stream.skipToEnd();\n          return 'quote';\n        }\n\n        if (stream.match(/[A-Z]/) && stream.match(/[A-Z]/) || stream.match(/[a-z]/) && stream.match(/[a-z]/)) {\n          return 'attribute';\n        }\n      }\n\n      stream.eatWhile(/[\\w-]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : null;\n    }\n\n    function tokenize(stream, state) {\n      return (state.tokens[0] || tokenBase)(stream, state);\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        return {\n          tokens: []\n        };\n      },\n      token: function token(stream, state) {\n        return tokenize(stream, state);\n      }\n    };\n  });\n  CodeMirror.defineMIME('text/troff', 'troff');\n  CodeMirror.defineMIME('text/x-troff', 'troff');\n  CodeMirror.defineMIME('application/x-troff', 'troff');\n});"],"sourceRoot":""}
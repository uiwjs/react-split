{"version":3,"sources":["../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","highlighted","colorize","map","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","index","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","path","file","builtinClasses","isLoose","assumptions","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","properties","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","toExpression","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","a","b","_ref","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","RegExp","reduce","acc","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","loc","message","_codeFrame","codeFrameColumns","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","state","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","expectedNode","isNewExpression","isFunction","isStatement","resolve","resolveAncestors","placeholderName","reverse","emptyStatement","items","splice","applyReplacement","e","formatters","_builder","_default","bind","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","filter","declare","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","startLine","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset"],"mappings":"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","file":"static/js/vendors-runtime-template.79859bcf.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isDeclareContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf || this.match(types._in)) {\n      if (isForOf && startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      }\n\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}"],"sourceRoot":""}
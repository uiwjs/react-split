{"version":3,"sources":["../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","parser","assign","validate","opts","Error","_ref","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","_excluded","Set","RegExp","undefined","normalizeReplacements","replacements","Array","isArray","reduce","acc","replacement","default","formatter","code","ast","parserOpts","plugins","slice","push","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","err","loc","message","_codeFrame","codeFrameColumns","start","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholders","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","require","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStatement","isStringLiteral","PATTERN","node","ancestors","state","_state$placeholderWhi","name","test","has","type","parent","expectedNode","resolve","index","resolveAncestors","isDuplicate","add","metadata","cloneNode","forEach","placeholder","prototype","hasOwnProperty","call","placeholderName","reverse","map","stringLiteral","blockStatement","expressionStatement","identifier","emptyStatement","items","splice","applyReplacement","e","program","expression","statements","statement","smart","formatters","_builder","_default","bind","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","filter","builtinClasses","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","get","isClassDeclaration","ClassDeclaration","ref","id","scope","generateUidIdentifier","replaceWith","types","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","file","callee","isArrowFunctionExpression","arrowFunctionToExpression","assertExpressionStatement","makeStatementFormatter","fn","str","unwrap","body","stmt","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","_options","tpl","args","extendedTrace","_string","builder","_literal","set","NO_PLACEHOLDER","rootStack","error","stack","split","join","arg","_parse","_populate","shouldHighlight","getChalk","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","isKeyword","isStrictReservedWord","substr","toLowerCase","highlighted","colorize","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","names","nameSet","prefix","result","buildTemplateCode","concat","from","some","buildLiteralData","defaultReplacements","beforeExpr","startsExpr","isLoop","isAssign","TokenType","label","conf","this","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","setTrailingComments","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","leadingComments","commentStart","input","charCodeAt","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","lineStart","lastIndex","getLineInfo","raiseWithData","getLocationForPosition","replace","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","preserveSpace","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","startLine","curPosition","skipArrays","val","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","current","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","ranges","range","NodePrototype","cloneIdentifier","cloned","create","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"6HAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,MAOR,SAAeC,EAAGC,GAChB,MAKIA,EAJFC,4BADF,MACyBF,EAAEE,qBAD3B,IAKID,EAHFE,0BAFF,MAEuBH,EAAEG,mBAFzB,IAKIF,EAFFG,wBAHF,MAGqBJ,EAAEI,iBAHvB,IAKIH,EADFI,6BAJF,MAI0BL,EAAEK,sBAJ5B,EAMA,MAAO,CACLC,OAAQX,OAAOY,OAAO,GAAIP,EAAEM,OAAQL,EAAEK,QACtCJ,uBACAC,qBACAC,mBACAC,0BAlBJR,EAAQW,SAsBR,SAAkBC,GAChB,GAAY,MAARA,GAAgC,kBAATA,EACzB,MAAM,IAAIC,MAAM,6BAGZ,IAAAC,EAAOF,GAAQ,GAEnBP,EAIES,EAJFT,qBACAC,EAGEQ,EAHFR,mBACAC,EAEEO,EAFFP,iBACAC,EACEM,EADFN,sBAEIC,EA9BR,SAAuCM,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAA2DE,EAAKC,EAA5DC,EAAS,GAAQC,EAAatB,OAAOuB,KAAKN,GAAqB,IAAKG,EAAI,EAAGA,EAAIE,EAAWE,OAAQJ,IAAOD,EAAMG,EAAWF,GAAQF,EAASO,QAAQN,IAAQ,IAAaE,EAAOF,GAAOF,EAAOE,IAAQ,OAAOE,EA8BzRK,CAA8BV,EAAMW,GAEnD,GAA4B,MAAxBpB,KAAkCA,aAAgCqB,KACpE,MAAM,IAAIb,MAAM,6DAGlB,GAA0B,MAAtBP,KAAgCA,aAA8BqB,UAAkC,IAAvBrB,EAC3E,MAAM,IAAIO,MAAM,qEAGlB,GAAwB,MAApBN,GAAwD,mBAArBA,EACrC,MAAM,IAAIM,MAAM,6DAGlB,GAA6B,MAAzBL,GAAkE,mBAA1BA,EAC1C,MAAM,IAAIK,MAAM,kEAGlB,IAA8B,IAA1BL,IAA2D,MAAxBH,GAAsD,MAAtBC,GACrE,MAAM,IAAIO,MAAM,2GAGlB,MAAO,CACLJ,SACAJ,qBAAsBA,QAAwBuB,EAC9CtB,mBAA0C,MAAtBA,OAA6BsB,EAAYtB,EAC7DC,iBAAsC,MAApBA,OAA2BqB,EAAYrB,EACzDC,sBAAgD,MAAzBA,OAAgCoB,EAAYpB,IA5DvER,EAAQ6B,sBAgER,SAA+BC,GAC7B,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EAAaG,QAAO,SAACC,EAAKC,EAAajB,GAE5C,OADAgB,EAAI,IAAMhB,GAAKiB,EACRD,IACN,IACE,GAA4B,kBAAjBJ,GAA6C,MAAhBA,EAC7C,OAAOA,QAAgBF,EAGzB,MAAM,IAAIf,MAAM,uEAzElB,IAAMY,EAAY,CAAC,uBAAwB,qBAAsB,mBAAoB,0B,iCCNrF3B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAuBR,SAA+BC,EAAWC,EAAM1B,GAC9C,IACEP,EAIEO,EAJFP,qBACAC,EAGEM,EAHFN,mBACAC,EAEEK,EAFFL,iBACAC,EACEI,EADFJ,sBAEI+B,EA2HR,SAA4BD,EAAME,EAAYhC,GAC5C,IAAMiC,GAAWD,EAAWC,SAAW,IAAIC,SAEb,IAA1BlC,GACFiC,EAAQE,KAAK,gBAGfH,EAAa1C,OAAOY,OAAO,CACzBkC,4BAA4B,EAC5BC,yBAAyB,EACzBC,WAAY,UACXN,EAAY,CACbC,YAGF,IACE,OAAO,EAAIM,EAAQC,OAAOV,EAAME,GAChC,MAAOS,GACP,IAAMC,EAAMD,EAAIC,IAShB,MAPIA,IACFD,EAAIE,SAAW,MAAO,EAAIC,EAAWC,kBAAkBf,EAAM,CAC3DgB,MAAOJ,IAETD,EAAIX,KAAO,8BAGPW,GAtJIM,CAAmBjB,EAAM1B,EAAKH,OAAQD,GAClDgD,EAAqBjB,EAAK,CACxBhC,qBAEF8B,EAAU1B,SAAS4B,GACnB,IAAMkB,EAAY,CAChBC,aAAc,GACdC,iBAAkB,IAAIjC,KAElBkC,EAAS,CACbF,aAAc,GACdC,iBAAkB,IAAIjC,KAElBmC,EAAc,CAClB5D,WAAO2B,GAUT,OARAkC,EAASvB,EAAKwB,EAA2B,CACvCN,YACAG,SACAC,cACAxD,uBACAC,qBACAE,0BAEKV,OAAOY,OAAO,CACnB6B,OACCsB,EAAY5D,MAAQ2D,EAASH,IAtDlC,IAAIO,EAAKC,EAAQ,GAEblB,EAAUkB,EAAQ,IAElBb,EAAaa,EAAQ,IAGvBC,EAWEF,EAXFE,iBACAC,EAUEH,EAVFG,sBACAC,EASEJ,EATFI,WACAC,EAQEL,EARFK,aACAC,EAOEN,EAPFM,gBACAC,EAMEP,EANFO,gBACAC,EAKER,EALFQ,cACAC,EAIET,EAJFS,YACAC,EAGEV,EAHFU,gBACAlB,EAEEQ,EAFFR,qBACAM,EACEE,EADFF,SAEIa,EAAU,gBAsChB,SAASZ,EAA0Ba,EAAMC,EAAWC,GAClD,IAAIC,EAEAC,EAEJ,GAAIR,EAAcI,GAAO,CACvB,IAAoC,IAAhCE,EAAMtE,sBACR,MAAM,IAAIK,MAAM,oFAEhBmE,EAAOJ,EAAKI,KAAKA,KACjBF,EAAMjB,YAAY5D,OAAQ,MAEvB,KAAgC,IAA5B6E,EAAMjB,YAAY5D,OAAmB6E,EAAMtE,sBACpD,OACK,GAAI6D,EAAaO,IAASN,EAAgBM,GAC/CI,EAAOJ,EAAKI,KACZF,EAAMjB,YAAY5D,OAAQ,MACrB,KAAIyE,EAAgBE,GAIzB,OAHAI,EAAOJ,EAAK3E,MACZ6E,EAAMjB,YAAY5D,OAAQ,GAK5B,IAAK6E,EAAMjB,YAAY5D,QAAsC,MAA5B6E,EAAMxE,oBAA4D,MAA9BwE,EAAMzE,sBACzE,MAAM,IAAIQ,MAAM,2GAGlB,IAAIiE,EAAMjB,YAAY5D,QAAuC,IAA7B6E,EAAMxE,qBAAkCwE,EAAMxE,oBAAsBqE,GAASM,KAAKD,IAAoE,OAAvDD,EAAwBD,EAAMzE,uBAAiC0E,EAAsBG,IAAIF,GAAxN,CAKA,IAIIG,EAJJ,GADAN,EAAYA,EAAUnC,SAIRmC,EAAUvD,OAAS,GAFzB8D,EADR,EACER,KACA3D,EAFF,EAEEA,IAIEyD,EAAgBE,IAASJ,EAAcI,EAAM,CAC/CS,aAAc,kBAEdF,EAAO,SACEZ,EAAgBa,IAAmB,cAARnE,GAAuBiD,EAAiBkB,IAAmB,cAARnE,GAAuBmD,EAAWgB,IAAmB,WAARnE,EACpIkE,EAAO,QACEhB,EAAsBiB,KAAYZ,EAAcI,IACzDO,EAAO,YACPN,EAAYA,EAAUnC,MAAM,GAAI,IAEhCyC,EADSV,EAAYG,IAASJ,EAAcI,GACrC,YAEA,QAGT,MAGIE,EAAMjB,YAAY5D,MAAQ6E,EAAMlB,OAASkB,EAAMrB,UAFjDC,EADF,EACEA,aACAC,EAFF,EAEEA,iBAEFD,EAAaf,KAAK,CAChBqC,OACAG,OACAG,QAAS,SAAA/C,GAAG,OAMhB,SAA0BA,EAAKsC,GAG7B,IAFA,IAAIO,EAAS7C,EAEJrB,EAAI,EAAGA,EAAI2D,EAAUvD,OAAS,EAAGJ,IAAK,CAC7C,MAGI2D,EAAU3D,GAFZD,EADF,EACEA,IACAsE,EAFF,EAEEA,MAIAH,OADYxD,IAAV2D,EACOH,EAAOnE,GAEPmE,EAAOnE,GAAKsE,GAIzB,MAGIV,EAAUA,EAAUvD,OAAS,GAF/BL,EADF,EACEA,IACAsE,EAFF,EAEEA,MAEF,MAAO,CACLH,SACAnE,MACAsE,SA7BgBC,CAAiBjD,EAAKsC,IACtCY,YAAa9B,EAAiBuB,IAAIF,KAEpCrB,EAAiB+B,IAAIV,M,6CC9HvBlF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAgBR,SAA8BuD,EAAU7D,GACtC,IAAMS,EAAMqD,EAAUD,EAASpD,KAE3BT,IACF6D,EAASjC,aAAamC,SAAQ,SAAAC,GAC5B,IAAKhG,OAAOiG,UAAUC,eAAeC,KAAKnE,EAAcgE,EAAYd,MAAO,CACzE,IAAMkB,EAAkBJ,EAAYd,KACpC,MAAM,IAAInE,MAAJ,4CAA+CqF,EAA/C,mOAE+DA,EAF/D,uDAG0BA,EAH1B,aAMVpG,OAAOuB,KAAKS,GAAc+D,SAAQ,SAAA5E,GAChC,IAAK0E,EAAShC,iBAAiBuB,IAAIjE,GACjC,MAAM,IAAIJ,MAAJ,gCAAmCI,EAAnC,gBAaZ,OARA0E,EAASjC,aAAahB,QAAQyD,UAAUN,SAAQ,SAAAC,GAC9C,KAUJ,SAA0BA,EAAavD,EAAKJ,GACtC2D,EAAYL,cACV1D,MAAMC,QAAQG,GAChBA,EAAcA,EAAYiE,KAAI,SAAAxB,GAAI,OAAIgB,EAAUhB,MAChB,kBAAhBzC,IAChBA,EAAcyD,EAAUzD,KAI5B,MAII2D,EAAYR,QAAQ/C,GAHtB6C,EADF,EACEA,OACAnE,EAFF,EAEEA,IACAsE,EAHF,EAGEA,MAGF,GAAyB,WAArBO,EAAYX,MAKd,GAJ2B,kBAAhBhD,IACTA,EAAckE,EAAclE,KAGzBA,IAAgBuC,EAAgBvC,GACnC,MAAM,IAAItB,MAAM,qCAEb,GAAyB,cAArBiF,EAAYX,UACPvD,IAAV2D,EACGpD,EAEMJ,MAAMC,QAAQG,GACvBA,EAAcmE,EAAenE,GACG,kBAAhBA,EAChBA,EAAcoE,EAAoBC,EAAWrE,IACnCsC,EAAYtC,KACtBA,EAAcoE,EAAoBpE,IANlCA,EAAcsE,IASZtE,IAAgBJ,MAAMC,QAAQG,KACL,kBAAhBA,IACTA,EAAcqE,EAAWrE,IAGtBsC,EAAYtC,KACfA,EAAcoE,EAAoBpE,UAInC,GAAyB,UAArB2D,EAAYX,MAKrB,GAJ2B,kBAAhBhD,IACTA,EAAcqE,EAAWrE,SAGbP,IAAV2D,EAAqB,MAAM,IAAI1E,MAAM,2BAMzC,GAJ2B,kBAAhBsB,IACTA,EAAcqE,EAAWrE,IAGvBJ,MAAMC,QAAQG,GAChB,MAAM,IAAItB,MAAM,mDAIpB,QAAce,IAAV2D,EACF5E,EAASyE,EAAQnE,EAAKkB,GACtBiD,EAAOnE,GAAOkB,MACT,CACL,IAAMuE,EAAQtB,EAAOnE,GAAKyB,QAED,cAArBoD,EAAYX,MAA6C,UAArBW,EAAYX,KAC/B,MAAfhD,EACFuE,EAAMC,OAAOpB,EAAO,GACXxD,MAAMC,QAAQG,GACvBuE,EAAMC,OAAN,MAAAD,EAAK,CAAQnB,EAAO,GAAf,SAAqBpD,KAE1BuE,EAAMnB,GAASpD,EAGjBuE,EAAMnB,GAASpD,EAGjBxB,EAASyE,EAAQnE,EAAKyF,GACtBtB,EAAOnE,GAAOyF,GAzFZE,CAAiBd,EAAavD,EAAKT,GAAgBA,EAAagE,EAAYd,OAAS,MACrF,MAAO6B,GAEP,MADAA,EAAE1D,QAAF,uCAA4C2C,EAAYd,KAAxD,cAAkE6B,EAAE1D,SAC9D0D,MAGHtE,GA1CT,IAAIyB,EAAKC,EAAQ,GAGfqC,EASEtC,EATFsC,eACAV,EAQE5B,EARF4B,UACAa,EAOEzC,EAPFyC,eACAF,EAMEvC,EANFuC,oBACAC,EAKExC,EALFwC,WACA/B,EAIET,EAJFS,YACAC,EAGEV,EAHFU,gBACA2B,EAEErC,EAFFqC,cACA1F,EACEqD,EADFrD,U,gCChBFb,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAAUpC,EAAQ8G,QAAU9G,EAAQ+G,WAAa/G,EAAQgH,WAAahH,EAAQiH,UAAYjH,EAAQkH,WAAQ,EAElH,IAAIC,EAAalD,EAAQ,KAErBmD,EAAWnD,EAAQ,KAEjBiD,GAAQ,EAAIE,EAAShF,SAAS+E,EAAWD,OAC/ClH,EAAQkH,MAAQA,EAChB,IAAMD,GAAY,EAAIG,EAAShF,SAAS+E,EAAWF,WACnDjH,EAAQiH,UAAYA,EACpB,IAAMD,GAAa,EAAII,EAAShF,SAAS+E,EAAWH,YACpDhH,EAAQgH,WAAaA,EACrB,IAAMD,GAAa,EAAIK,EAAShF,SAAS+E,EAAWJ,YACpD/G,EAAQ+G,WAAaA,EACrB,IAAMD,GAAU,EAAIM,EAAShF,SAAS+E,EAAWL,SACjD9G,EAAQ8G,QAAUA,EAElB,IAAIO,EAAWvH,OAAOY,OAAOwG,EAAMI,UAAK1F,GAAY,CAClDsF,QACAD,YACAD,aACAD,aACAD,UACAvE,IAAK2E,EAAM3E,MAGbvC,EAAQoC,QAAUiF,G,6CC7BlBvH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,aAAU,EAElB,IAAImF,EAAqBtD,EAAQ,KAE7BuD,EAAwBvD,EAAQ,KAEhCwD,EAAsBxD,EAAQ,KAE9ByD,EAAgCzD,EAAQ,KAExC0D,EAAQ1D,EAAQ,IAEhB2D,EAAW3D,EAAQ,KAEnB4D,EAAkB5D,EAAQ,KAExB6D,EAAoB,SAAAC,GAAQ,OAAIjI,OAAOuB,KAAKuG,EAASG,IAAWC,QAAO,SAAAhD,GAAI,MAAI,SAASC,KAAKD,OAE7FiD,EAAiB,IAAIvG,IAAJ,YAAYoG,EAAkB,YAA9B,EAA6CA,EAAkB,cAElFT,GAAW,EAAIE,EAAmBW,UAAS,SAACC,EAAKC,GACnD,IAAIC,EAAiBC,EAAkBC,EAAkBC,EAEzDL,EAAIM,cAAc,GAClB,IACEC,EACEN,EADFM,MAEIC,EAA2E,OAAxDN,EAAkBF,EAAIS,WAAW,oBAA8BP,EAAkBD,EAAQM,MAC5GG,EAAwE,OAAvDP,EAAmBH,EAAIS,WAAW,kBAA4BN,EAAmBF,EAAQM,MAC1GI,EAAkG,OAApEP,EAAmBJ,EAAIS,WAAW,+BAAyCL,EAAmBH,EAAQM,MACpIK,EAAsE,OAAtDP,EAAmBL,EAAIS,WAAW,iBAA2BJ,EAAmBJ,EAAQM,MACxGM,EAAUC,SAChB,MAAO,CACLjE,KAAM,oBACNkE,QAAS,CACPC,yBADO,SACkBC,GAClBA,EAAKC,IAAI,eAAeC,uBAC7B,EAAI5B,EAA8BtF,SAASgH,IAG7CG,iBANO,SAMUH,GACf,IACExE,EACEwE,EADFxE,KAEI4E,EAAM5E,EAAK6E,IAAML,EAAKM,MAAMC,sBAAsB,SACxDP,EAAKQ,YAAYjC,EAAMkC,MAAMC,oBAAoB,MAAO,CAACnC,EAAMkC,MAAME,mBAAmBP,EAAK7B,EAAMkC,MAAMG,aAAapF,QAGxHqF,gBAdO,SAcSb,EAAMtE,GACpB,IACEF,EACEwE,EADFxE,KAEF,IAAIA,EAAKoE,GAAT,CACA,IAAMkB,GAAW,EAAIzC,EAAoBrF,SAASgH,GAElD,GAAIc,GAAYA,IAAatF,EAC3BwE,EAAKQ,YAAYM,QAYnB,GARAtF,EAAKoE,IAAW,EAChBI,EAAKQ,aAAY,EAAI/B,EAAgBzF,SAASgH,EAAMtE,EAAMqF,KAAMlC,EAAgBS,EAAO,CACrFC,kBACAE,gBACAC,6BACAC,kBAGEK,EAAKlF,mBAAoB,EAC3B,EAAIsD,EAAsBpF,SAASgH,GACnC,IAAMgB,EAAShB,EAAKC,IAAI,UAEpBe,EAAOC,6BACTD,EAAOE,oCASnBtK,EAAQoC,QAAUiF,G,6CCrFlBvH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ8G,QAAU9G,EAAQ+G,WAAa/G,EAAQiH,UAAYjH,EAAQgH,WAAahH,EAAQkH,WAAQ,EAEhG,IAGEqD,EAHOtG,EAAQ,GAGfsG,0BAGF,SAASC,EAAuBC,GAC9B,MAAO,CACLnI,KAAM,SAAAoI,GAAG,wCAA+BA,IACxC/J,SAAU,aACVgK,OAAQ,SAAApI,GACN,OAAOkI,EAAGlI,EAAIuE,QAAQ8D,KAAKlI,MAAM,MAKvC,IAAMwE,EAAQsD,GAAuB,SAAAI,GACnC,OAAIA,EAAKtJ,OAAS,EACTsJ,EAEAA,EAAK,MAGhB5K,EAAQkH,MAAQA,EAChB,IAAMF,EAAawD,GAAuB,SAAAI,GAAI,OAAIA,KAClD5K,EAAQgH,WAAaA,EACrB,IAAMC,EAAYuD,GAAuB,SAAAI,GACvC,GAAoB,IAAhBA,EAAKtJ,OACP,MAAM,IAAIT,MAAM,4BAGlB,GAAI+J,EAAKtJ,OAAS,EAChB,MAAM,IAAIT,MAAM,4CAGlB,OAAO+J,EAAK,MAEd5K,EAAQiH,UAAYA,EACpB,IAAMF,EAAa,CACjBzE,KAAM,SAAAoI,GAAG,mBAAUA,EAAV,QACT/J,SAAU,SAAA4B,GACR,GAAIA,EAAIuE,QAAQ8D,KAAKtJ,OAAS,EAC5B,MAAM,IAAIT,MAAM,4CAGlB,GAAqC,IAAjCkG,EAAW4D,OAAOpI,GAAKe,MACzB,MAAM,IAAIzC,MAAM,kCAGpB8J,OAAQ,YAEF,IADJ7D,EACI,EADJA,QAEO+D,EAAP,EAAe/D,EAAQ8D,KAAvB,MAEA,OADAL,EAA0BM,GACnBA,EAAK9D,aAGhB/G,EAAQ+G,WAAaA,EAMrB/G,EAAQ8G,QALQ,CACdxE,KAAM,SAAAoI,GAAG,OAAIA,GACb/J,SAAU,aACVgK,OAAQ,SAAApI,GAAG,OAAIA,EAAIuE,W,iCClErBhH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAYR,SAAS0I,EAAsBzI,EAAW0I,GACxC,IAAMC,EAAkB,IAAIC,QACtBC,EAAmB,IAAID,QACvBE,EAAaJ,IAAe,EAAIK,EAASzK,UAAU,MACzD,OAAOb,OAAOY,QAAO,SAAC2K,GAAiB,2BAATC,EAAS,iCAATA,EAAS,kBACrC,GAAmB,kBAARD,EAAkB,CAC3B,GAAIC,EAAKhK,OAAS,EAAG,MAAM,IAAIT,MAAM,4BACrC,OAAO0K,GAAc,EAAIC,EAAQpJ,SAASC,EAAWgJ,GAAK,EAAID,EAASlL,OAAOiL,GAAY,EAAIC,EAASzK,UAAU2K,EAAK,OACjH,GAAIvJ,MAAMC,QAAQqJ,GAAM,CAC7B,IAAII,EAAUT,EAAgB3B,IAAIgC,GAOlC,OALKI,IACHA,GAAU,EAAIC,EAAStJ,SAASC,EAAWgJ,EAAKF,GAChDH,EAAgBW,IAAIN,EAAKI,IAGpBF,EAAcE,EAAQH,IACxB,GAAmB,kBAARD,GAAoBA,EAAK,CACzC,GAAIC,EAAKhK,OAAS,EAAG,MAAM,IAAIT,MAAM,4BACrC,OAAOiK,EAAsBzI,GAAW,EAAI+I,EAASlL,OAAOiL,GAAY,EAAIC,EAASzK,UAAU0K,KAGjG,MAAM,IAAIxK,MAAJ,2CAA8CwK,MACnD,CACD9I,IAAK,SAAC8I,GAAiB,2BAATC,EAAS,iCAATA,EAAS,kBACrB,GAAmB,kBAARD,EAAkB,CAC3B,GAAIC,EAAKhK,OAAS,EAAG,MAAM,IAAIT,MAAM,4BACrC,OAAO,EAAI2K,EAAQpJ,SAASC,EAAWgJ,GAAK,EAAID,EAASlL,QAAO,EAAIkL,EAASlL,OAAOiL,GAAY,EAAIC,EAASzK,UAAU2K,EAAK,KAAMM,GAA3H,GACF,GAAI7J,MAAMC,QAAQqJ,GAAM,CAC7B,IAAII,EAAUP,EAAiB7B,IAAIgC,GAOnC,OALKI,IACHA,GAAU,EAAIC,EAAStJ,SAASC,EAAWgJ,GAAK,EAAID,EAASlL,OAAOiL,EAAYS,IAChFV,EAAiBS,IAAIN,EAAKI,IAGrBA,EAAQH,EAARG,GAGT,MAAM,IAAI5K,MAAJ,2CAA8CwK,QAjD1D,IAAID,EAAWnH,EAAQ,KAEnBuH,EAAUvH,EAAQ,KAElByH,EAAWzH,EAAQ,KAEjB2H,GAAiB,EAAIR,EAASzK,UAAU,CAC5CL,oBAAoB,IA+CtB,SAASiL,EAAcd,GACrB,IAAIoB,EAAY,GAEhB,IACE,MAAM,IAAIhL,MACV,MAAOiL,GACHA,EAAMC,QACRF,EAAYC,EAAMC,MAAMC,MAAM,MAAMtJ,MAAM,GAAGuJ,KAAK,OAItD,OAAO,SAAAC,GACL,IACE,OAAOzB,EAAGyB,GACV,MAAOjJ,GAEP,MADAA,EAAI8I,OAAJ,+BAAqCF,GAC/B5I,M,iCC3EZnD,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAQR,SAAwBC,EAAWC,EAAM1B,GAEvC,IAAI+E,EACJ,OAFArD,EAAOD,EAAUC,KAAKA,GAEf,SAAA4J,GACL,IAAMpK,GAAe,EAAIsJ,EAASvJ,uBAAuBqK,GAEzD,OADKvG,IAAUA,GAAW,EAAIwG,EAAO/J,SAASC,EAAWC,EAAM1B,IACxDyB,EAAUsI,QAAO,EAAIyB,EAAUhK,SAASuD,EAAU7D,MAZ7D,IAAIsJ,EAAWnH,EAAQ,KAEnBkI,EAASlI,EAAQ,KAEjBmI,EAAYnI,EAAQ,M,oDCTxBnE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQqM,gBAAkBA,EAC1BrM,EAAQsM,SAAWA,EACnBtM,EAAQoC,QAoGR,SAAmBE,GAAoB,IAAd8F,EAAc,uDAAJ,GACjC,GAAIiE,EAAgBjE,GAAU,CAC5B,IAAMmE,EAAQD,EAASlE,GACjBoE,EAAOC,EAAQF,GACrB,OAAOG,EAAgBF,EAAMlK,GAE7B,OAAOA,GAxGX,IAAIqK,EAAY1I,EAAQ,KAEpB2I,EAA6B3I,EAAQ,IAErC4I,EAAS5I,EAAQ,KAEf6I,EAAoB,IAAIpL,IAAI,CAAC,KAAM,QAAS,OAAQ,MAAO,KAAM,QAEvE,SAAS+K,EAAQF,GACf,MAAO,CACLQ,QAASR,EAAMS,KACfC,YAAaV,EAAMW,OACnBC,cAAeZ,EAAMW,OACrBE,WAAYb,EAAMW,OAClBG,OAAQd,EAAMe,QACdC,OAAQhB,EAAMiB,MACdC,MAAOlB,EAAMe,QACbI,QAASnB,EAAMoB,KACfC,QAASrB,EAAMsB,MAAMC,MAAMC,MAI/B,IAEIC,EAFEC,EAAU,0BACVC,EAAU,cAGRC,EAAU,iBAEVC,EAAe,SAAUC,EAAOC,EAAQC,GAC5C,GAAmB,SAAfF,EAAMlJ,KAAiB,CACzB,IAAI,EAAIyH,EAA2B4B,WAAWH,EAAMpO,SAAU,EAAI2M,EAA2B6B,sBAAsBJ,EAAMpO,OAAO,IAAS6M,EAAkB5H,IAAImJ,EAAMpO,OACnK,MAAO,UAGT,GAAIkO,EAAQlJ,KAAKoJ,EAAMpO,SAAgC,MAArBsO,EAAKD,EAAS,IAA4C,MAA9BC,EAAKG,OAAOJ,EAAS,EAAG,IACpF,MAAO,gBAGT,GAAID,EAAMpO,MAAM,KAAOoO,EAAMpO,MAAM,GAAG0O,cACpC,MAAO,cAIX,MAAmB,eAAfN,EAAMlJ,MAAyB+I,EAAQjJ,KAAKoJ,EAAMpO,OAC7C,UAGU,YAAfoO,EAAMlJ,MAAuC,MAAhBkJ,EAAMpO,OAAiC,MAAhBoO,EAAMpO,MAIvDoO,EAAMlJ,KAHJ,cAoBb,SAASuH,EAAgBF,EAAM+B,GAC7B,IADmC,EAC/BK,EAAc,GADiB,IAM9BZ,EAASO,IANqB,mCAIjCpJ,EAJiC,EAIjCA,KACAlF,EALiC,EAKjCA,MAEM4O,EAAWrC,EAAKrH,GAGpByJ,GADEC,EACa5O,EAAM+L,MAAMiC,GAAS7H,KAAI,SAAAsE,GAAG,OAAImE,EAASnE,MAAMuB,KAAK,MAEpDhM,GATnB,2BAGqB,IANc,8BAgBnC,OAAO2O,EAGT,SAASvC,EAAgBjE,GACvB,QAASyE,EAAOiC,eAAiB1G,EAAQ2G,WAG3C,SAASzC,EAASlE,GAChB,OAAOA,EAAQ2G,WAAa,IAAIlC,EAAOmC,YAAY,CACjDC,SAAS,EACTC,MAAO,IACJrC,EAzCLmB,EAAQ,QAAG,WAAWO,GAAX,4EAGFY,EAAQxC,EAAUvK,QAAQgN,KAAKb,IAH7B,gBAMP,OAFMF,EAAQ1B,EAAU0C,aAAaF,GAJ9B,SAMD,CACJhK,KAAMiJ,EAAaC,EAAOc,EAAM5J,MAAOgJ,GACvCtO,MAAOoO,EAAMpO,OARR,iE,iCC7DbH,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAQR,SAAyBC,EAAWgJ,EAAKzK,GACvC,MAyBF,SAA0ByB,EAAWgJ,EAAKzK,GACxC,IAAI0O,EACAC,EACA5J,EACA6J,EAAS,GAEb,EAAG,CAED,IAAMC,EAASC,EAAkBrE,EADjCmE,GAAU,KAEVF,EAAQG,EAAOH,MACfC,EAAU,IAAI7N,IAAI4N,GAClB3J,GAAW,EAAIwG,EAAO/J,SAASC,EAAWA,EAAUC,KAAKmN,EAAOnN,MAAO,CACrE7B,OAAQG,EAAKH,OACbJ,qBAAsB,IAAIqB,IAAI+N,EAAOH,MAAMK,OAAO/O,EAAKP,qBAAuB0B,MAAM6N,KAAKhP,EAAKP,sBAAwB,KACtHC,mBAAoBM,EAAKN,mBACzBC,iBAAkBK,EAAKL,iBACvBC,sBAAuBI,EAAKJ,8BAEvBmF,EAASjC,aAAamM,MAAK,SAAA/J,GAAW,OAAIA,EAAYL,aAAe8J,EAAQrK,IAAIY,EAAYd,UAEtG,MAAO,CACLW,WACA2J,SA5CEQ,CAAiBzN,EAAWgJ,EAAKzK,GAFnC+E,EADF,EACEA,SACA2J,EAFF,EAEEA,MAEF,OAAO,SAAApD,GACL,IAAM6D,EAAsB,GAI5B,OAHA7D,EAAIrG,SAAQ,SAAC1D,EAAajB,GACxB6O,EAAoBT,EAAMpO,IAAMiB,KAE3B,SAAA+J,GACL,IAAMpK,GAAe,EAAIsJ,EAASvJ,uBAAuBqK,GAUzD,OARIpK,GACFhC,OAAOuB,KAAKS,GAAc+D,SAAQ,SAAA5E,GAChC,GAAInB,OAAOiG,UAAUC,eAAeC,KAAK8J,EAAqB9O,GAC5D,MAAM,IAAIJ,MAAM,sCAKfwB,EAAUsI,QAAO,EAAIyB,EAAUhK,SAASuD,EAAU7D,EAAehC,OAAOY,OAAOoB,EAAciO,GAAuBA,OA3BjI,IAAI3E,EAAWnH,EAAQ,KAEnBkI,EAASlI,EAAQ,KAEjBmI,EAAYnI,EAAQ,KAsDxB,SAASyL,EAAkBrE,EAAKmE,GAI9B,IAHA,IAAMF,EAAQ,GACVhN,EAAO+I,EAAI,GAENnK,EAAI,EAAGA,EAAImK,EAAI/J,OAAQJ,IAAK,CACnC,IAAMjB,EAAQ,GAAH,OAAMuP,GAAN,OAAetO,EAAI,GAC9BoO,EAAM3M,KAAK1C,GACXqC,GAAQrC,EAAQoL,EAAInK,GAGtB,MAAO,CACLoO,QACAhN,U,4GC3EJxC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,IAAM+P,GAAa,EACbC,GAAa,EACbC,GAAS,EACTC,GAAW,EACXX,GAAS,EAETY,EACJ,WAAYC,GAAkB,IAAXC,EAAW,uDAAJ,GAAI,UAC5BC,KAAKF,WAAQ,EACbE,KAAKxD,aAAU,EACfwD,KAAKP,gBAAa,EAClBO,KAAKN,gBAAa,EAClBM,KAAKC,sBAAmB,EACxBD,KAAKL,YAAS,EACdK,KAAKJ,cAAW,EAChBI,KAAKf,YAAS,EACde,KAAKE,aAAU,EACfF,KAAKG,WAAQ,EACbH,KAAKI,mBAAgB,EACrBJ,KAAKF,MAAQA,EACbE,KAAKxD,QAAUuD,EAAKvD,QACpBwD,KAAKP,aAAeM,EAAKN,WACzBO,KAAKN,aAAeK,EAAKL,WACzBM,KAAKC,mBAAqBF,EAAKE,iBAC/BD,KAAKL,SAAWI,EAAKJ,OACrBK,KAAKJ,WAAaG,EAAKH,SACvBI,KAAKf,SAAWc,EAAKd,OACrBe,KAAKE,UAAYH,EAAKG,QACtBF,KAAKG,MAAsB,MAAdJ,EAAKI,MAAgBJ,EAAKI,MAAQ,KAC/CH,KAAKI,cAAgB,MAInBC,EAAa,IAAIC,IAEvB,SAASC,EAAc9L,GAAoB,IAAdoD,EAAc,uDAAJ,GACrCA,EAAQ2E,QAAU/H,EAClB,IAAMqJ,EAAQ,IAAI+B,EAAUpL,EAAMoD,GAElC,OADAwI,EAAWjF,IAAI3G,EAAMqJ,GACdA,EAGT,SAAS0C,EAAY/L,EAAM0L,GACzB,OAAO,IAAIN,EAAUpL,EAAM,CACzBgL,aACAU,UAIJ,IAAMM,EAAU,CACdC,IAAK,IAAIb,EAAU,MAAO,CACxBH,eAEFiB,OAAQ,IAAId,EAAU,SAAU,CAC9BH,eAEFkB,QAAS,IAAIf,EAAU,UAAW,CAChCH,eAEFmB,OAAQ,IAAIhB,EAAU,SAAU,CAC9BH,eAEF1C,OAAQ,IAAI6C,EAAU,SAAU,CAC9BH,eAEFjL,KAAM,IAAIoL,EAAU,OAAQ,CAC1BH,eAEFoB,YAAa,IAAIjB,EAAU,QAAS,CAClCH,eAEFqB,IAAK,IAAIlB,EAAU,OACnBmB,SAAU,IAAInB,EAAU,IAAK,CAC3BJ,aACAC,eAEFuB,aAAc,IAAIpB,EAAU,KAAM,CAChCJ,aACAC,eAEFwB,YAAa,IAAIrB,EAAU,KAAM,CAC/BJ,aACAC,eAEFyB,SAAU,IAAItB,EAAU,KACxBuB,YAAa,IAAIvB,EAAU,MAC3BwB,OAAQ,IAAIxB,EAAU,IAAK,CACzBJ,aACAC,eAEF4B,UAAW,IAAIzB,EAAU,KAAM,CAC7BJ,aACAC,eAEF6B,WAAY,IAAI1B,EAAU,KAAM,CAC9BJ,aACAC,eAEF8B,OAAQ,IAAI3B,EAAU,IAAK,CACzBJ,eAEFgC,UAAW,IAAI5B,EAAU,MACzB6B,OAAQ,IAAI7B,EAAU,IAAK,CACzBJ,aACAC,eAEFiC,OAAQ,IAAI9B,EAAU,KACtB+B,MAAO,IAAI/B,EAAU,IAAK,CACxBJ,eAEFoC,KAAM,IAAIhC,EAAU,IAAK,CACvBJ,eAEFqC,MAAO,IAAIjC,EAAU,IAAK,CACxBJ,eAEFsC,YAAa,IAAIlC,EAAU,KAAM,CAC/BJ,eAEFuC,IAAK,IAAInC,EAAU,KACnBoC,SAAU,IAAIpC,EAAU,IAAK,CAC3BJ,eAEFyC,YAAa,IAAIrC,EAAU,MAC3BsC,MAAO,IAAItC,EAAU,KAAM,CACzBJ,eAEF2C,SAAU,IAAIvC,EAAU,YACxBwC,SAAU,IAAIxC,EAAU,MAAO,CAC7BJ,eAEF6C,UAAW,IAAIzC,EAAU,IAAK,CAC5BH,eAEF6C,aAAc,IAAI1C,EAAU,KAAM,CAChCJ,aACAC,eAEF8C,GAAI,IAAI3C,EAAU,KAClB4C,KAAM,IAAI5C,EAAU,IAAK,CACvBH,eAEFgD,qBAAsB,IAAI7C,EAAU,SACpC8C,GAAI,IAAI9C,EAAU,IAAK,CACrBJ,aACAG,aAEFzP,OAAQ,IAAI0P,EAAU,KAAM,CAC1BJ,aACAG,aAEFgD,YAAa,IAAI/C,EAAU,KAAM,CAC/BJ,aACAG,aAEFiD,aAAc,IAAIhD,EAAU,KAAM,CAChCJ,aACAG,aAEFkD,OAAQ,IAAIjD,EAAU,QAAS,CAC7BZ,SACAiB,SA5JY,EA6JZR,eAEFqD,KAAM,IAAIlD,EAAU,IAAK,CACvBJ,aACAR,SACAS,eAEFsD,MAAO,IAAInD,EAAU,IAAK,CACxBJ,aACAR,SACAS,eAEFuD,SAAUzC,EAAY,KAAM,GAC5B0C,kBAAmB1C,EAAY,KAAM,GACrC2C,UAAW3C,EAAY,KAAM,GAC7B4C,WAAY5C,EAAY,KAAM,GAC9B6C,UAAW7C,EAAY,IAAK,GAC5B8C,WAAY9C,EAAY,IAAK,GAC7B+C,WAAY/C,EAAY,IAAK,GAC7BgD,SAAUhD,EAAY,gBAAiB,GACvCiD,WAAYjD,EAAY,YAAa,GACrCkD,SAAUlD,EAAY,YAAa,GACnCmD,QAAS,IAAI9D,EAAU,MAAO,CAC5BJ,aACAU,MAAO,EACPlB,SACAS,eAEFkE,OAAQ,IAAI/D,EAAU,IAAK,CACzBM,MAAO,GACPT,eAEFmE,KAAM,IAAIhE,EAAU,IAAK,CACvBM,MAAO,KAET2D,MAAOtD,EAAY,IAAK,IACxBuD,SAAU,IAAIlE,EAAU,KAAM,CAC5BJ,aACAU,MAAO,GACPF,kBAAkB,IAEpB+D,OAAQzD,EAAc,SACtB0D,MAAO1D,EAAc,OAAQ,CAC3Bd,eAEFyE,OAAQ3D,EAAc,SACtB4D,UAAW5D,EAAc,YACzB6D,UAAW7D,EAAc,YACzBzJ,SAAUyJ,EAAc,UAAW,CACjCd,eAEF4E,IAAK9D,EAAc,KAAM,CACvBZ,SACAF,eAEF6E,MAAO/D,EAAc,OAAQ,CAC3Bd,eAEF8E,SAAUhE,EAAc,WACxBiE,KAAMjE,EAAc,MAAO,CACzBZ,WAEF8E,UAAWlE,EAAc,WAAY,CACnCb,eAEFgF,IAAKnE,EAAc,MACnBoE,QAASpE,EAAc,SAAU,CAC/Bd,eAEFmF,QAASrE,EAAc,UACvBsE,OAAQtE,EAAc,QAAS,CAC7Bd,aACAR,SACAS,eAEFoF,KAAMvE,EAAc,OACpBwE,KAAMxE,EAAc,OACpByE,OAAQzE,EAAc,SACtB0E,OAAQ1E,EAAc,QAAS,CAC7BZ,WAEFuF,MAAO3E,EAAc,QACrB4E,KAAM5E,EAAc,MAAO,CACzBd,aACAC,eAEF0F,MAAO7E,EAAc,OAAQ,CAC3Bb,eAEF2F,OAAQ9E,EAAc,QAAS,CAC7Bb,eAEF4F,OAAQ/E,EAAc,QAAS,CAC7Bb,eAEF6F,SAAUhF,EAAc,UAAW,CACjCd,eAEF+F,QAASjF,EAAc,UACvBkF,QAASlF,EAAc,SAAU,CAC/Bb,eAEFgG,MAAOnF,EAAc,OAAQ,CAC3Bb,eAEFiG,MAAOpF,EAAc,OAAQ,CAC3Bb,eAEFkG,OAAQrF,EAAc,QAAS,CAC7Bb,eAEFmG,IAAKtF,EAAc,KAAM,CACvBd,aACAU,MAAO,IAET2F,YAAavF,EAAc,aAAc,CACvCd,aACAU,MAAO,IAET4F,QAASxF,EAAc,SAAU,CAC/Bd,aACAR,SACAS,eAEFsG,MAAOzF,EAAc,OAAQ,CAC3Bd,aACAR,SACAS,eAEFuG,QAAS1F,EAAc,SAAU,CAC/Bd,aACAR,SACAS,gBAIEwG,EAAY,yBACZC,EAAa,IAAI/U,OAAO8U,EAAU1V,OAAQ,KAChD,SAAS4V,EAAUrU,GACjB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,KACL,KAAK,KACH,OAAO,EAET,QACE,OAAO,GAGb,IAAMsU,EAAiB,gCACjBC,EAAuB,IAAH,uEACpBC,EAA4B,IAAInV,OAAO,OAASkV,EAAqB9V,OAAS,QAAU,2CAA2CA,OAAQ,KACjJ,SAASgW,EAAazU,GACpB,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,G,IAIP0U,EACJ,WAAYC,EAAMC,GAAK,UACrB3G,KAAK0G,UAAO,EACZ1G,KAAK4G,YAAS,EACd5G,KAAK0G,KAAOA,EACZ1G,KAAK4G,OAASD,GAIZE,EACJ,WAAY9T,EAAO+T,GAAK,UACtB9G,KAAKjN,WAAQ,EACbiN,KAAK8G,SAAM,EACX9G,KAAK+G,cAAW,EAChB/G,KAAKgH,oBAAiB,EACtBhH,KAAKjN,MAAQA,EACbiN,KAAK8G,IAAMA,GAkCf,SAASG,EAAoB5S,EAAM6S,GAG1B,WAFuB7V,IAA1BgD,EAAK8S,iBACP9S,EAAK8S,iBAAmBD,GAExB,EAAA7S,EAAK8S,kBAAiBC,QAAtB,UAAiCF,IAIrC,SAASG,EAAiBhT,EAAM6S,GAC9B,QAA2B7V,IAAvBgD,EAAKiT,cACPjT,EAAKiT,cAAgBJ,OAChB,QAAiB7V,IAAb6V,EAAwB,QACjC,EAAA7S,EAAKiT,eAAcF,QAAnB,UAA8BF,KAIlC,SAASK,EAAoBlT,EAAMmT,EAAUC,GAI3C,IAHA,IAAIC,EAAc,KACd/W,EAAI6W,EAASzW,OAEM,OAAhB2W,GAAwB/W,EAAI,GACjC+W,EAAcF,IAAW7W,GAGP,OAAhB+W,GAAwBA,EAAY3U,MAAQ0U,EAAU1U,MACxDsU,EAAiBhT,EAAMoT,EAAUP,UAEjCD,EAAoBS,EAAaD,EAAUP,U,IAIzCS,E,wHACJ,SAAWxK,GACL6C,KAAK+G,WAAU5J,EAAQxK,IAAIoU,SAAW/G,KAAK+G,UAC/C/G,KAAKzL,MAAM2S,SAAS9U,KAAK+K,K,4BAG3B,SAAe9I,GACb,IACEuT,EACE5H,KAAKzL,MADPqT,aAEIC,EAAqBD,EAAa7W,OACxC,GAA2B,IAAvB8W,EAAJ,CACA,IAAIlX,EAAIkX,EAAqB,EACvBC,EAAgBF,EAAajX,GAE/BmX,EAAc/U,QAAUsB,EAAKyS,MAC/BgB,EAAcC,YAAc1T,EAC5B1D,KAOF,IAJA,IACSqX,EACL3T,EADFtB,MAGKpC,GAAK,EAAGA,IAAK,CAClB,IAAM8W,EAAYG,EAAajX,GACzBsX,EAAaR,EAAUX,IAE7B,KAAImB,EAAaD,GAIV,CACDC,IAAeD,IACjBP,EAAUS,aAAe7T,GAG3B,MARAoT,EAAUU,eAAiB9T,EAC3B2L,KAAKoI,gBAAgBX,GACrBG,EAAaxR,OAAOzF,EAAG,O,6BAW7B,SAAgB8W,GACd,IACEP,EACEO,EADFP,SAGF,GAA8B,OAA1BO,EAAUM,aAAmD,OAA3BN,EAAUS,aAChB,OAA1BT,EAAUM,aACZd,EAAoBQ,EAAUM,YAAab,GAGd,OAA3BO,EAAUS,eACZT,EAAUS,aAAaG,gBAAkBnB,OAEtC,CACL,IACkB7S,EAEdoT,EAFFU,eACOG,EACLb,EADF1U,MAGF,GAAgD,KAA5CiN,KAAKuI,MAAMC,WAAWF,EAAe,GACvC,OAAQjU,EAAKO,MACX,IAAK,mBACL,IAAK,gBACL,IAAK,mBACH2S,EAAoBlT,EAAMA,EAAKoU,WAAYhB,GAC3C,MAEF,IAAK,iBACL,IAAK,yBACHF,EAAoBlT,EAAMA,EAAKqU,UAAWjB,GAC1C,MAEF,IAAK,sBACL,IAAK,qBACL,IAAK,0BACL,IAAK,eACL,IAAK,cACL,IAAK,qBACHF,EAAoBlT,EAAMA,EAAKsU,OAAQlB,GACvC,MAEF,IAAK,kBACL,IAAK,eACL,IAAK,kBACHF,EAAoBlT,EAAMA,EAAKmT,SAAUC,GACzC,MAEF,IAAK,yBACL,IAAK,oBACHF,EAAoBlT,EAAMA,EAAKuU,WAAYnB,GAC3C,MAEF,QAEIJ,EAAiBhT,EAAM6S,QAI7BG,EAAiBhT,EAAM6S,M,uCAK7B,WAKE,IAJA,IACEU,EACE5H,KAAKzL,MADPqT,aAGOjX,EAAIiX,EAAa7W,OAAS,EAAGJ,GAAK,EAAGA,IAC5CqP,KAAKoI,gBAAgBR,EAAajX,IAGpCqP,KAAKzL,MAAMqT,aAAe,K,+CAG5B,SAAkCvT,GAChC,IACEuT,EACE5H,KAAKzL,MADPqT,aAGA7W,EACE6W,EADF7W,OAEF,GAAe,IAAXA,EAAJ,CACA,IAAM0W,EAAYG,EAAa7W,EAAS,GAEpC0W,EAAUM,cAAgB1T,IAC5BoT,EAAUM,YAAc,W,cA9K5B,aAAc,UACZ/H,KAAK6I,mBAAoB,EACzB7I,KAAK8I,6BAA8B,E,mCAGrC,SAAUrU,GACR,OAAOuL,KAAK9N,QAAQyC,IAAIF,K,6BAG1B,SAAgBsU,EAAQtU,GACtB,GAAIuL,KAAKgJ,UAAUD,GAAS,OAAO/I,KAAK9N,QAAQ4G,IAAIiQ,GAAQtU,O,MA0K1DwU,EAAa1Z,OAAO2Z,OAAO,CAC/BC,YAAa,4BACbC,sBAAuB,4CAGnBC,EAAgBC,EAAmB,CACvCC,oBAAqB,iCACrBC,iBAAkB,8DAClBC,sCAAuC,2EACvCC,uBAAwB,8DACxBC,oCAAqC,2DACrCC,+BAAgC,uDAChCC,uBAAwB,mFACxBC,wBAAyB,kDACzBC,eAAgB,uDAChBC,eAAgB,0DAChBC,uBAAwB,kEACxBC,sBAAuB,oDACvBC,6BAA8B,6DAC9BC,sBAAuB,4CACvBC,mBAAoB,0CACpBC,uBAAwB,oCACxBC,8BAA+B,wCAC/BC,sBAAuB,oKACvBC,qBAAsB,kFACtBC,qBAAsB,mHACtBC,mBAAoB,kDACpBC,qBAAsB,gDACtBC,mBAAoB,2CACpBC,uBAAwB,qGACxBC,qBAAsB,2CACtBC,uBAAwB,8CACxBC,gBAAiB,uEACjBC,eAAgB,sCAChBC,qBAAsB,qCACtBC,iBAAkB,qCAClBC,2BAA4B,0BAC5BC,sBAAuB,uIACvBC,8BAA+B,iEAC/BC,uBAAwB,8DACxBC,WAAY,0DACZC,SAAU,gEACVC,kCAAmC,sEACnCC,qBAAsB,kBACtBC,6BAA8B,6EAC9BC,cAAe,gCACfC,sBAAuB,oGACvBC,gCAAiC,6DACjCC,gBAAiB,kCACjBC,2BAA4B,mCAC5BC,yBAA0B,sCAC1BC,qBAAsB,yBACtBC,iBAAkB,4BAClBC,eAAgB,mBAChBC,aAAc,+BACdC,sBAAuB,iCACvBC,8BAA+B,uCAC/BC,2BAA4B,iCAC5BC,kBAAmB,yBACnBC,WAAY,gCACZC,kBAAmB,wCACnBC,cAAe,kBACfC,yBAA0B,iEAC1BC,yBAA0B,6BAC1BC,+BAAgC,4CAChCC,8BAA+B,mCAC/BC,8BAA+B,6BAC/BC,sBAAuB,yEACvBC,6BAA8B,oCAC9BC,mBAAoB,kCACpBC,oBAAqB,8EACrBC,0BAA2B,wCAC3BC,qBAAsB,mCACtBC,iBAAkB,4BAClBC,sBAAuB,8DACvBC,iBAAkB,qBAClBC,qBAAsB,6CACtBC,0BAA2B,sFAC3BC,iCAAkC,gDAClCC,4BAA6B,+DAC7BC,kCAAmC,0DACnCC,iCAAkC,iEAClCC,sBAAuB,8BACvBC,yBAA0B,4BAC1BC,kBAAmB,+BACnBC,iBAAkB,mCAClBC,iBAAkB,oCAClBC,iCAAkC,8FAClCC,kBAAmB,0FACnBC,sBAAuB,2DACvBC,2BAA4B,6DAC5BC,sBAAuB,kEACvBC,UAAW,uBACXC,mBAAoB,iDACpBC,iBAAkB,wCAClBC,kBAAmB,kJACnBC,2BAA4B,kHAC5BC,iBAAkB,6DAClBC,2BAA4B,mKAC5BC,gBAAiB,0GACjBC,oBAAqB,oGACrBC,+BAAgC,kEAChCC,+BAAgC,qEAChCC,oBAAqB,+DACrBC,uBAAwB,uEACxBC,kCAAmC,kHACnCC,oBAAqB,yGACrBC,yBAA0B,8BAC1BC,0CAA2C,oIAC3CC,4CAA6C,sIAC7CC,6CAA8C,uIAC9CC,cAAe,oDACfC,kBAAmB,gDACnBC,eAAgB,2HAChBC,gBAAiB,wDACjBC,aAAc,0CACdC,oBAAqB,oCACrBC,2BAA4B,+BAC5BC,eAAgB,sFAChBC,oBAAqB,yDACrBC,mBAAoB,wDACpBC,WAAY,yBACZC,gBAAiB,oJACjBC,kBAAmB,6CACnBC,kBAAmB,kDACnBC,yCAA0C,mIAC1CC,2CAA4C,qIAC5CC,4CAA6C,sIAC7CC,8BAA+B,mCAC/BC,iCAAkC,2FAClCC,yBAA0B,qCAC1BC,uBAAwB,0DACxBC,kBAAmB,2BACnBC,2BAA4B,8DAC5BC,6BAA8B,mEAC9BC,oBAAqB,kEACrBC,2BAA4B,0DAC5BC,uBAAwB,0JACxBC,uBAAwB,iCACxBC,gBAAiB,yDACjBC,gBAAiB,yBACjBC,mCAAoC,mFACpCC,gBAAiB,kDACjBC,2BAA4B,sDAC5BC,yBAA0B,8EAC1BC,kBAAmB,4DACnBC,wBAAyB,gDACzBC,8BAA+B,oDAC/BC,6BAA8B,mEAC9BC,iBAAkB,wHAClBC,oBAAqB,wBACrBC,mBAAoB,mCACpBC,mBAAoB,gCACpBC,qBAAsB,yBACtBC,iBAAkB,6CAClBC,uBAAwB,wDACxBC,iBAAkB,wDAClBC,0BAA2B,sDAC1B7J,EAAWE,aACR4J,EAAgCzJ,EAAmB,CACvD0J,wBAAyB,4DACzBC,oBAAqB,uEACpBhK,EAAWG,uBAEd,SAAS8J,EAAqBC,EAAYC,GAEtC,MAAqB,SAAjBA,GAA0C,sBAAfD,EACtB,yBAGJA,EAGT,SAAS7J,EAAmB+J,EAAUthB,EAAMqhB,GAC1C,IAAME,EAAY,GAQlB,OAPA/jB,OAAOuB,KAAKuiB,GAAU/d,SAAQ,SAAA6d,GAC5BG,EAAUH,GAAc5jB,OAAO2Z,OAAO,CACpCnX,OACAohB,WAAYD,EAAqBC,EAAYC,GAC7ChR,SAAUiR,EAASF,QAGhB5jB,OAAO2Z,OAAOoK,G,IAEjBC,E,oIACJ,SAAuBC,GAGrB,OADIA,IAAQxT,KAAKzL,MAAMxB,MAAaiN,KAAKzL,MAAMkf,SAAkBD,IAAQxT,KAAKzL,MAAMmf,aAAoB1T,KAAKzL,MAAMof,gBAAyBH,IAAQxT,KAAKzL,MAAMuS,IAAW9G,KAAKzL,MAAMqf,OAAgBJ,IAAQxT,KAAKzL,MAAMsf,WAAkB7T,KAAKzL,MAAMuf,cA9XzP,SAAqBvL,EAAOxK,GAC1B,IAEIa,EAFA8H,EAAO,EACPqN,EAAY,EAIhB,IAFA5N,EAAW6N,UAAY,GAEfpV,EAAQuH,EAAWtH,KAAK0J,KAAW3J,EAAM5J,MAAQ+I,GACvD2I,IACAqN,EAAY5N,EAAW6N,UAGzB,OAAO,IAAIvN,EAASC,EAAM3I,EAASgW,GAmX6OE,CAAYjU,KAAKuI,MAAOiL,K,mBAIxS,SAAMA,EAAN,GAIc,QAHZzhB,EAGY,EAHZA,KACAohB,EAEY,EAFZA,WACA/Q,EACY,EADZA,SACY,mBAARuG,EAAQ,iCAARA,EAAQ,kBACZ,OAAO3I,KAAKkU,cAAL,MAAAlU,KAAA,CAAmBwT,EAAK,CAC7BzhB,OACAohB,cACC/Q,GAHI,OAGSuG,M,4BAGlB,SAAe6K,EAAf,GAGc,QAFZzhB,EAEY,EAFZA,KACAqQ,EACY,EADZA,SACY,mBAARuG,EAAQ,iCAARA,EAAQ,kBACZ,IAAMhW,EAAMqN,KAAKmU,uBAAuBX,GAClC5gB,EAAUwP,EAASgS,QAAQ,WAAW,SAACC,EAAG1jB,GAAJ,OAAUgY,EAAOhY,MAA7C,YAAwDgC,EAAI+T,KAA5D,YAAoE/T,EAAIiU,OAAxE,KAEhB,GAAI5G,KAAKnI,QAAQyc,cAGf,IAFA,IAAMC,EAASvU,KAAKzL,MAAMggB,OAEjB5jB,EAAI4jB,EAAOxjB,OAAS,EAAGJ,GAAK,EAAGA,IAAK,CAC3C,IAAM4K,EAAQgZ,EAAO5jB,GAErB,GAAI4K,EAAMiY,MAAQA,EAChB,OAAOjkB,OAAOY,OAAOoL,EAAO,CAC1B3I,YAEG,GAAI2I,EAAMiY,IAAMA,EACrB,MAKN,OAAOxT,KAAKwU,OAAO,CACjBziB,OACAY,MACA6gB,OACC5gB,K,2BAGL,SAAc4gB,EAAKiB,EAAMC,GAA0B,2BAAR/L,EAAQ,iCAARA,EAAQ,kBACjD,IAAMhW,EAAMqN,KAAKmU,uBAAuBX,GAClC5gB,EAAU8hB,EAAcN,QAAQ,WAAW,SAACC,EAAG1jB,GAAJ,OAAUgY,EAAOhY,MAAlD,YAA6DgC,EAAI+T,KAAjE,YAAyE/T,EAAIiU,OAA7E,KAChB,OAAO5G,KAAKwU,OAAOjlB,OAAOY,OAAO,CAC/BwC,MACA6gB,OACCiB,GAAO7hB,K,oBAGZ,SAAO+hB,EAAc/hB,GACnB,IAAMF,EAAM,IAAIyW,YAAYvW,GAG5B,GAFArD,OAAOY,OAAOuC,EAAKiiB,GAEf3U,KAAKnI,QAAQyc,cAEf,OADKtU,KAAK4U,aAAa5U,KAAKzL,MAAMggB,OAAOniB,KAAKM,GACvCA,EAEP,MAAMA,M,GAjEciV,GA+ZpBkN,EACJ,WAAY/W,EAAOgX,GAAe,UAChC9U,KAAKlC,WAAQ,EACbkC,KAAK8U,mBAAgB,EACrB9U,KAAKlC,MAAQA,EACbkC,KAAK8U,gBAAkBA,GAIrBxb,EAAQ,CACZyb,MAAO,IAAIF,EAAW,KACtBzS,SAAU,IAAIyS,EAAW,KAAK,IAGhCpU,EAAQe,OAAOpB,cAAgB,SAAA4U,GAC7BA,EAAQC,OAGVxU,EAAQY,OAAOjB,cAAgBK,EAAQc,WAAWnB,cAAgBK,EAAQ8B,aAAanC,cAAgB,SAAA4U,GACrGA,EAAQ5iB,KAAKkH,EAAMyb,QAGrBtU,EAAQ6B,UAAUlC,cAAgB,SAAA4U,GAC5BA,EAAQA,EAAQjkB,OAAS,KAAOuI,EAAM8I,SACxC4S,EAAQC,MAERD,EAAQ5iB,KAAKkH,EAAM8I,WAIvB,IAAI8S,EAA+B,wrIAC/BC,EAA0B,ujFACxBC,EAA0B,IAAIhkB,OAAO,IAAM8jB,EAA+B,KAC1EG,EAAqB,IAAIjkB,OAAO,IAAM8jB,EAA+BC,EAA0B,KACrGD,EAA+BC,EAA0B,KACzwDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,OAAQ,KAE55B,SAASC,EAAczjB,EAAMqJ,GAG3B,IAFA,IAAIoY,EAAM,MAED7iB,EAAI,EAAGI,EAASqK,EAAIrK,OAAQJ,EAAII,EAAQJ,GAAK,EAAG,CAEvD,IADA6iB,GAAOpY,EAAIzK,IACDoB,EAAM,OAAO,EAEvB,IADAyhB,GAAOpY,EAAIzK,EAAI,KACJoB,EAAM,OAAO,EAG1B,OAAO,EAGT,SAAS0jB,EAAkB1jB,GACzB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQqjB,EAAwB1gB,KAAKghB,OAAOC,aAAa5jB,IAGnEyjB,EAAczjB,EAAMujB,KAE7B,SAASM,EAAiB7jB,GACxB,OAAIA,EAAO,GAAoB,KAATA,EAClBA,EAAO,MACPA,EAAO,MACPA,GAAQ,KACRA,EAAO,GAAoB,KAATA,EAClBA,GAAQ,MAERA,GAAQ,MACHA,GAAQ,KAAQsjB,EAAmB3gB,KAAKghB,OAAOC,aAAa5jB,IAG9DyjB,EAAczjB,EAAMujB,IAA+BE,EAAczjB,EAAMwjB,MAGhF,IAAMM,EAEI,CAAC,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,SAF9FA,EAGQ,CAAC,OAAQ,aAEjBC,GAAW,IAAI3kB,IAJV,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,WAKzT4kB,GAAyB,IAAI5kB,IAAI0kB,GACjCG,GAA6B,IAAI7kB,IAAI0kB,GAC3C,SAASI,GAAeC,EAAMC,GAC5B,OAAOA,GAAqB,UAATD,GAA6B,SAATA,EAEzC,SAAShY,GAAqBgY,EAAMC,GAClC,OAAOF,GAAeC,EAAMC,IAAaJ,GAAuBphB,IAAIuhB,GAEtE,SAASE,GAA6BF,GACpC,OAAOF,GAA2BrhB,IAAIuhB,GAExC,SAASG,GAAyBH,EAAMC,GACtC,OAAOjY,GAAqBgY,EAAMC,IAAaC,GAA6BF,GAE9E,SAASjY,GAAUiY,GACjB,OAAOJ,GAASnhB,IAAIuhB,GAMtB,IAAMI,GAAsB,IAAInlB,IAAI,CAAC,QAAS,OAAQ,QAAS,WAAY,WAAY,UAAW,KAAM,OAAQ,UAAW,MAAO,WAAY,KAAM,SAAU,SAAU,QAAS,MAAO,MAAO,QAAS,QAAS,OAAQ,MAAO,OAAQ,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,OAAQ,QAAS,KAAM,aAAc,SAAU,OAAQ,SAAU,aAAc,YAAa,MAAO,UAAW,UAAW,YAAa,SAAU,SAAU,QAAS,OAAQ,YAAa,OAAQ,UAKje,IAOMolB,GAAc,GAEdC,GAAkB,IAClBC,GAAYC,IAOZC,GAAmB,IACnBC,GAAqB,IACrBC,GAA2B,IAC3BC,GAA4B,KAC5BC,GAA6B,KAQ7BC,GAAkB,KAClBC,GAAY,GAeZC,GACJ,WAAYC,GAAO,UACjBnX,KAAKoX,IAAM,IAAIjmB,IACf6O,KAAKqX,QAAU,IAAIlmB,IACnB6O,KAAKsX,UAAY,IAAInmB,IACrB6O,KAAKmX,MAAQA,GAIXI,G,WACJ,WAAYC,EAAOrB,GAAU,UAC3BnW,KAAKyX,WAAa,GAClBzX,KAAK0X,iBAAmB,IAAIpX,IAC5BN,KAAK2X,sBAAwB,IAAIrX,IACjCN,KAAKwX,MAAQA,EACbxX,KAAKmW,SAAWA,E,kCAGlB,WACE,OA9DmB,EA8DXnW,KAAK4X,wBAA2C,I,sBAG1D,WACE,OA/DgB,GA+DR5X,KAAK6X,yBAAyC,I,4BAGxD,WACE,OAlEuB,GAkEf7X,KAAK6X,yBAAgD,I,mBAG/D,WACE,OAAQ7X,KAAK6X,wBAA0BtB,IAAe,I,2CAGxD,WACE,IAAMY,EAAQnX,KAAK6X,wBACnB,OAAQV,EAAQZ,IAAe,GAAkC,KA/E9C,EA+EkBY,K,yBAGvC,WACE,IAAK,IAAIxmB,EAAIqP,KAAKyX,WAAW1mB,OAAS,GAAIJ,IAAK,CAC7C,IACEwmB,EACEnX,KAAKyX,WAAW9mB,GADlBwmB,MAGF,GAlFqB,IAkFjBA,EACF,OAAO,EAGT,GAAY,IAARA,EACF,OAAO,K,8BAKb,WACE,OAnGmB,EAmGXnX,KAAK6X,yBAA4C,I,+BAG3D,WACE,OAAO7X,KAAK8X,2BAA2B9X,KAAK+X,kB,yBAG9C,SAAYZ,GACV,OAAO,IAAID,GAAMC,K,mBAGnB,SAAMA,GACJnX,KAAKyX,WAAWrlB,KAAK4N,KAAKgY,YAAYb,M,kBAGxC,WACEnX,KAAKyX,WAAWxC,Q,wCAGlB,SAA2B9b,GACzB,SAvHmB,EAuHTA,EAAMge,QAA2BnX,KAAKmW,UAxH9B,EAwH0Chd,EAAMge,S,yBAGpE,SAAY1iB,EAAMwjB,EAAazE,GAC7B,IAAIra,EAAQ6G,KAAK+X,eAEjB,GAjHuB,EAiHnBE,GAhHoB,GAgHgBA,EACtCjY,KAAKkY,0BAA0B/e,EAAO1E,EAAMwjB,EAAazE,GAjHnC,GAmHlByE,EACF9e,EAAMme,UAAUniB,IAAIV,GAEpB0E,EAAMke,QAAQliB,IAAIV,GAvHC,EA0HjBwjB,GACFjY,KAAKmY,mBAAmBhf,EAAO1E,QAE5B,GA9HY,EA8HRwjB,EACT,IAAK,IAAItnB,EAAIqP,KAAKyX,WAAW1mB,OAAS,EAAGJ,GAAK,IAC5CwI,EAAQ6G,KAAKyX,WAAW9mB,GACxBqP,KAAKkY,0BAA0B/e,EAAO1E,EAAMwjB,EAAazE,GACzDra,EAAMie,IAAIjiB,IAAIV,GACduL,KAAKmY,mBAAmBhf,EAAO1E,KAC3B0E,EAAMge,MAAQV,OAL+B9lB,GASjDqP,KAAKmW,UApJS,EAoJGhd,EAAMge,OACzBnX,KAAK0X,iBAAiBU,OAAO3jB,K,gCAIjC,SAAmB0E,EAAO1E,GACpBuL,KAAKmW,UA1JS,EA0JGhd,EAAMge,OACzBnX,KAAK0X,iBAAiBU,OAAO3jB,K,uCAIjC,SAA0B0E,EAAO1E,EAAMwjB,EAAazE,GAC9CxT,KAAKqY,oBAAoBlf,EAAO1E,EAAMwjB,IACxCjY,KAAKwX,MAAMhE,EAAKnK,EAAcsJ,iBAAkBle,K,iCAIpD,SAAoB0E,EAAO1E,EAAMwjB,GAC/B,SA5JoB,EA4JdA,KAzJiB,EA2JnBA,EACK9e,EAAMke,QAAQ1iB,IAAIF,IAAS0E,EAAMme,UAAU3iB,IAAIF,IAAS0E,EAAMie,IAAIziB,IAAIF,GA3JvD,GA8JpBwjB,EACK9e,EAAMke,QAAQ1iB,IAAIF,KAAUuL,KAAK8X,2BAA2B3e,IAAUA,EAAMie,IAAIziB,IAAIF,GAGtF0E,EAAMke,QAAQ1iB,IAAIF,MA7KF,EA6Ka0E,EAAMge,OAA8Bhe,EAAMke,QAAQiB,SAASC,OAAO7oB,QAAU+E,KAAUuL,KAAK8X,2BAA2B3e,IAAUA,EAAMme,UAAU3iB,IAAIF,M,8BAG1L,SAAiByE,GACf,IACEzE,EACEyE,EADFzE,KAEI+jB,EAAgBxY,KAAKyX,WAAW,GAEjCe,EAAcnB,QAAQ1iB,IAAIF,IAAU+jB,EAAcpB,IAAIziB,IAAIF,IAAU+jB,EAAclB,UAAU3iB,IAAIF,IACnGuL,KAAK0X,iBAAiBtc,IAAI3G,EAAMyE,EAAGnG,S,0BAIvC,WACE,OAAOiN,KAAKyX,WAAWzX,KAAKyX,WAAW1mB,OAAS,K,kCAGlD,WACE,IAAK,IAAIJ,EAAIqP,KAAKyX,WAAW1mB,OAAS,GAAIJ,IAAK,CAC7C,IACEwmB,EACEnX,KAAKyX,WAAW9mB,GADlBwmB,MAGF,GAAIA,EAAQV,GACV,OAAOU,K,mCAKb,WACE,IAAK,IAAIxmB,EAAIqP,KAAKyX,WAAW1mB,OAAS,GAAIJ,IAAK,CAC7C,IACEwmB,EACEnX,KAAKyX,WAAW9mB,GADlBwmB,MAGF,GAAY,IAARA,KAlNU,EAkN6BA,GACzC,OAAOA,O,KAOTsB,G,8BACJ,aAAqB,2CAAN1d,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJ2d,iBAAmB,IAAIvnB,IAFT,E,UADC+lB,IAQlByB,G,yHACJ,SAAYxB,GACV,OAAO,IAAIsB,GAAUtB,K,yBAGvB,SAAY1iB,EAAMwjB,EAAazE,GAC7B,IAAMra,EAAQ6G,KAAK+X,eAEnB,GAAIE,EAAclB,GAIhB,OAHA/W,KAAKkY,0BAA0B/e,EAAO1E,EAAMwjB,EAAazE,GACzDxT,KAAKmY,mBAAmBhf,EAAO1E,QAC/B0E,EAAMuf,iBAAiBvjB,IAAIV,GAI7B,gDAAqBiU,a,iCAGvB,SAAoBvP,EAAO1E,EAAMwjB,GAC/B,gEAAiCvP,eAE7BuP,EAAclB,OACR5d,EAAMuf,iBAAiB/jB,IAAIF,KAAU0E,EAAMke,QAAQ1iB,IAAIF,IAAS0E,EAAMme,UAAU3iB,IAAIF,O,8BAMhG,SAAiByE,GACV8G,KAAKyX,WAAW,GAAGiB,iBAAiB/jB,IAAIuE,EAAGzE,OAC9C,oDAAuByE,O,GA9BEqe,IAoCzBqB,G,WACJ,aAAc,UACZ5Y,KAAK6Y,YAAS,EACd7Y,KAAK8Y,aAAU,EACf9Y,KAAKyT,cAAW,EAChBzT,KAAK4T,YAAS,EACd5T,KAAKuU,OAAS,GACdvU,KAAK+Y,kBAAoB,EACzB/Y,KAAKgZ,UAAY,GACjBhZ,KAAKiZ,0BAA4B,GACjCjZ,KAAKkZ,wBAAyB,EAC9BlZ,KAAKmZ,QAAS,EACdnZ,KAAKoZ,oBAAqB,EAC1BpZ,KAAKqZ,gBAAiB,EACtBrZ,KAAKsZ,gBAAiB,EACtBtZ,KAAKuZ,kBAAmB,EACxBvZ,KAAKwZ,iBAAkB,EACvBxZ,KAAKyZ,aAAe,CAClBC,yBAA0B,EAC1BC,cAAe,MAEjB3Z,KAAK4Z,WAAY,EACjB5Z,KAAK6Z,4BAA6B,EAClC7Z,KAAK8Z,OAAS,GACd9Z,KAAK+Z,eAAiB,CAAC,IACvB/Z,KAAKkH,SAAW,GAChBlH,KAAK4H,aAAe,GACpB5H,KAAKwT,IAAM,EACXxT,KAAK+T,UAAY,EACjB/T,KAAKpL,KAAO6L,EAAQM,IACpBf,KAAKtQ,MAAQ,KACbsQ,KAAKjN,MAAQ,EACbiN,KAAK8G,IAAM,EACX9G,KAAK8T,cAAgB,KACrB9T,KAAK2T,gBAAkB,KACvB3T,KAAK0T,aAAe,EACpB1T,KAAK6T,WAAa,EAClB7T,KAAKgV,QAAU,CAAC1b,EAAMyb,OACtB/U,KAAKga,aAAc,EACnBha,KAAKia,aAAc,EACnBja,KAAKka,aAAe,IAAI5Z,IACxBN,KAAKma,aAAe,E,8BAGtB,SAAKtiB,GACHmI,KAAK6Y,QAAgC,IAAvBhhB,EAAQuiB,cAAsD,IAAvBviB,EAAQuiB,YAAoD,WAAvBviB,EAAQtF,YAClGyN,KAAK8Y,QAAUjhB,EAAQwiB,UACvBra,KAAKyT,SAAWzT,KAAK4T,OAAS5T,KAAKsa,gB,yBAGrC,WACE,OAAO,IAAI7T,EAASzG,KAAK8Y,QAAS9Y,KAAKwT,IAAMxT,KAAK+T,a,mBAGpD,SAAMwG,GAIJ,IAHA,IAAMhmB,EAAQ,IAAIqkB,EACZ9nB,EAAOvB,OAAOuB,KAAKkP,MAEhBrP,EAAI,EAAGI,EAASD,EAAKC,OAAQJ,EAAII,EAAQJ,IAAK,CACrD,IAAMD,EAAMI,EAAKH,GACb6pB,EAAMxa,KAAKtP,IAEV6pB,GAAc/oB,MAAMC,QAAQ+oB,KAC/BA,EAAMA,EAAIroB,SAGZoC,EAAM7D,GAAO8pB,EAGf,OAAOjmB,M,KAKPkmB,GAAW,SAAiB1oB,GAC9B,OAAOA,GAAQ,IAAMA,GAAQ,IAEzB2oB,GAAoB,IAAIvpB,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC3DwpB,GAAoC,CACxCC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACzCC,IAAK,CAAC,GAAI,GAAI,GAAI,MAEdC,GAAkC,CACxCA,IAAsC,CAAC,GAAI,KAC3CA,GAAgCC,IAAhC,YAA0CD,GAAgCE,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,KACnGF,GAAgCG,IAAhC,YAA0CH,GAAgCC,KAA1E,CAA+E,GAAI,KACnFD,GAAgCD,IAAhC,YAA0CC,GAAgCG,KAA1E,CAA+E,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,M,IACvHC,GACJ,WAAY3mB,GAAO,UACjByL,KAAKpL,KAAOL,EAAMK,KAClBoL,KAAKtQ,MAAQ6E,EAAM7E,MACnBsQ,KAAKjN,MAAQwB,EAAMxB,MACnBiN,KAAK8G,IAAMvS,EAAMuS,IACjB9G,KAAKrN,IAAM,IAAIkU,EAAetS,EAAMkf,SAAUlf,EAAMqf,SAIlDuH,G,8BACJ,WAAYtjB,EAAS0Q,GAAO,wBAC1B,gBACKqM,iBAAc,EACnB,EAAKwG,OAAS,GACd,EAAK7mB,MAAQ,IAAIqkB,GACjB,EAAKrkB,MAAM8mB,KAAKxjB,GAChB,EAAK0Q,MAAQA,EACb,EAAKxX,OAASwX,EAAMxX,OACpB,EAAK6jB,aAAc,EARO,E,mCAW5B,SAAU9W,GACRkC,KAAKob,OAAOrqB,OAASiP,KAAKzL,MAAM4lB,aAChCna,KAAKob,OAAOhpB,KAAK0L,KACfkC,KAAKzL,MAAM4lB,e,kBAGf,WACEna,KAAKsb,sBAEDtb,KAAKnI,QAAQujB,QACfpb,KAAKub,UAAU,IAAIL,GAAMlb,KAAKzL,QAGhCyL,KAAKzL,MAAMsf,WAAa7T,KAAKzL,MAAMuS,IACnC9G,KAAKzL,MAAMmf,aAAe1T,KAAKzL,MAAMxB,MACrCiN,KAAKzL,MAAMuf,cAAgB9T,KAAKzL,MAAMqf,OACtC5T,KAAKzL,MAAMof,gBAAkB3T,KAAKzL,MAAMkf,SACxCzT,KAAKwb,c,iBAGP,SAAI5mB,GACF,QAAIoL,KAAKpB,MAAMhK,KACboL,KAAKuY,QACE,K,mBAMX,SAAM3jB,GACJ,OAAOoL,KAAKzL,MAAMK,OAASA,I,kCAG7B,SAAqBL,GACnB,MAAO,CACLif,IAAKjf,EAAMif,IACX9jB,MAAO,KACPkF,KAAML,EAAMK,KACZ7B,MAAOwB,EAAMxB,MACb+T,IAAKvS,EAAMuS,IACX+M,WAAYtf,EAAMuS,IAClBkO,QAAS,CAAChV,KAAKyb,cACftC,OAAQ5kB,EAAM4kB,U,uBAIlB,WACE,IAAMuC,EAAM1b,KAAKzL,MACjByL,KAAKzL,MAAQyL,KAAK2b,qBAAqBD,GACvC1b,KAAK4U,aAAc,EACnB5U,KAAKwb,YACLxb,KAAK4U,aAAc,EACnB,IAAMgH,EAAO5b,KAAKzL,MAElB,OADAyL,KAAKzL,MAAQmnB,EACNE,I,4BAGT,WACE,OAAO5b,KAAK6b,oBAAoB7b,KAAKzL,MAAMif,O,iCAG7C,SAAoBA,GAElB,OADAnN,EAAe2N,UAAYR,EACpBnN,EAAe3R,KAAKsL,KAAKuI,OAASlC,EAAe2N,UAAYR,I,+BAGtE,WACE,OAAOxT,KAAKuI,MAAMC,WAAWxI,KAAK8b,oB,4BAGpC,SAAetI,GACb,IAAIuI,EAAK/b,KAAKuI,MAAMC,WAAWgL,GAE/B,GAAsB,SAAZ,MAALuI,MAA6BvI,EAAMxT,KAAKuI,MAAMxX,OAAQ,CACzD,IAAMirB,EAAQhc,KAAKuI,MAAMC,WAAWgL,GAEX,SAAZ,MAARwI,KACHD,EAAK,QAAiB,KAALA,IAAe,KAAe,KAARC,IAI3C,OAAOD,I,uBAGT,SAAUlD,GAAQ,WAChB7Y,KAAKzL,MAAMskB,OAASA,EAEhBA,IACF7Y,KAAKzL,MAAM2lB,aAAa5kB,SAAQ,SAAC1C,EAAS4gB,GAAV,OAAkB,EAAKgE,MAAMhE,EAAK5gB,MAClEoN,KAAKzL,MAAM2lB,aAAa+B,W,wBAI5B,WACE,OAAOjc,KAAKzL,MAAMygB,QAAQhV,KAAKzL,MAAMygB,QAAQjkB,OAAS,K,uBAGxD,WACE,IAAM0qB,EAAazb,KAAKyb,aACnBA,EAAW3G,eAAe9U,KAAKkc,YACpClc,KAAKzL,MAAMxB,MAAQiN,KAAKzL,MAAMif,IACzBxT,KAAK4U,cAAa5U,KAAKzL,MAAMkf,SAAWzT,KAAKzL,MAAM+lB,eAEpDta,KAAKzL,MAAMif,KAAOxT,KAAKjP,OACzBiP,KAAKmc,YAAY1b,EAAQM,KAIvB0a,IAAeniB,EAAM8I,SACvBpC,KAAKoc,gBAELpc,KAAKqc,iBAAiBrc,KAAKsc,eAAetc,KAAKzL,MAAMif,Q,8BAIzD,WACE,IAAIC,EACCzT,KAAK4U,cAAanB,EAAWzT,KAAKzL,MAAM+lB,eAC7C,IAAMvnB,EAAQiN,KAAKzL,MAAMif,IACnB1M,EAAM9G,KAAKuI,MAAMvX,QAAQ,KAAM+B,EAAQ,GAC7C,IAAa,IAAT+T,EAAY,MAAM9G,KAAKwX,MAAMzkB,EAAOsW,EAAckJ,qBAItD,IAHAvS,KAAKzL,MAAMif,IAAM1M,EAAM,EACvBX,EAAW6N,UAAYjhB,EAAQ,EAExBoT,EAAWzR,KAAKsL,KAAKuI,QAAUpC,EAAW6N,WAAalN,KAC1D9G,KAAKzL,MAAMukB,QACb9Y,KAAKzL,MAAMwf,UAAY5N,EAAW6N,UAGpC,IAAIhU,KAAK4U,YAAT,CACA,IAAMzX,EAAU,CACdvI,KAAM,eACNlF,MAAOsQ,KAAKuI,MAAMpW,MAAMY,EAAQ,EAAG+T,GACnC/T,QACA+T,IAAKA,EAAM,EACXnU,IAAK,IAAIkU,EAAe4M,EAAUzT,KAAKzL,MAAM+lB,gBAG/C,OADIta,KAAKnI,QAAQujB,QAAQpb,KAAKub,UAAUpe,GACjCA,K,6BAGT,SAAgBof,GACd,IACI9I,EADE1gB,EAAQiN,KAAKzL,MAAMif,IAEpBxT,KAAK4U,cAAanB,EAAWzT,KAAKzL,MAAM+lB,eAC7C,IAAIkC,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAAO+I,GAEjD,GAAIvc,KAAKzL,MAAMif,IAAMxT,KAAKjP,OACxB,MAAQqV,EAAUoW,MAASxc,KAAKzL,MAAMif,IAAMxT,KAAKjP,QAC/CyrB,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAI1C,IAAIxT,KAAK4U,YAAT,CACA,IAAM9N,EAAM9G,KAAKzL,MAAMif,IAEjBrW,EAAU,CACdvI,KAAM,cACNlF,MAHYsQ,KAAKuI,MAAMpW,MAAMY,EAAQwpB,EAAWzV,GAIhD/T,QACA+T,MACAnU,IAAK,IAAIkU,EAAe4M,EAAUzT,KAAKzL,MAAM+lB,gBAG/C,OADIta,KAAKnI,QAAQujB,QAAQpb,KAAKub,UAAUpe,GACjCA,K,uBAGT,WACE,IAAMsf,EAAazc,KAAKzL,MAAMif,IACxBtM,EAAW,GAEjBwV,EAAM,KAAO1c,KAAKzL,MAAMif,IAAMxT,KAAKjP,QAAQ,CACzC,IAAMyrB,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAE5C,OAAQgJ,GACN,KAAK,GACL,KAAK,IACL,KAAK,IACDxc,KAAKzL,MAAMif,IACb,MAEF,KAAK,GAC+C,KAA9CxT,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,MACvCxT,KAAKzL,MAAMif,IAGjB,KAAK,GACL,KAAK,KACL,KAAK,OACDxT,KAAKzL,MAAMif,MACXxT,KAAKzL,MAAMukB,QACb9Y,KAAKzL,MAAMwf,UAAY/T,KAAKzL,MAAMif,IAClC,MAEF,KAAK,GACH,OAAQxT,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,IAC7C,KAAK,GAED,IAAMrW,EAAU6C,KAAK2c,wBAELtrB,IAAZ8L,IACF6C,KAAK4c,WAAWzf,GACZ6C,KAAKnI,QAAQglB,eAAe3V,EAAS9U,KAAK+K,IAGhD,MAGJ,KAAK,GAED,IAAMA,EAAU6C,KAAK8c,gBAAgB,QAErBzrB,IAAZ8L,IACF6C,KAAK4c,WAAWzf,GACZ6C,KAAKnI,QAAQglB,eAAe3V,EAAS9U,KAAK+K,IAGhD,MAGJ,QACE,MAAMuf,EAGV,MAEF,QACE,GAAIlW,EAAagW,KACbxc,KAAKzL,MAAMif,SACR,GAAW,KAAPgJ,GAAcxc,KAAKmW,SAavB,IAAW,KAAPqG,GAAcxc,KAAKmW,SAc5B,MAAMuG,EAbN,IAAMlJ,EAAMxT,KAAKzL,MAAMif,IAEvB,GAAuC,KAAnCxT,KAAKuI,MAAMC,WAAWgL,EAAM,IAAgD,KAAnCxT,KAAKuI,MAAMC,WAAWgL,EAAM,IAAgD,KAAnCxT,KAAKuI,MAAMC,WAAWgL,EAAM,GAQhH,MAAMkJ,EAPN,IAAMvf,EAAU6C,KAAK8c,gBAAgB,QAErBzrB,IAAZ8L,IACF6C,KAAK4c,WAAWzf,GACZ6C,KAAKnI,QAAQglB,eAAe3V,EAAS9U,KAAK+K,QArBZ,CACtC,IAAMqW,EAAMxT,KAAKzL,MAAMif,IAEvB,GAAuC,KAAnCxT,KAAKuI,MAAMC,WAAWgL,EAAM,IAAgD,KAAnCxT,KAAKuI,MAAMC,WAAWgL,EAAM,MAA6B,IAAfiJ,GAAoBzc,KAAKzL,MAAMwf,UAAY0I,GAQhI,MAAMC,EAPN,IAAMvf,EAAU6C,KAAK8c,gBAAgB,QAErBzrB,IAAZ8L,IACF6C,KAAK4c,WAAWzf,GACZ6C,KAAKnI,QAAQglB,eAAe3V,EAAS9U,KAAK+K,MAyB1D,GAAI+J,EAASnW,OAAS,EAAG,CACvB,IACMgsB,EAAoB,CACxBhqB,MAAO0pB,EACP3V,IAHU9G,KAAKzL,MAAMif,IAIrBtM,WACAa,YAAa,KACbG,aAAc,KACdC,eAAgB,MAElBnI,KAAKzL,MAAMqT,aAAaxV,KAAK2qB,M,yBAIjC,SAAYnoB,EAAM4lB,GAChBxa,KAAKzL,MAAMuS,IAAM9G,KAAKzL,MAAMif,IAC5B,IAAMwJ,EAAWhd,KAAKzL,MAAMK,KAC5BoL,KAAKzL,MAAMK,KAAOA,EAClBoL,KAAKzL,MAAM7E,MAAQ8qB,EAEdxa,KAAK4U,cACR5U,KAAKzL,MAAMqf,OAAS5T,KAAKzL,MAAM+lB,cAC/Bta,KAAKI,cAAc4c,M,kCAIvB,WACE,GAAuB,IAAnBhd,KAAKzL,MAAMif,MAAaxT,KAAKid,wBAAjC,CAIA,IAAMC,EAAUld,KAAKzL,MAAMif,IAAM,EAC3B+E,EAAOvY,KAAKsc,eAAeY,GAEjC,GAAI3E,GAAQ,IAAMA,GAAQ,GACxB,MAAMvY,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAc8H,0BAGjD,GAAa,MAAToH,GAAyB,KAATA,GAAevY,KAAKgJ,UAAU,kBAAmB,CAGnE,GAFAhJ,KAAKmd,aAAa,kBAE2C,SAAzDnd,KAAKod,gBAAgB,iBAAkB,cACzC,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAc,MAAT+E,EAAelP,EAAc0G,6CAA+C1G,EAAc2H,6CAG7HhR,KAAKzL,MAAMif,KAAO,EAEL,MAAT+E,EACFvY,KAAKmc,YAAY1b,EAAQc,YAEzBvB,KAAKmc,YAAY1b,EAAQQ,mBAElBwU,EAAkB8C,MACzBvY,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQK,YAAad,KAAKqd,UAAU9E,KACnC,KAATA,KACPvY,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQK,YAAad,KAAKqd,cAE3Crd,KAAKsd,SAAS7c,EAAQgC,KAAM,M,2BAIhC,WACE,IAAM8V,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEhD+E,GAAQ,IAAMA,GAAQ,GACxBvY,KAAKud,YAAW,GAIL,KAAThF,GAA6D,KAA9CvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,IACxDxT,KAAKzL,MAAMif,KAAO,EAClBxT,KAAKmc,YAAY1b,EAAQ4B,cAEvBrC,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQuB,Q,6BAI7B,WAGe,KAFAhC,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAGlDxT,KAAKsd,SAAS7c,EAAQmC,YAAa,GAEnC5C,KAAKsd,SAAS7c,EAAQqD,MAAO,K,mCAIjC,WACE,GAAuB,IAAnB9D,KAAKzL,MAAMif,KAAaxT,KAAKjP,OAAS,EAAG,OAAO,EACpD,IAAIyrB,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAChD,GAAW,KAAPgJ,EAAW,OAAO,EACtB,IAAMzpB,EAAQiN,KAAKzL,MAAMif,IAGzB,IAFAxT,KAAKzL,MAAMif,KAAO,GAEVpN,EAAUoW,MAASxc,KAAKzL,MAAMif,IAAMxT,KAAKjP,QAC/CyrB,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAGxC,IAAM9jB,EAAQsQ,KAAKuI,MAAMpW,MAAMY,EAAQ,EAAGiN,KAAKzL,MAAMif,KAErD,OADAxT,KAAKmc,YAAY1b,EAAQiC,qBAAsBhT,IACxC,I,mCAGT,SAAsBqC,GACpB,IAAI6C,EAAgB,KAAT7C,EAAc0O,EAAQoD,KAAOpD,EAAQmD,OAC5C4Z,EAAQ,EACRjF,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAErC,KAATzhB,GAAwB,KAATwmB,IACjBiF,IACAjF,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAC9C5e,EAAO6L,EAAQsD,UAGJ,KAATwU,GAAgBvY,KAAKzL,MAAM4kB,SAC7BqE,IACA5oB,EAAgB,KAAT7C,EAAc0O,EAAQoC,aAAepC,EAAQtQ,QAGtD6P,KAAKsd,SAAS1oB,EAAM4oB,K,gCAGtB,SAAmBzrB,GACjB,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEpD,GAAI+E,IAASxmB,EAAb,CAUA,GAAa,MAATA,EAAc,CAChB,GAAa,KAATwmB,EAEF,YADAvY,KAAKsd,SAAS7c,EAAQwC,SAAU,GAIlC,GAAIjD,KAAKgJ,UAAU,mBAA8B,MAATuP,EAAc,CACpD,GAA6D,QAAzDvY,KAAKod,gBAAgB,iBAAkB,cACzC,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcwG,2CAKjD,OAFA7P,KAAKzL,MAAMif,KAAO,OAClBxT,KAAKmc,YAAY1b,EAAQgB,WAI3B,GAAIzB,KAAKgJ,UAAU,mBAA8B,KAATuP,EAAa,CACnD,GAA6D,QAAzDvY,KAAKod,gBAAgB,iBAAkB,cACzC,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcyH,0CAKjD,OAFA9Q,KAAKzL,MAAMif,KAAO,OAClBxT,KAAKmc,YAAY1b,EAAQW,cAKhB,KAATmX,EAKJvY,KAAKsd,SAAkB,MAATvrB,EAAe0O,EAAQ4C,UAAY5C,EAAQ8C,WAAY,GAJnEvD,KAAKsd,SAAS7c,EAAQtQ,OAAQ,QArCoB,KAA9C6P,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GACzCxT,KAAKsd,SAAS7c,EAAQtQ,OAAQ,GAE9B6P,KAAKsd,SAAkB,MAATvrB,EAAe0O,EAAQ0C,UAAY1C,EAAQ2C,WAAY,K,6BAyC3E,WAGe,KAFApD,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAGlDxT,KAAKsd,SAAS7c,EAAQtQ,OAAQ,GAE9B6P,KAAKsd,SAAS7c,EAAQ6C,WAAY,K,gCAItC,SAAmBvR,GACjB,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEhD+E,IAASxmB,EAKA,KAATwmB,EACFvY,KAAKsd,SAAS7c,EAAQtQ,OAAQ,GAE9B6P,KAAKsd,SAAS7c,EAAQkD,QAAS,GAP/B3D,KAAKsd,SAAS7c,EAAQqC,OAAQ,K,6BAWlC,SAAgB/Q,GACd,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAChDiK,EAAO,EAEX,GAAIlF,IAASxmB,EAGX,OAFA0rB,EAAgB,KAAT1rB,GAA6D,KAA9CiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAAY,EAAI,EAExB,KAAjDxT,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAMiK,QACzCzd,KAAKsd,SAAS7c,EAAQtQ,OAAQstB,EAAO,QAIvCzd,KAAKsd,SAAS7c,EAAQiD,SAAU+Z,GAIrB,KAATlF,IACFkF,EAAO,GAGTzd,KAAKsd,SAAS7c,EAAQgD,WAAYga,K,+BAGpC,SAAkB1rB,GAChB,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEpD,GAAa,KAAT+E,EAKJ,OAAa,KAATxmB,GAAwB,KAATwmB,GACjBvY,KAAKzL,MAAMif,KAAO,OAClBxT,KAAKmc,YAAY1b,EAAQ0B,aAI3BnC,KAAKsd,SAAkB,KAATvrB,EAAc0O,EAAQkC,GAAKlC,EAAQsC,KAAM,GAVrD/C,KAAKsd,SAAS7c,EAAQ+C,SAAwD,KAA9CxD,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAAY,EAAI,K,gCAa3F,WACE,IAAM+E,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAC9CkK,EAAQ1d,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAExC,KAAT+E,EACY,KAAVmF,EACF1d,KAAKsd,SAAS7c,EAAQtQ,OAAQ,GAE9B6P,KAAKsd,SAAS7c,EAAQyC,kBAAmB,GAEzB,KAATqV,GAAiBmF,GAAS,IAAMA,GAAS,MAIhD1d,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQwB,YAJzBjC,KAAKzL,MAAMif,KAAO,EAClBxT,KAAKmc,YAAY1b,EAAQyB,gB,8BAO7B,SAAiBnQ,GACf,OAAQA,GACN,KAAK,GAEH,YADAiO,KAAK2d,gBAGP,KAAK,GAGH,QAFE3d,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQiB,QAG3B,KAAK,GAGH,QAFE1B,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQkB,QAG3B,KAAK,GAGH,QAFE3B,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQoB,MAG3B,KAAK,GAGH,QAFE7B,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQmB,OAG3B,KAAK,GACH,GAAI5B,KAAKgJ,UAAU,mBAAmE,MAA9ChJ,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAAY,CACzF,GAA6D,QAAzDxT,KAAKod,gBAAgB,iBAAkB,cACzC,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAc0H,4CAGjD/Q,KAAKzL,MAAMif,KAAO,EAClBxT,KAAKmc,YAAY1b,EAAQS,mBAEvBlB,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQO,UAG3B,OAEF,KAAK,GAGH,QAFEhB,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQU,UAG3B,KAAK,IACH,GAAInB,KAAKgJ,UAAU,mBAAmE,MAA9ChJ,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAAY,CACzF,GAA6D,QAAzDxT,KAAKod,gBAAgB,iBAAkB,cACzC,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcyG,6CAGjD9P,KAAKzL,MAAMif,KAAO,EAClBxT,KAAKmc,YAAY1b,EAAQa,iBAEvBtB,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQY,QAG3B,OAEF,KAAK,IAGH,QAFErB,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQe,QAG3B,KAAK,GAQH,YAPIxB,KAAKgJ,UAAU,iBAAiE,KAA9ChJ,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAC3ExT,KAAKsd,SAAS7c,EAAQsB,YAAa,MAEjC/B,KAAKzL,MAAMif,IACbxT,KAAKmc,YAAY1b,EAAQqB,SAK7B,KAAK,GAEH,YADA9B,KAAK4d,qBAGP,KAAK,GAGH,QAFE5d,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQ6B,WAG3B,KAAK,GAED,IAAMiW,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEpD,GAAa,MAAT+E,GAAyB,KAATA,EAElB,YADAvY,KAAK6d,gBAAgB,IAIvB,GAAa,MAATtF,GAAyB,KAATA,EAElB,YADAvY,KAAK6d,gBAAgB,GAIvB,GAAa,KAATtF,GAAwB,KAATA,EAEjB,YADAvY,KAAK6d,gBAAgB,GAK3B,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEH,YADA7d,KAAKud,YAAW,GAGlB,KAAK,GACL,KAAK,GAEH,YADAvd,KAAK8d,WAAW/rB,GAGlB,KAAK,GAEH,YADAiO,KAAK+d,kBAGP,KAAK,GACL,KAAK,GAEH,YADA/d,KAAKge,sBAAsBjsB,GAG7B,KAAK,IACL,KAAK,GAEH,YADAiO,KAAKie,mBAAmBlsB,GAG1B,KAAK,GAEH,YADAiO,KAAKke,kBAGP,KAAK,GACL,KAAK,GAEH,YADAle,KAAKme,mBAAmBpsB,GAG1B,KAAK,GACL,KAAK,GAEH,YADAiO,KAAKoe,gBAAgBrsB,GAGvB,KAAK,GACL,KAAK,GAEH,YADAiO,KAAKqe,kBAAkBtsB,GAGzB,KAAK,IAEH,YADAiO,KAAKsd,SAAS7c,EAAQuC,MAAO,GAG/B,KAAK,GAGH,QAFEhD,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQ+B,IAG3B,KAAK,GAEH,YADAxC,KAAKse,uBAGP,KAAK,GAEH,YADAte,KAAKue,WAGP,QACE,GAAI9I,EAAkB1jB,GAEpB,YADAiO,KAAKue,SAASxsB,GAMpB,MAAMiO,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAc2D,yBAA0B0I,OAAO8I,cAAczsB,M,sBAGhG,SAAS6C,EAAM6oB,GACb,IAAMtjB,EAAM6F,KAAKuI,MAAMpW,MAAM6N,KAAKzL,MAAMif,IAAKxT,KAAKzL,MAAMif,IAAMiK,GAC9Dzd,KAAKzL,MAAMif,KAAOiK,EAClBzd,KAAKmc,YAAYvnB,EAAMuF,K,wBAGzB,WAOE,IANA,IACIskB,EAASC,EADP3rB,EAAQiN,KAAKzL,MAAMxB,MAAQ,EAG/BygB,EACExT,KAAKzL,MADPif,OAGQA,EAAK,CACb,GAAIA,GAAOxT,KAAKjP,OACd,MAAMiP,KAAKwX,MAAMzkB,EAAOsW,EAAcmJ,oBAGxC,IAAMgK,EAAKxc,KAAKuI,MAAMC,WAAWgL,GAEjC,GAAIpN,EAAUoW,GACZ,MAAMxc,KAAKwX,MAAMzkB,EAAOsW,EAAcmJ,oBAGxC,GAAIiM,EACFA,GAAU,MACL,CACL,GAAW,KAAPjC,EACFkC,GAAU,OACL,GAAW,KAAPlC,GAAakC,EACtBA,GAAU,OACL,GAAW,KAAPlC,IAAckC,EACvB,MAGFD,EAAiB,KAAPjC,GAId,IAAMmC,EAAU3e,KAAKuI,MAAMpW,MAAMY,EAAOygB,KACtCA,EAGF,IAFA,IAAIoL,EAAO,GAEJpL,EAAMxT,KAAKjP,QAAQ,CACxB,IAAMgrB,EAAK/b,KAAKsc,eAAe9I,GACzBqL,EAAOnJ,OAAOC,aAAaoG,GAEjC,GAAIrB,GAAkB/lB,IAAIonB,GACpB6C,EAAKE,SAASD,IAChB7e,KAAKwX,MAAMhE,EAAM,EAAGnK,EAAc8B,0BAE/B,KAAIyK,EAAiBmG,IAAc,KAAPA,EAGjC,MAFA/b,KAAKwX,MAAMhE,EAAM,EAAGnK,EAAcoE,wBAKlC+F,EACFoL,GAAQC,EAGV7e,KAAKzL,MAAMif,IAAMA,EACjBxT,KAAKmc,YAAY1b,EAAQI,OAAQ,CAC/Bke,QAASJ,EACTxH,MAAOyH,M,qBAIX,SAAQI,EAAOC,EAAKC,GAOlB,IAPsD,IAA1BC,IAA0B,yDAChDpsB,EAAQiN,KAAKzL,MAAMif,IACnB4L,EAA8B,KAAVJ,EAAerE,GAAkCE,IAAMF,GAAkCC,UAC7GyE,EAA4B,KAAVL,EAAelE,GAAgCD,IAAgB,KAAVmE,EAAelE,GAAgCG,IAAgB,IAAV+D,EAAclE,GAAgCC,IAAMD,GAAgCE,IAClN3d,GAAU,EACViiB,EAAQ,EAEH3uB,EAAI,EAAG2F,EAAW,MAAP2oB,EAAcM,IAAWN,EAAKtuB,EAAI2F,IAAK3F,EAAG,CAC5D,IAAMoB,EAAOiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAC1CgH,OAAG,EAEP,GAAa,KAATzoB,EAAJ,CA4BA,IATEyoB,EADEzoB,GAAQ,GACJA,EAAO,GAAK,GACTA,GAAQ,GACXA,EAAO,GAAK,GACT0oB,GAAS1oB,GACZA,EAAO,GAEPwtB,MAGGP,EACT,GAAIhf,KAAKnI,QAAQyc,eAAiBkG,GAAO,EACvCA,EAAM,EACNxa,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAQpC,EAAI,EAAG0Y,EAAckD,aAAcyS,OAC5D,KAAIE,EAIT,MAHA1E,EAAM,EACNnd,GAAU,IAMZ2C,KAAKzL,MAAMif,IACb8L,EAAQA,EAAQN,EAAQxE,MAzCxB,CACE,IAAMgF,EAAOxf,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAC9C+E,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,KAEb,IAAnC6L,EAAgBruB,QAAQunB,IAEjB6G,EAAkBpuB,QAAQwuB,IAAS,GAAKJ,EAAkBpuB,QAAQunB,IAAS,GAAKkH,OAAOC,MAAMnH,KADtGvY,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcoI,4BAKtC0N,GACHnf,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcmF,oCAGzCxO,KAAKzL,MAAMif,KA8BjB,OAAIxT,KAAKzL,MAAMif,MAAQzgB,GAAgB,MAAPksB,GAAejf,KAAKzL,MAAMif,IAAMzgB,IAAUksB,GAAO5hB,EACxE,KAGFiiB,I,6BAGT,SAAgBN,GACd,IAAMjsB,EAAQiN,KAAKzL,MAAMif,IACrBmM,GAAW,EACf3f,KAAKzL,MAAMif,KAAO,EAClB,IAAMgH,EAAMxa,KAAK4f,QAAQZ,GAEd,MAAPxE,GACFxa,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAQ,EAAGsW,EAAckD,aAAcyS,GAG/D,IAAMzG,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAE9C,GAAa,MAAT+E,IACAvY,KAAKzL,MAAMif,IACbmM,GAAW,OACN,GAAa,MAATpH,EACT,MAAMvY,KAAKwX,MAAMzkB,EAAOsW,EAAciD,gBAGxC,GAAImJ,EAAkBzV,KAAKsc,eAAetc,KAAKzL,MAAMif,MACnD,MAAMxT,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAckF,kBAGjD,GAAIoR,EAAJ,CACE,IAAMxlB,EAAM6F,KAAKuI,MAAMpW,MAAMY,EAAOiN,KAAKzL,MAAMif,KAAKY,QAAQ,QAAS,IACrEpU,KAAKmc,YAAY1b,EAAQE,OAAQxG,QAInC6F,KAAKmc,YAAY1b,EAAQC,IAAK8Z,K,wBAGhC,SAAWqF,GACT,IAAM9sB,EAAQiN,KAAKzL,MAAMif,IACrBsM,GAAU,EACVH,GAAW,EACXI,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArB7f,KAAK4f,QAAQ,KACjC5f,KAAKwX,MAAMzkB,EAAOsW,EAAcyD,eAGlC,IAAMoT,EAAiBlgB,KAAKzL,MAAMif,IAAMzgB,GAAS,GAAsC,KAAjCiN,KAAKuI,MAAMC,WAAWzV,GAE5E,GAAImtB,EAAgB,CAClB,IAAMC,EAAUngB,KAAKuI,MAAMpW,MAAMY,EAAOiN,KAAKzL,MAAMif,KAGnD,GAFAxT,KAAKogB,uBAAuBrtB,EAAOsW,EAAcoH,qBAE5CzQ,KAAKzL,MAAMskB,OAAQ,CACtB,IAAMwH,EAAgBF,EAAQnvB,QAAQ,KAElCqvB,EAAgB,GAClBrgB,KAAKwX,MAAM6I,EAAgBttB,EAAOsW,EAAcyJ,2BAIpDmN,EAAUC,IAAmB,OAAOxrB,KAAKyrB,GAG3C,IAAI5H,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KA6C5C,GA3Ca,KAAT+E,GAAgB0H,MAChBjgB,KAAKzL,MAAMif,IACbxT,KAAK4f,QAAQ,IACbE,GAAU,EACVvH,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,MAG5B,KAAT+E,GAAwB,MAATA,GAAkB0H,IAGvB,MAFb1H,EAAOvY,KAAKuI,MAAMC,aAAaxI,KAAKzL,MAAMif,OAEd,KAAT+E,KACfvY,KAAKzL,MAAMif,IAGU,OAArBxT,KAAK4f,QAAQ,KACf5f,KAAKwX,MAAMzkB,EAAOsW,EAAc0D,0BAGlC+S,GAAU,EACVE,GAAc,EACdzH,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,MAG7B,MAAT+E,KACEuH,GAAWI,IACblgB,KAAKwX,MAAMzkB,EAAOsW,EAAc+C,wBAGhCpM,KAAKzL,MAAMif,IACbmM,GAAW,GAGA,MAATpH,IACFvY,KAAKmd,aAAa,UAAWnd,KAAKzL,MAAMif,MAEpCwM,GAAeE,IACjBlgB,KAAKwX,MAAMzkB,EAAOsW,EAAciD,kBAGhCtM,KAAKzL,MAAMif,IACbuM,GAAY,GAGVtK,EAAkBzV,KAAKsc,eAAetc,KAAKzL,MAAMif,MACnD,MAAMxT,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAckF,kBAGjD,IAAMpU,EAAM6F,KAAKuI,MAAMpW,MAAMY,EAAOiN,KAAKzL,MAAMif,KAAKY,QAAQ,SAAU,IAEtE,GAAIuL,EACF3f,KAAKmc,YAAY1b,EAAQE,OAAQxG,QAInC,GAAI4lB,EACF/f,KAAKmc,YAAY1b,EAAQG,QAASzG,OADpC,CAKA,IAAMqgB,EAAMyF,EAAUK,SAASnmB,EAAK,GAAKomB,WAAWpmB,GACpD6F,KAAKmc,YAAY1b,EAAQC,IAAK8Z,M,2BAGhC,SAAcgG,GACZ,IACIzuB,EAEJ,GAAW,MAHAiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAG5B,CACd,IAAMiN,IAAYzgB,KAAKzL,MAAMif,IAI7B,GAHAzhB,EAAOiO,KAAK0gB,YAAY1gB,KAAKuI,MAAMvX,QAAQ,IAAKgP,KAAKzL,MAAMif,KAAOxT,KAAKzL,MAAMif,KAAK,EAAMgN,KACtFxgB,KAAKzL,MAAMif,IAEA,OAATzhB,GAAiBA,EAAO,QAAU,CACpC,IAAIyuB,EAGF,OAAO,KAFPxgB,KAAKwX,MAAMiJ,EAASpX,EAAcgD,wBAMtCta,EAAOiO,KAAK0gB,YAAY,GAAG,EAAOF,GAGpC,OAAOzuB,I,wBAGT,SAAW4uB,GAIT,IAHA,IAAIC,EAAM,GACNC,IAAe7gB,KAAKzL,MAAMif,MAErB,CACP,GAAIxT,KAAKzL,MAAMif,KAAOxT,KAAKjP,OACzB,MAAMiP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcoJ,oBAGnD,IAAM+J,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAC5C,GAAIgJ,IAAOmE,EAAO,MAElB,GAAW,KAAPnE,EACFoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/CoN,GAAO5gB,KAAK8gB,iBAAgB,GAC5BD,EAAa7gB,KAAKzL,MAAMif,SACnB,GAAW,OAAPgJ,GAAsB,OAAPA,IACtBxc,KAAKzL,MAAMif,MACXxT,KAAKzL,MAAMukB,QACb9Y,KAAKzL,MAAMwf,UAAY/T,KAAKzL,MAAMif,QAC7B,IAAIpN,EAAUoW,GACnB,MAAMxc,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcoJ,sBAE/CzS,KAAKzL,MAAMif,KAIjBoN,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,OAC/CxT,KAAKmc,YAAY1b,EAAQzD,OAAQ4jB,K,2BAGnC,WAKE,IAJA,IAAIA,EAAM,GACNC,EAAa7gB,KAAKzL,MAAMif,IACxBuN,GAAkB,IAEb,CACP,GAAI/gB,KAAKzL,MAAMif,KAAOxT,KAAKjP,OACzB,MAAMiP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcqJ,sBAGnD,IAAM8J,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAE5C,GAAW,KAAPgJ,GAAoB,KAAPA,GAA2D,MAA9Cxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GACnE,OAAIxT,KAAKzL,MAAMif,MAAQxT,KAAKzL,MAAMxB,OAASiN,KAAKpB,MAAM6B,EAAQ2B,UACjD,KAAPoa,GACFxc,KAAKzL,MAAMif,KAAO,OAClBxT,KAAKmc,YAAY1b,EAAQ8B,kBAGvBvC,KAAKzL,MAAMif,SACbxT,KAAKmc,YAAY1b,EAAQ6B,aAK7Bse,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,UAC/CxT,KAAKmc,YAAY1b,EAAQ2B,SAAU2e,EAAkB,KAAOH,IAI9D,GAAW,KAAPpE,EAAW,CACboE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/C,IAAMiL,EAAUze,KAAK8gB,iBAAgB,GAErB,OAAZrC,EACFsC,GAAkB,EAElBH,GAAOnC,EAGToC,EAAa7gB,KAAKzL,MAAMif,SACnB,GAAIpN,EAAUoW,GAAK,CAIxB,OAHAoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,OAC7CxT,KAAKzL,MAAMif,IAELgJ,GACN,KAAK,GAC2C,KAA1Cxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,QACjCxT,KAAKzL,MAAMif,IAGjB,KAAK,GACHoN,GAAO,KACP,MAEF,QACEA,GAAOlL,OAAOC,aAAa6G,KAI7Bxc,KAAKzL,MAAMukB,QACb9Y,KAAKzL,MAAMwf,UAAY/T,KAAKzL,MAAMif,IAClCqN,EAAa7gB,KAAKzL,MAAMif,UAEtBxT,KAAKzL,MAAMif,O,oCAKnB,SAAuBA,EAAK5gB,GACtBoN,KAAKzL,MAAMskB,SAAW7Y,KAAKzL,MAAM2lB,aAAavlB,IAAI6e,GACpDxT,KAAKwX,MAAMhE,EAAK5gB,GAEhBoN,KAAKzL,MAAM2lB,aAAa9e,IAAIoY,EAAK5gB,K,6BAIrC,SAAgBouB,GACd,IAAMR,GAAkBQ,EAClBxE,EAAKxc,KAAKuI,MAAMC,aAAaxI,KAAKzL,MAAMif,KAG9C,SAFExT,KAAKzL,MAAMif,IAELgJ,GACN,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IAED,IAAMzqB,EAAOiO,KAAK0gB,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAATzuB,EAAgB,KAAO2jB,OAAOC,aAAa5jB,GAGtD,KAAK,IAED,IAAMA,EAAOiO,KAAKihB,cAAcT,GAChC,OAAgB,OAATzuB,EAAgB,KAAO2jB,OAAO8I,cAAczsB,GAGvD,KAAK,IACH,MAAO,KAET,KAAK,GACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,IACH,MAAO,KAET,KAAK,GAC2C,KAA1CiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,QACjCxT,KAAKzL,MAAMif,IAGjB,KAAK,GACHxT,KAAKzL,MAAMwf,UAAY/T,KAAKzL,MAAMif,MAChCxT,KAAKzL,MAAMukB,QAEf,KAAK,KACL,KAAK,KACH,MAAO,GAET,KAAK,GACL,KAAK,GACH,GAAIkI,EACF,OAAO,KAEPhhB,KAAKogB,uBAAuBpgB,KAAKzL,MAAMif,IAAM,EAAGnK,EAAcmH,qBAGlE,QACE,GAAIgM,GAAM,IAAMA,GAAM,GAAI,CACxB,IAAMiE,EAAUzgB,KAAKzL,MAAMif,IAAM,EAE7B0N,EADUlhB,KAAKuI,MAAMpK,OAAO6B,KAAKzL,MAAMif,IAAM,EAAG,GAAG5U,MAAM,WACxC,GACjBuiB,EAAQb,SAASY,EAAU,GAE3BC,EAAQ,MACVD,EAAWA,EAAS/uB,MAAM,GAAI,GAC9BgvB,EAAQb,SAASY,EAAU,IAG7BlhB,KAAKzL,MAAMif,KAAO0N,EAASnwB,OAAS,EACpC,IAAMwnB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAE9C,GAAiB,MAAb0N,GAA6B,KAAT3I,GAAwB,KAATA,EAAa,CAClD,GAAIyI,EACF,OAAO,KAEPhhB,KAAKogB,uBAAuBK,EAASpX,EAAcmH,qBAIvD,OAAOkF,OAAOC,aAAawL,GAG7B,OAAOzL,OAAOC,aAAa6G,M,yBAIjC,SAAYyC,EAAKC,EAAUsB,GACzB,IAAMC,EAAUzgB,KAAKzL,MAAMif,IACrB4N,EAAIphB,KAAK4f,QAAQ,GAAIX,EAAKC,GAAU,GAU1C,OARU,OAANkC,IACEZ,EACFxgB,KAAKwX,MAAMiJ,EAASpX,EAAcmD,uBAElCxM,KAAKzL,MAAMif,IAAMiN,EAAU,GAIxBW,I,uBAGT,SAAUC,GACRrhB,KAAKzL,MAAM0lB,aAAc,EACzB,IAAI/D,EAAO,GACLnjB,EAAQiN,KAAKzL,MAAMif,IACrBqN,EAAa7gB,KAAKzL,MAAMif,IAM5B,SAJkBniB,IAAdgwB,IACFrhB,KAAKzL,MAAMif,KAAO6N,GAAa,MAAS,EAAI,GAGvCrhB,KAAKzL,MAAMif,IAAMxT,KAAKjP,QAAQ,CACnC,IAAMyrB,EAAKxc,KAAKsc,eAAetc,KAAKzL,MAAMif,KAE1C,GAAIoC,EAAiB4G,GACnBxc,KAAKzL,MAAMif,KAAOgJ,GAAM,MAAS,EAAI,MAChC,IAAW,KAAPA,EAyBT,MAxBAxc,KAAKzL,MAAM0lB,aAAc,EACzB/D,GAAQlW,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAChD,IAAM8N,EAAWthB,KAAKzL,MAAMif,IACtB+N,EAAkBvhB,KAAKzL,MAAMif,MAAQzgB,EAAQ0iB,EAAoBG,EAEvE,GAAgD,MAA5C5V,KAAKuI,MAAMC,aAAaxI,KAAKzL,MAAMif,KAAc,CACnDxT,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcwE,sBACzCgT,EAAa7gB,KAAKzL,MAAMif,IAAM,EAC9B,WAGAxT,KAAKzL,MAAMif,IACb,IAAMgO,EAAMxhB,KAAKihB,eAAc,GAEnB,OAARO,IACGD,EAAgBC,IACnBxhB,KAAKwX,MAAM8J,EAAUjY,EAAcgC,4BAGrC6K,GAAQR,OAAO8I,cAAcgD,IAG/BX,EAAa7gB,KAAKzL,MAAMif,KAM5B,OAAO0C,EAAOlW,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,O,sBAGxD,SAAS6N,GACP,IAAMnL,EAAOlW,KAAKqd,UAAUgE,GACtBzsB,EAAOyL,EAAWvH,IAAIod,IAASzV,EAAQhM,KAC7CuL,KAAKmc,YAAYvnB,EAAMshB,K,iCAGzB,WACE,IAAMuL,EAAKzhB,KAAKzL,MAAMK,KAAK4H,QAEvBilB,GAAMzhB,KAAKzL,MAAM0lB,aACnBja,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcqD,2BAA4B+U,K,2BAI3E,SAAczE,GACZ,IAAI0E,EAAuBC,EAEqD,OAA/ED,GAAyBC,EAAmB3hB,KAAKzL,MAAMK,MAAMwL,gBAAkCshB,EAAsBhsB,KAAKisB,EAAkB3hB,KAAKzL,MAAMygB,a,GAnvCpIzB,GAwvClBqO,GACJ,aAAc,UACZ5hB,KAAK6hB,aAAe,IAAI1wB,IACxB6O,KAAK8hB,cAAgB,IAAIxhB,IACzBN,KAAK2X,sBAAwB,IAAIrX,KAI/ByhB,G,WACJ,WAAYvK,GAAO,UACjBxX,KAAKxE,MAAQ,GACbwE,KAAK2X,sBAAwB,IAAIrX,IACjCN,KAAKwX,MAAQA,E,iCAGf,WACE,OAAOxX,KAAKxE,MAAMwE,KAAKxE,MAAMzK,OAAS,K,mBAGxC,WACEiP,KAAKxE,MAAMpJ,KAAK,IAAIwvB,M,kBAGtB,WAIE,IAHA,IAAMI,EAAgBhiB,KAAKxE,MAAMyZ,MAC3BgN,EAAUjiB,KAAKiiB,UAErB,MAA0BzwB,MAAM6N,KAAK2iB,EAAcrK,uBAAnD,eAA2E,CAAtE,gBAAOljB,EAAP,KAAa+e,EAAb,KACCyO,EACGA,EAAQtK,sBAAsBhjB,IAAIF,IACrCwtB,EAAQtK,sBAAsBvc,IAAI3G,EAAM+e,GAG1CxT,KAAKwX,MAAMhE,EAAKnK,EAAc6D,8BAA+BzY,M,gCAKnE,SAAmBA,EAAMytB,EAAa1O,GACpC,IAAM2O,EAAaniB,KAAKiiB,UACpBG,EAAYD,EAAWN,aAAaltB,IAAIF,GAE5C,GAtmDgC4tB,EAsmD5BH,EAA2C,CAC7C,IAAMI,EAAWF,GAAaD,EAAWL,cAAchpB,IAAIrE,GAE3D,GAAI6tB,GAKFF,GA9mD4BC,EA4mDZC,MA5mDYD,EA6mDZH,KAhnDU,EA6mDRI,MA7mDQ,EA8mDRJ,KAIFC,EAAWL,cAAc1J,OAAO3jB,QACtC2tB,GACVD,EAAWL,cAAc1mB,IAAI3G,EAAMytB,GAInCE,GACFpiB,KAAKwX,MAAMhE,EAAKnK,EAAcuG,yBAA0Bnb,GAG1D0tB,EAAWN,aAAa1sB,IAAIV,GAC5B0tB,EAAWxK,sBAAsBS,OAAO3jB,K,4BAG1C,SAAeA,EAAM+e,GACnB,IAAI2O,EADoB,MAGLniB,KAAKxE,OAHA,IAGxB,2BACE,IADG2mB,EAA0B,SACdN,aAAaltB,IAAIF,GAAO,OAJjB,8BAOpB0tB,EACFA,EAAWxK,sBAAsBvc,IAAI3G,EAAM+e,GAE3CxT,KAAKwX,MAAMhE,EAAKnK,EAAc6D,8BAA+BzY,O,KAW7D8tB,G,WACJ,aAAgC,IAApB3tB,EAAoB,uDANd,EAMc,UAC9BoL,KAAKpL,UAAO,EACZoL,KAAKpL,KAAOA,E,wDAGd,WACE,OAVyC,IAUlCoL,KAAKpL,MAXwB,IAWyBoL,KAAKpL,O,6CAGpE,WACE,OAb0B,IAanBoL,KAAKpL,S,KAKV4tB,G,8BACJ,WAAY5tB,GAAM,wBAChB,cAAMA,IACD2f,OAAS,IAAIjU,IAFF,E,gDAKlB,SAAuBkT,EAAKpR,GAC1BpC,KAAKuU,OAAOnZ,IAAIoY,EAAKpR,K,mCAGvB,SAAsBoR,GACpBxT,KAAKuU,OAAO6D,OAAO5E,K,2BAGrB,SAAciP,GACZziB,KAAKuU,OAAOjf,QAAQmtB,O,GAfYF,IAoB9BG,G,WACJ,WAAYlL,GAAO,UACjBxX,KAAKxE,MAAQ,CAAC,IAAI+mB,IAClBviB,KAAKwX,MAAQA,E,+BAGf,SAAMre,GACJ6G,KAAKxE,MAAMpJ,KAAK+G,K,kBAGlB,WACE6G,KAAKxE,MAAMyZ,Q,6CAGb,SAAgCzB,EAAKpR,GAOnC,IANA,IACE5G,EACEwE,KADFxE,MAEE7K,EAAI6K,EAAMzK,OAAS,EACnBoI,EAAQqC,EAAM7K,IAEVwI,EAAMwpB,mCAAmC,CAC/C,IAAIxpB,EAAMypB,iCAGR,OAFAzpB,EAAM0pB,uBAAuBrP,EAAKpR,GAKpCjJ,EAAQqC,IAAQ7K,GAGlBqP,KAAKwX,MAAMhE,EAAKpR,K,gDAGlB,SAAmCoR,EAAKpR,GACtC,IACE5G,EACEwE,KADFxE,MAEIrC,EAAQqC,EAAMA,EAAMzK,OAAS,GAEnC,GAAIoI,EAAMwpB,kCACR3iB,KAAKwX,MAAMhE,EAAKpR,OACX,KAAIjJ,EAAMypB,iCAGf,OAFAzpB,EAAM0pB,uBAAuBrP,EAAKpR,M,6CAMtC,SAAgCoR,EAAKpR,GAOnC,IANA,IACE5G,EACEwE,KADFxE,MAEE7K,EAAI6K,EAAMzK,OAAS,EACnBoI,EAAQqC,EAAM7K,GAEXwI,EAAMypB,kCA/F4B,IAgGnCzpB,EAAMvE,MACRuE,EAAM0pB,uBAAuBrP,EAAKpR,GAGpCjJ,EAAQqC,IAAQ7K,K,+BAIpB,WAAoB,WAEhB6K,EACEwE,KADFxE,MAEIuc,EAAevc,EAAMA,EAAMzK,OAAS,GACrCgnB,EAAa6K,kCAClB7K,EAAa+K,eAAc,SAAC1gB,EAAUoR,GACpC,EAAKgE,MAAMhE,EAAKpR,GAIhB,IAHA,IAAIzR,EAAI6K,EAAMzK,OAAS,EACnBoI,EAAQqC,EAAM7K,GAEXwI,EAAMypB,kCACXzpB,EAAM4pB,sBAAsBvP,GAC5Bra,EAAQqC,IAAQ7K,U,KAexB,SAASqyB,KACP,OAAO,IAAIT,GAGb,IAKMU,G,WACJ,aAAc,UACZjjB,KAAKkjB,OAAS,G,+BAGhB,SAAM/L,GACJnX,KAAKkjB,OAAO9wB,KAAK+kB,K,kBAGnB,WACEnX,KAAKkjB,OAAOjO,Q,0BAGd,WACE,OAAOjV,KAAKkjB,OAAOljB,KAAKkjB,OAAOnyB,OAAS,K,oBAG1C,WACE,OArBgB,EAqBRiP,KAAKmjB,gBAAgC,I,oBAG/C,WACE,OA1BgB,EA0BRnjB,KAAKmjB,gBAAgC,I,qBAG/C,WACE,OA5BiB,EA4BTnjB,KAAKmjB,gBAAiC,I,iBAGhD,WACE,OA/Ba,EA+BLnjB,KAAKmjB,gBAA6B,M,KAI9C,SAASC,GAAcC,EAASC,GAC9B,OAAQD,EAtCU,EAsCc,IAAMC,EAvCpB,EAuCgD,G,IAG9DC,G,sHACJ,SAASlvB,EAAM3D,EAAK8pB,GACbnmB,KACSA,EAAKmvB,MAAQnvB,EAAKmvB,OAAS,IACnC9yB,GAAO8pB,K,0BAGf,SAAaiJ,GACX,OAAOzjB,KAAKpB,MAAM6B,EAAQgD,aAAezD,KAAKzL,MAAM7E,QAAU+zB,I,8BAGhE,SAAiBA,GACXzjB,KAAK0jB,aAAaD,GACpBzjB,KAAKuY,OAELvY,KAAK2jB,WAAW,KAAMljB,EAAQgD,c,0BAIlC,SAAahP,GACX,OAAOuL,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKzL,MAAM7E,QAAU+E,IAASuL,KAAKzL,MAAM0lB,c,kCAG9E,SAAqB2J,EAAWnvB,GAC9B,IAAMovB,EAAUD,EAAYnvB,EAAK1D,OAEjC,GAAIiP,KAAKuI,MAAMpW,MAAMyxB,EAAWC,KAAapvB,EAAM,CACjD,IAAMqvB,EAAS9jB,KAAKuI,MAAMC,WAAWqb,GACrC,QAASjO,EAAiBkO,IAAiC,SAAZ,MAATA,IAGxC,OAAO,I,mCAGT,SAAsBrvB,GACpB,IAAM8jB,EAAOvY,KAAK8b,iBAClB,OAAO9b,KAAK+jB,qBAAqBxL,EAAM9jB,K,2BAGzC,SAAcA,GACZ,OAAOuL,KAAKgkB,aAAavvB,IAASuL,KAAKikB,IAAIxjB,EAAQhM,Q,8BAGrD,SAAiBA,EAAM2N,GAChBpC,KAAKkkB,cAAczvB,IAAOuL,KAAK2jB,WAAW,KAAMvhB,K,gCAGvD,WACE,OAAOpC,KAAKpB,MAAM6B,EAAQM,MAAQf,KAAKpB,MAAM6B,EAAQe,SAAWxB,KAAKmkB,0B,mCAGvE,WACE,OAAOje,EAAUxR,KAAKsL,KAAKuI,MAAMpW,MAAM6N,KAAKzL,MAAMsf,WAAY7T,KAAKzL,MAAMxB,U,mCAG3E,WAEE,OADAwT,EAA0ByN,UAAYhU,KAAKzL,MAAMuS,IAC1CP,EAA0B7R,KAAKsL,KAAKuI,S,8BAG7C,WACE,OAAOvI,KAAKikB,IAAIxjB,EAAQoB,OAAS7B,KAAKokB,uB,uBAGxC,WAA2B,IAAjBC,IAAiB,0DACrBA,EAAWrkB,KAAKskB,mBAAqBtkB,KAAKikB,IAAIxjB,EAAQoB,QAC1D7B,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAYxK,EAAcuE,oB,oBAGlD,SAAOhZ,EAAM4e,GACXxT,KAAKikB,IAAIrvB,IAASoL,KAAK2jB,WAAWnQ,EAAK5e,K,2BAGzC,WAA6C,IAA/BhC,EAA+B,uDAArB,oBAClBoN,KAAKzL,MAAMxB,MAAQiN,KAAKzL,MAAMsf,YAChC7T,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAY,CAChC9hB,KAAMkX,EAAWE,YACjBgK,WAAY,kBACZ/Q,SAAUxP,M,wBAKhB,SAAW4gB,GAIR,IAJa+Q,EAIb,uDAJ6B,CAC9BxyB,KAAMkX,EAAWE,YACjBgK,WAAY,kBACZ/Q,SAAU,oBAUV,MARImiB,aAAyB1kB,IAC3B0kB,EAAgB,CACdxyB,KAAMkX,EAAWE,YACjBgK,WAAY,kBACZ/Q,SAAU,+BAAF,OAAiCmiB,EAAczkB,MAA/C,OAINE,KAAKwX,MAAa,MAAPhE,EAAcA,EAAMxT,KAAKzL,MAAMxB,MAAOwxB,K,0BAGzD,SAAa9vB,EAAM+e,GACjB,IAAKxT,KAAKgJ,UAAUvU,GAClB,MAAMuL,KAAKkU,cAAqB,MAAPV,EAAcA,EAAMxT,KAAKzL,MAAMxB,MAAO,CAC7DyxB,cAAe,CAAC/vB,IADZ,yEAE+DA,EAF/D,MAKR,OAAO,I,6BAGT,SAAgBsK,EAAOyU,GAAK,WAC1B,IAAKzU,EAAMO,MAAK,SAAA8hB,GAAC,OAAI,EAAKpY,UAAUoY,MAClC,MAAMphB,KAAKkU,cAAqB,MAAPV,EAAcA,EAAMxT,KAAKzL,MAAMxB,MAAO,CAC7DyxB,cAAezlB,GADX,6FAEmFA,EAAMrD,KAAK,MAF9F,Q,sBAMV,SAASxB,GAAmC,IAA/BuqB,EAA+B,uDAApBzkB,KAAKzL,MAAMmwB,QAC3BC,EAAc,CAClBtwB,KAAM,MAGR,IACE,IAAMA,EAAO6F,GAAG,WAAiB,IAAhB7F,EAAgB,uDAAT,KAEtB,MADAswB,EAAYtwB,KAAOA,EACbswB,KAGR,GAAI3kB,KAAKzL,MAAMggB,OAAOxjB,OAAS0zB,EAASlQ,OAAOxjB,OAAQ,CACrD,IAAM6zB,EAAY5kB,KAAKzL,MAGvB,OAFAyL,KAAKzL,MAAQkwB,EACbzkB,KAAKzL,MAAM4lB,aAAeyK,EAAUzK,aAC7B,CACL9lB,OACAkH,MAAOqpB,EAAUrQ,OAAOkQ,EAASlQ,OAAOxjB,QACxC8zB,QAAQ,EACRC,SAAS,EACTF,aAIJ,MAAO,CACLvwB,OACAkH,MAAO,KACPspB,QAAQ,EACRC,SAAS,EACTF,UAAW,MAEb,MAAOrpB,GACP,IAAMqpB,EAAY5kB,KAAKzL,MAGvB,GAFAyL,KAAKzL,MAAQkwB,EAETlpB,aAAiB4N,YACnB,MAAO,CACL9U,KAAM,KACNkH,QACAspB,QAAQ,EACRC,SAAS,EACTF,aAIJ,GAAIrpB,IAAUopB,EACZ,MAAO,CACLtwB,KAAMswB,EAAYtwB,KAClBkH,MAAO,KACPspB,QAAQ,EACRC,SAAS,EACTF,aAIJ,MAAMrpB,K,mCAIV,SAAsBwpB,EAAqBC,GACzC,IAAKD,EAAqB,OAAO,EACjC,IACEE,EAGEF,EAHFE,gBACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,mBAGF,IAAKH,EACH,OAAOC,GAAmB,GAAKC,GAAe,GAAKC,GAAsB,EAGvEF,GAAmB,GACrBjlB,KAAK2jB,WAAWsB,GAGdC,GAAe,GACjBllB,KAAKwX,MAAM0N,EAAa7b,EAAc6B,gBAGpCia,GAAsB,GACxBnlB,KAAK2jB,WAAWwB,K,mCAIpB,WACE,OAAOnlB,KAAKpB,MAAM6B,EAAQhM,SAAWuL,KAAKzL,MAAMK,KAAK4H,SAAWwD,KAAKpB,MAAM6B,EAAQzD,SAAWgD,KAAKpB,MAAM6B,EAAQC,MAAQV,KAAKpB,MAAM6B,EAAQE,SAAWX,KAAKpB,MAAM6B,EAAQG,W,2BAG5K,SAAcvM,GACZ,MAAqB,gBAAdA,EAAKO,O,8BAGd,SAAiBP,GACf,OAAOA,EAAK6E,GAAGzE,O,sCAGjB,SAAyBJ,GACvB,OAAsB,qBAAdA,EAAKO,MAA6C,6BAAdP,EAAKO,OAAwCoL,KAAKolB,cAAc/wB,EAAKgxB,Y,6BAGnH,SAAgBhxB,GACd,MAAqB,6BAAdA,EAAKO,MAAqD,2BAAdP,EAAKO,O,8BAG1D,SAAiBP,GACf,MAAqB,mBAAdA,EAAKO,O,4BAGd,SAAeP,GACb,MAAqB,iBAAdA,EAAKO,O,8BAGd,WAAkE,WAAjDuhB,EAAiD,uDAAV,WAA5BnW,KAAKnI,QAAQtF,WACjC+yB,EAAYtlB,KAAKzL,MAAMulB,OAC7B9Z,KAAKzL,MAAMulB,OAAS,GACpB,IAAMyL,EAAyBvlB,KAAKwlB,oBACpCxlB,KAAKwlB,oBAAsB,IAAIr0B,IAC/B,IAAMs0B,EAAczlB,KAAKmW,SACzBnW,KAAKmW,SAAWA,EAChB,IAAMuP,EAAW1lB,KAAK7G,MAChBoe,EAAevX,KAAK2lB,kBAC1B3lB,KAAK7G,MAAQ,IAAIoe,EAAavX,KAAKwX,MAAMzgB,KAAKiJ,MAAOA,KAAKmW,UAC1D,IAAMyP,EAAe5lB,KAAK6lB,UAC1B7lB,KAAK6lB,UAAY,IAAI5C,GACrB,IAAMjB,EAAgBhiB,KAAKmiB,WAC3BniB,KAAKmiB,WAAa,IAAIJ,GAAkB/hB,KAAKwX,MAAMzgB,KAAKiJ,OACxD,IAAM8lB,EAAqB9lB,KAAK+lB,gBAEhC,OADA/lB,KAAK+lB,gBAAkB,IAAIrD,GAAuB1iB,KAAKwX,MAAMzgB,KAAKiJ,OAC3D,WACL,EAAKzL,MAAMulB,OAASwL,EACpB,EAAKE,oBAAsBD,EAC3B,EAAKpP,SAAWsP,EAChB,EAAKtsB,MAAQusB,EACb,EAAKG,UAAYD,EACjB,EAAKzD,WAAaH,EAClB,EAAK+D,gBAAkBD,K,gCAI3B,WACE,IAAIE,EA5SM,EA8SNhmB,KAAKmW,WACP6P,GA7Sc,GAgThBhmB,KAAK7G,MAAM8sB,MA9mEO,GA+mElBjmB,KAAK6lB,UAAUI,MAAMD,O,GAxQA7K,IA4QnB+K,GACJ,aAAc,UACZlmB,KAAKilB,iBAAmB,EACxBjlB,KAAKklB,aAAe,EACpBllB,KAAKmlB,oBAAsB,GAKzBgB,GACJ,WAAYj2B,EAAQsjB,EAAK7gB,GAAK,UAC5BqN,KAAKpL,KAAO,GACZoL,KAAKjN,MAAQygB,EACbxT,KAAK8G,IAAM,EACX9G,KAAKrN,IAAM,IAAIkU,EAAelU,GAChB,MAAVzC,GAAkBA,EAAO2H,QAAQuuB,SAAQpmB,KAAKqmB,MAAQ,CAAC7S,EAAK,IAClD,MAAVtjB,GAAkBA,EAAO6W,WAAU/G,KAAKrN,IAAIoU,SAAW7W,EAAO6W,WAKhEuf,GAAgBH,GAAK3wB,UAsB3B,SAAS+wB,GAAgBlyB,GACvB,IACEO,EAOEP,EAPFO,KACA7B,EAMEsB,EANFtB,MACA+T,EAKEzS,EALFyS,IACAnU,EAIE0B,EAJF1B,IACA0zB,EAGEhyB,EAHFgyB,MACA7C,EAEEnvB,EAFFmvB,MACA/uB,EACEJ,EADFI,KAEI+xB,EAASj3B,OAAOk3B,OAAOH,IAa7B,OAZAE,EAAO5xB,KAAOA,EACd4xB,EAAOzzB,MAAQA,EACfyzB,EAAO1f,IAAMA,EACb0f,EAAO7zB,IAAMA,EACb6zB,EAAOH,MAAQA,EACfG,EAAOhD,MAAQA,EACfgD,EAAO/xB,KAAOA,EAED,gBAATG,IACF4xB,EAAO1xB,aAAeT,EAAKS,cAGtB0xB,EAET,SAASE,GAAmBryB,GAC1B,IACEO,EAMEP,EANFO,KACA7B,EAKEsB,EALFtB,MACA+T,EAIEzS,EAJFyS,IACAnU,EAGE0B,EAHF1B,IACA0zB,EAEEhyB,EAFFgyB,MACA7C,EACEnvB,EADFmvB,MAGF,GAAa,gBAAT5uB,EACF,OAxCJ,SAA0BP,GACxB,OAAOkyB,GAAgBlyB,GAuCdsyB,CAAiBtyB,GAG1B,IAAMmyB,EAASj3B,OAAOk3B,OAAOH,IAQ7B,OAPAE,EAAO5xB,KAAO,gBACd4xB,EAAOzzB,MAAQA,EACfyzB,EAAO1f,IAAMA,EACb0f,EAAO7zB,IAAMA,EACb6zB,EAAOH,MAAQA,EACfG,EAAOhD,MAAQA,EACfgD,EAAO92B,MAAQ2E,EAAK3E,MACb82B,EAnEPF,GAAcM,QAAU,WAItB,IAHA,IAAMC,EAAU,IAAIV,GACdr1B,EAAOvB,OAAOuB,KAAKkP,MAEhBrP,EAAI,EAAGI,EAASD,EAAKC,OAAQJ,EAAII,EAAQJ,IAAK,CACrD,IAAMD,EAAMI,EAAKH,GAEL,oBAARD,GAAqC,qBAARA,GAAsC,kBAARA,IAC7Dm2B,EAAQn2B,GAAOsP,KAAKtP,IAIxB,OAAOm2B,G,IAyDLC,G,uHACJ,WACE,OAAO,IAAIX,GAAKnmB,KAAMA,KAAKzL,MAAMxB,MAAOiN,KAAKzL,MAAMkf,Y,yBAGrD,SAAYD,EAAK7gB,GACf,OAAO,IAAIwzB,GAAKnmB,KAAMwT,EAAK7gB,K,6BAG7B,SAAgBiC,GACd,OAAOoL,KAAK+mB,YAAYnyB,EAAK7B,MAAO6B,EAAKjC,IAAII,S,wBAG/C,SAAWsB,EAAMO,GACf,OAAOoL,KAAKgnB,aAAa3yB,EAAMO,EAAMoL,KAAKzL,MAAMsf,WAAY7T,KAAKzL,MAAMuf,iB,0BAGzE,SAAazf,EAAMO,EAAM4e,EAAK7gB,GAO5B,OALA0B,EAAKO,KAAOA,EACZP,EAAKyS,IAAM0M,EACXnf,EAAK1B,IAAImU,IAAMnU,EACXqN,KAAKnI,QAAQuuB,SAAQ/xB,EAAKgyB,MAAM,GAAK7S,GACrCxT,KAAKnI,QAAQglB,eAAe7c,KAAKinB,eAAe5yB,GAC7CA,I,gCAGT,SAAmBA,EAAMtB,EAAO0gB,GAC9Bpf,EAAKtB,MAAQA,EACbsB,EAAK1B,IAAII,MAAQ0gB,EACbzT,KAAKnI,QAAQuuB,SAAQ/xB,EAAKgyB,MAAM,GAAKtzB,K,8BAG3C,SAAiBsB,GAAsE,IAAhEyS,EAAgE,uDAA1D9G,KAAKzL,MAAMsf,WAAYD,EAAmC,uDAA1B5T,KAAKzL,MAAMuf,cACtEzf,EAAKyS,IAAMA,EACXzS,EAAK1B,IAAImU,IAAM8M,EACX5T,KAAKnI,QAAQuuB,SAAQ/xB,EAAKgyB,MAAM,GAAKvf,K,wCAG3C,SAA2BzS,EAAM6yB,GAC/BlnB,KAAKmnB,mBAAmB9yB,EAAM6yB,EAAan0B,MAAOm0B,EAAav0B,IAAII,W,GAxC/CwwB,IA6ClB6D,GAAgB,IAAIj2B,IAAI,CAAC,IAAK,MAAO,OAAQ,UAAW,QAAS,UAAW,QAAS,YAAa,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,SACnKk2B,GAAa/d,EAAmB,CACpCge,0BAA2B,iFAC3BC,2BAA4B,yKAC5BC,mBAAoB,qCACpBC,oBAAqB,0DACrBC,6BAA8B,sEAC9BC,8BAA+B,gDAC/BC,gCAAiC,sGACjCC,wBAAyB,oGACzBC,6BAA8B,+KAC9BC,wBAAyB,mGACzBC,uCAAwC,uGACxCC,wCAAyC,gFACzCC,uCAAwC,qEACxCC,wCAAyC,iHACzCC,sBAAuB,2HACvBC,+BAAgC,0EAChCC,0CAA2C,8GAC3CC,0BAA2B,2CAC3BC,oCAAqC,yKACrCC,mBAAoB,8EACpBC,uBAAwB,2EACxBC,gBAAiB,gDACjBC,oCAAqC,0FACrCC,wBAAyB,0GACzBC,oBAAqB,mEACrBC,kBAAmB,0DACnBC,kBAAmB,iFACnBC,0BAA2B,2CAC3BC,eAAgB,0CAChBC,4BAA6B,0DAC7BC,6BAA8B,oGAC9BC,0BAA2B,2CAC3BC,qBAAsB,6DACtBC,mBAAoB,qDACpBC,sBAAuB,oHACvBC,kBAAmB,uEACnBC,kCAAmC,uEACnCC,uBAAwB,+BACxBC,6BAA8B,yDAC9BC,mCAAoC,wDACpCC,qBAAsB,mEACtBC,6BAA8B,mDAC9BC,kCAAmC,oEACnCC,gDAAiD,oHACjDC,6BAA8B,0DAC9BC,oCAAqC,oEACrCC,wBAAyB,8BACxBnhB,EAAWE,YAAa,QAM3B,SAASkhB,GAAkBh2B,GACzB,MAA2B,SAApBA,EAAKi2B,YAA6C,WAApBj2B,EAAKi2B,WAG5C,SAASC,GAAqBh2B,GAC5B,OAAQA,EAAMK,OAAS6L,EAAQhM,QAAUF,EAAMK,KAAK4H,UAA4B,SAAhBjI,EAAM7E,MAGxE,IAAM86B,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACL91B,KAAM,cACN+1B,UAAW,oBAcb,IAAMC,GAAoB,yBA0wFpBC,GAAW,CACfC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNzuB,MAAO,SACP0uB,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,IAAK,SACLC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,GAAI,SACJC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,UAGHC,GAAa,gBACbC,GAAiB,QACjBC,GAAYtxB,EAAmB,CACnCuxB,iBAAkB,+DAClBC,yBAA0B,mDAC1BC,0BAA2B,iDAC3BC,6BAA8B,2GAC9BC,oBAAqB,iEACrBC,uBAAwB,6BACxBC,6BAA8B,oGAC7BlyB,EAAWE,YAAa,OAiB3B,SAASiyB,GAAWC,GAClB,QAAOA,IAAyB,uBAAhBA,EAAOzmC,MAAiD,uBAAhBymC,EAAOzmC,MAGjE,SAAS0mC,GAAoBD,GAC3B,GAAoB,kBAAhBA,EAAOzmC,KACT,OAAOymC,EAAO5mC,KAGhB,GAAoB,sBAAhB4mC,EAAOzmC,KACT,OAAOymC,EAAOE,UAAU9mC,KAAO,IAAM4mC,EAAO5mC,KAAKA,KAGnD,GAAoB,wBAAhB4mC,EAAOzmC,KACT,OAAO0mC,GAAoBD,EAAOA,QAAU,IAAMC,GAAoBD,EAAOhW,UAG/E,MAAM,IAAI/0B,MAAM,6BAA+B+qC,EAAOzmC,MAjCxD0E,EAAMkiC,OAAS,IAAI3mB,EAAW,QAC9Bvb,EAAMmiC,OAAS,IAAI5mB,EAAW,SAC9Bvb,EAAMoiC,OAAS,IAAI7mB,EAAW,kBAAkB,GAChDpU,EAAQk7B,QAAU,IAAI97B,EAAU,WAChCY,EAAQm7B,QAAU,IAAI/7B,EAAU,UAAW,CACzCJ,YAAY,IAEdgB,EAAQo7B,YAAc,IAAIh8B,EAAU,cAAe,CACjDH,YAAY,IAEde,EAAQq7B,UAAY,IAAIj8B,EAAU,aAElCY,EAAQo7B,YAAYz7B,cAAgB,SAAA4U,GAClCA,EAAQ5iB,KAAKkH,EAAMoiC,OAAQpiC,EAAMkiC,SAuBnC,IAqcMO,G,8BACJ,aAAqB,2CAANhhC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJzB,MAAQ,IAAInI,IACjB,EAAK6qC,MAAQ,IAAI7qC,IACjB,EAAK8qC,WAAa,IAAI9qC,IACtB,EAAK+qC,QAAU,IAAI/qC,IACnB,EAAKgrC,mBAAqB,IAAIhrC,IANX,E,UADO+lB,IAYxBklB,G,yHACJ,SAAYjlB,GACV,OAAO,IAAI4kB,GAAgB5kB,K,yBAG7B,SAAY1iB,EAAMwjB,EAAazE,GAC7B,IAAMra,EAAQ6G,KAAK+X,eAEnB,GAAIE,EAAcnB,GAGhB,OAFA9W,KAAKmY,mBAAmBhf,EAAO1E,QAC/B0E,EAAMgjC,mBAAmBhnC,IAAIV,GAI/B,gDAAqBiU,WA11LF,EA41LfuP,IA71LgB,EA81LZA,IACJjY,KAAKkY,0BAA0B/e,EAAO1E,EAAMwjB,EAAazE,GACzDxT,KAAKmY,mBAAmBhf,EAAO1E,IAGjC0E,EAAMG,MAAMnE,IAAIV,IAGdwjB,EAAcrB,IAAoBzd,EAAM6iC,MAAM7mC,IAAIV,GAClDwjB,EAAcpB,IAA0B1d,EAAM8iC,WAAW9mC,IAAIV,GAC7DwjB,EAActB,IAAkBxd,EAAM+iC,QAAQ/mC,IAAIV,K,iCAGxD,SAAoB0E,EAAO1E,EAAMwjB,GAC/B,GAAI9e,EAAM6iC,MAAMrnC,IAAIF,GAAO,CACzB,GAAIwjB,EAAcrB,GAAoB,CACpC,IAAMylB,KAAapkB,EAAcpB,IAC3BylB,EAAWnjC,EAAM8iC,WAAWtnC,IAAIF,GACtC,OAAO4nC,IAAYC,EAGrB,OAAO,EAGT,OAAIrkB,EAActB,IAAoBxd,EAAM+iC,QAAQvnC,IAAIF,KAClD0E,EAAMke,QAAQ1iB,IAAIF,OAv3LJ,EAw3LNwjB,MAv3LK,EA63LfA,GAAgC9e,EAAMG,MAAM3E,IAAIF,KAIpD,wDAAoCiU,a,8BAGtC,SAAiBxP,GACf,IAAMsf,EAAgBxY,KAAKyX,WAAW,GAEpChjB,EACEyE,EADFzE,KAGG+jB,EAAclf,MAAM3E,IAAIF,IAAU+jB,EAAc2jB,mBAAmBxnC,IAAIF,IAC1E,oDAAuByE,O,GA/DQqe,IAqErC,SAASglB,GAAQC,GACf,GAAS,MAALA,EACF,MAAM,IAAIlsC,MAAJ,qBAAwBksC,EAAxB,YAGR,OAAOA,EAGT,SAASC,GAAOD,GACd,IAAKA,EACH,MAAM,IAAIlsC,MAAM,eAIpB,IAAMosC,GAAWpzB,EAAmB,CAClCqzB,gCAAiC,2EACjCC,+BAAgC,0EAChCC,kCAAmC,8DACnCC,gCAAiC,2CACjCC,sBAAuB,oDACvBC,uBAAwB,qDACxBC,6BAA8B,8DAC9BC,gBAAiB,sCACjBC,gCAAiC,oDACjCC,iCAAkC,4DAClCC,+BAAgC,uCAChCC,kBAAmB,4BACnBC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCAAmC,+DACnCC,yBAA0B,6CAC1BC,sBAAuB,mDACvBC,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,yBAA0B,uDAC1BC,0BAA2B,2DAC3BC,wBAAyB,sDACzBC,4BAA6B,gDAC7BC,sBAAuB,4CACvBC,wBAAyB,0DACzBC,qBAAsB,8DACtBC,iCAAkC,2DAClCC,kCAAmC,6DACnCC,yCAA0C,mFAC1CC,2BAA4B,wDAC5BC,sBAAuB,6GACvB1V,kBAAmB,iFACnB2V,0BAA2B,wDAC3BC,+BAAgC,iEAChCC,2BAA4B,oFAC5BC,sCAAuC,sDACvCC,kCAAmC,+CACnCC,+BAAgC,yDAChCC,8BAA+B,gDAC/BC,0BAA2B,oHAC3BC,uCAAwC,mFACxCC,4BAA6B,wEAC7BC,mBAAoB,+EACpBC,yBAA0B,yCAC1BC,8BAA+B,8CAC/BC,8BAA+B,sDAC/BC,iCAAkC,oEAClCC,kCAAmC,6FAClCz2B,EAAWE,YAAa,cAuC3B,SAASw2B,GAAmBC,GAC1B,MAAoB,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,EAs8E5Dn/B,EAAQlL,YAAc,IAAIsK,EAAU,KAAM,CACxCH,YAAY,IAEd,IAAMmgC,GAAoBv2B,EAAmB,CAC3Cw2B,oBAAqB,6BACpB72B,EAAWE,aAsPd,SAASH,GAAU9W,EAASuC,GAC1B,OAAOvC,EAAQoN,MAAK,SAAAyJ,GAClB,OAAIvX,MAAMC,QAAQsX,GACTA,EAAO,KAAOtU,EAEdsU,IAAWtU,KAIxB,SAAS2oB,GAAgBlrB,EAASuC,EAAMsrC,GACtC,IAAMh3B,EAAS7W,EAAQ8tC,MAAK,SAAAj3B,GAC1B,OAAIvX,MAAMC,QAAQsX,GACTA,EAAO,KAAOtU,EAEdsU,IAAWtU,KAItB,OAAIsU,GAAUvX,MAAMC,QAAQsX,GACnBA,EAAO,GAAGg3B,GAGZ,KAET,IAAME,GAAqB,CAAC,UAAW,SAAU,OAAQ,SACnDC,GAAe,CAAC,IAAK,KACrBC,GAAgC,CAAC,OAAQ,OAkF/C,IAAMC,GAAe,CACnBC,OAzvSY,SAAAC,GAAU,uIACtB,YAGG,IAFDvhB,EAEC,EAFDA,QACA5H,EACC,EADDA,MAEIja,EAAQ,KAEZ,IACEA,EAAQ,IAAI9L,OAAO2tB,EAAS5H,GAC5B,MAAO7gB,IAET,IAAMjC,EAAO2L,KAAKugC,mBAAmBrjC,GAKrC,OAJA7I,EAAK6I,MAAQ,CACX6hB,UACA5H,SAEK9iB,IAhBa,gCAmBtB,SAAmB3E,GACjB,IAAI8wC,EAEJ,IACEA,EAASC,OAAO/wC,GAChB,MAAOgxC,GACPF,EAAS,KAGX,IAAMnsC,EAAO2L,KAAKugC,mBAAmBC,GAErC,OADAnsC,EAAKsM,OAAS+U,OAAOrhB,EAAK3E,OAASA,GAC5B2E,IA9Ba,iCAiCtB,SAAoB3E,GAClB,IACM2E,EAAO2L,KAAKugC,mBADF,MAGhB,OADAlsC,EAAKuM,QAAU8U,OAAOrhB,EAAK3E,OAASA,GAC7B2E,IArCa,gCAwCtB,SAAmB3E,GACjB,OAAOsQ,KAAK2gC,aAAajxC,EAAO,aAzCZ,gCA4CtB,SAAmBA,GACjB,OAAOsQ,KAAKugC,mBAAmB7wC,KA7CX,iCAgDtB,SAAoBA,GAClB,OAAOsQ,KAAKugC,mBAAmB7wC,KAjDX,8BAoDtB,WACE,OAAOsQ,KAAKugC,mBAAmB,QArDX,iCAwDtB,SAAoB7wC,GAClB,OAAOsQ,KAAKugC,mBAAmB7wC,KAzDX,6BA4DtB,SAAgBkxC,GACd,IAAMC,EAAmBD,EAAUlxC,MAC7B4K,EAAO0F,KAAK+mB,YAAY6Z,EAAU7tC,MAAO6tC,EAAUjuC,IAAII,OACvDyD,EAAawJ,KAAK+mB,YAAY8Z,EAAiB9tC,MAAO8tC,EAAiBluC,IAAII,OAKjF,OAJAyD,EAAW9G,MAAQmxC,EAAiBrd,MAAMsd,gBAC1CtqC,EAAWuqC,IAAMF,EAAiBrd,MAAMud,IACxCzmC,EAAK9D,WAAawJ,KAAKgnB,aAAaxwB,EAAY,UAAWqqC,EAAiB/5B,IAAK+5B,EAAiBluC,IAAImU,KACtGxM,EAAKsmC,UAAYC,EAAiBrd,MAAMud,IAAI5uC,MAAM,GAAI,GAC/C6N,KAAKgnB,aAAa1sB,EAAM,sBAAuBsmC,EAAU95B,IAAK85B,EAAUjuC,IAAImU,OApE/D,0BAuEtB,SAAazS,EAAMgvB,GACjB,gDAAmBhvB,EAAMgvB,GACzBhvB,EAAKmC,YAAa,IAzEE,8BA4EtB,SAAiBnC,GACH,MAARA,GAAgB2L,KAAKghC,iBAAiB3sC,GACxC2L,KAAKihC,iBAAiB5sC,EAAK3E,OAE3B,oDAAuB2E,KAhFL,0CAoFtB,SAA6B6sC,GAC3B,OAAOA,EAAOxxC,MAAMiZ,SArFA,8BAwFtB,SAAiBrO,GACf,IAAI6mC,EAEJ,MAAqB,wBAAd7mC,EAAK1F,MAA2D,YAAzB0F,EAAK9D,WAAW5B,MAAuD,kBAA1B0F,EAAK9D,WAAW9G,SAA2E,OAAlDyxC,EAAwB7mC,EAAK9D,WAAWgtB,QAAkB2d,EAAsBC,iBA3FhM,6BA8FtB,SAAgB9mC,GACd,IAAM5K,EAAQ4K,EAAK9D,WAAW9G,MACxBkxC,EAAY,EAAH,iDAAyBtmC,GAExC,OADA0F,KAAKqhC,SAAST,EAAUlxC,MAAO,kBAAmBA,GAC3CkxC,IAlGa,4BAqGtB,SAAevsC,GAAe,oCAAN0G,EAAM,iCAANA,EAAM,mBAC5B,8DAAqB1G,GAArB,OAA8B0G,IAC9B,IAAMumC,EAAsBjtC,EAAKktC,WAAW1rC,KAAI,SAAA2rC,GAAC,OAAI,EAAKC,gBAAgBD,MAC1EntC,EAAKgG,KAAOinC,EAAoBliC,OAAO/K,EAAKgG,aACrChG,EAAKktC,aAzGQ,6BA4GtB,SAAgBG,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,GACtE5hC,KAAK6hC,YAAYX,EAAQ5d,EAAaD,EAASse,EAAeC,EAAmB,eAAe,GAE5FV,EAAOY,iBACTZ,EAAOxxC,MAAMoyC,eAAiBZ,EAAOY,sBAC9BZ,EAAOY,gBAGhBJ,EAAUrnC,KAAKjI,KAAK8uC,KApHA,mCAuHtB,WAA+B,6BAANnmC,EAAM,yBAANA,EAAM,gBAC7B,IAAM1G,GAAI,6EAAkC0G,IAE5C,MAAkB,gBAAd1G,EAAKO,MAA0BoL,KAAKod,gBAAgB,SAAU,iBACzDpd,KAAK+hC,sCAAsC1tC,GAG7CA,IA9Ha,mDAiItB,SAAsCA,GACpC,IAAMI,EAAO,EAAH,kDAA0BJ,GAKpC,cAJAA,EAAOA,GACK6E,GACZ7E,EAAKI,KAAOA,EACZJ,EAAKO,KAAO,oBACLP,IAvIa,2BA0ItB,SAAcA,GACZ,OAAK2L,KAAKod,gBAAgB,SAAU,iBAIf,sBAAd/oB,EAAKO,KAHV,iDAA2BP,KA5IT,8BAkJtB,SAAiBA,GACf,OAAK2L,KAAKod,gBAAgB,SAAU,iBAI7B/oB,EAAKI,KAHV,oDAA8BJ,KApJZ,0BA0JtB,SAAa3E,EAAOkF,GAClB,IAAMP,EAAO,EAAH,8CAAsB3E,EAAOkF,GAGvC,OAFAP,EAAK0sC,IAAM1sC,EAAKmvB,MAAMud,WACf1sC,EAAKmvB,MACLnvB,IA9Ja,+BAiKtB,SAAkBA,EAAM2tC,GAAmC,IAAlBC,EAAkB,wDACzD,qDAAwB5tC,EAAM2tC,EAAiBC,GAC/C5tC,EAAKmC,WAAgC,mBAAnBnC,EAAKgG,KAAKzF,OAnKR,yBAsKtB,SAAYP,EAAMivB,EAAaD,EAASse,EAAeO,EAAkBttC,GAA4B,IAAtButC,EAAsB,wDAC/FC,EAAWpiC,KAAKqiC,YAYpB,OAXAD,EAASE,KAAOjuC,EAAKiuC,MACrBF,EAAW,EAAH,6CAAqBA,EAAU9e,EAAaD,EAASse,EAAeO,EAAkBttC,EAAMutC,IAC3FvtC,KAAO,4BACTwtC,EAASE,KAChBjuC,EAAK3E,MAAQ0yC,EAEA,uBAATxtC,IACFP,EAAKkuC,UAAW,GAGlB3tC,EAAO,mBACAoL,KAAKwiC,WAAWnuC,EAAMO,KAnLT,gCAsLtB,WAA4B,6BAANmG,EAAM,yBAANA,EAAM,gBAC1B,IAAM0nC,GAAY,0EAA+B1nC,IAMjD,OAJIiF,KAAKod,gBAAgB,SAAU,mBACjCqlB,EAAa7tC,KAAO,sBAGf6tC,IA7La,uCAgMtB,WAAmC,6BAAN1nC,EAAM,yBAANA,EAAM,gBACjC,IAAM0nC,GAAY,iFAAsC1nC,IAOxD,OALIiF,KAAKod,gBAAgB,SAAU,mBACjCqlB,EAAa7tC,KAAO,qBACpB6tC,EAAaF,UAAW,GAGnBE,IAxMa,+BA2MtB,SAAkBnK,EAAMhV,EAAaD,EAASqf,EAAWC,GACvD,IAAMtuC,EAAO,EAAH,mDAA2BikC,EAAMhV,EAAaD,EAASqf,EAAWC,GAQ5E,OANItuC,IACFA,EAAKO,KAAO,WACM,WAAdP,EAAKiuC,OAAmBjuC,EAAKiuC,KAAO,QACxCjuC,EAAKuuC,WAAY,GAGZvuC,IApNa,iCAuNtB,SAAoBikC,EAAMuK,EAAUpvB,EAAUivB,EAAW3d,GACvD,IAAM1wB,EAAO,EAAH,qDAA6BikC,EAAMuK,EAAUpvB,EAAUivB,EAAW3d,GAO5E,OALI1wB,IACFA,EAAKiuC,KAAO,OACZjuC,EAAKO,KAAO,YAGPP,IA/Na,0BAkOtB,SAAaA,EAAMyuC,GACjB,OAAY,MAARzuC,GAAgB2L,KAAKghC,iBAAiB3sC,GACjC2L,KAAK+iC,aAAa1uC,EAAK3E,MAAOozC,GAGvC,gDAA0BzuC,EAAMyuC,KAvOZ,0BA0OtB,SAAazuC,GAAqB,IAAf2uC,EAAe,wDAChC,OAAY,MAAR3uC,GAAgB2L,KAAKghC,iBAAiB3sC,IACxC2L,KAAKijC,aAAa5uC,EAAK3E,MAAOszC,GACvB3uC,GAGT,gDAA0BA,EAAM2uC,KAhPZ,8CAmPtB,SAAiC1K,GAC/B,GAAkB,QAAdA,EAAKgK,MAAgC,QAAdhK,EAAKgK,KAC9BtiC,KAAKwX,MAAM8gB,EAAK5nC,IAAIqC,MAAOsW,EAAcyF,yBACpC,GAAIwpB,EAAK4I,OACdlhC,KAAKwX,MAAM8gB,EAAK5nC,IAAIqC,MAAOsW,EAAc0F,sBACpC,8BALiChU,EAKjC,iCALiCA,EAKjC,mBACL,gFAAuCu9B,GAAvC,OAAgDv9B,OAzP9B,kCA6PtB,SAAqB1G,EAAM6uC,GAGzB,GAFA,wDAA2B7uC,EAAM6uC,GAER,WAArB7uC,EAAKwF,OAAOjF,KAAmB,CAK/B,IAAIuuC,EADN,GAHA9uC,EAAKO,KAAO,mBACZP,EAAK7D,OAAS6D,EAAKqU,UAAU,GAEzB1I,KAAKgJ,UAAU,oBAGjB3U,EAAK+uC,WAAuD,OAAzCD,EAAmB9uC,EAAKqU,UAAU,IAAcy6B,EAAmB,YAGjF9uC,EAAKqU,iBACLrU,EAAKwF,OAGd,OAAOxF,IA9Qa,mCAiRtB,SAAsBA,GACF,qBAAdA,EAAKO,MAIT,yDAA4BP,KAtRR,yBAyRtB,SAAYA,GAGV,OAFA,+CAAkBA,GAEVA,EAAKO,MACX,IAAK,uBACHP,EAAKgvC,SAAW,KAChB,MAEF,IAAK,yBAC4B,IAA3BhvC,EAAKuU,WAAW7X,QAA4C,6BAA5BsD,EAAKuU,WAAW,GAAGhU,OACrDP,EAAKO,KAAO,uBACZP,EAAKgvC,SAAWhvC,EAAKuU,WAAW,GAAGy6B,gBAC5BhvC,EAAKuU,YAMlB,OAAOvU,IA3Sa,4BA8StB,SAAeivC,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAChD,IAAMF,EAAO,EAAH,gDAAwBivC,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAErE,GAAIA,EAAMivC,qBAKR,GAJkB,6BAAdnvC,EAAKO,MAAqD,2BAAdP,EAAKO,OACnDP,EAAKO,KAAOP,EAAKO,KAAK6uC,UAAU,IAG9BlvC,EAAMmvC,KAAM,CACd,IAAMC,EAAQ3jC,KAAK4jC,gBAAgBvvC,GAEnC,OADAsvC,EAAMntC,WAAanC,EACZ2L,KAAKwiC,WAAWmB,EAAO,wBAET,qBAAdtvC,EAAKO,MAA6C,mBAAdP,EAAKO,OAClDP,EAAK6uC,UAAW,GAGlB,OAAO7uC,IA/Ta,sCAkUtB,SAAyBA,GAKvB,MAJkB,oBAAdA,EAAKO,OACPP,EAAOA,EAAKmC,YAGd,4DAAsCnC,KAvUlB,6BA0UtB,SAAgBA,GACd,MAAqB,oBAAdA,EAAKO,OA3UQ,8BA8UtB,SAAiBP,GACf,MAAqB,aAAdA,EAAKO,MAAqC,SAAdP,EAAKiuC,OAAoBjuC,EAAK6sC,SA/U7C,4BAkVtB,SAAe7sC,GACb,OAAOA,EAAK6sC,QAAwB,QAAd7sC,EAAKiuC,MAAgC,QAAdjuC,EAAKiuC,SAnV9B,GAAkBhC,IA0vSxCuD,IA76GS,SAAAvD,GAAU,iIACnB,WAIE,IAHA,IAAI1f,EAAM,GACNC,EAAa7gB,KAAKzL,MAAMif,MAEnB,CACP,GAAIxT,KAAKzL,MAAMif,KAAOxT,KAAKjP,OACzB,MAAMiP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO6nC,GAAUM,wBAG/C,IAAM1e,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAE5C,OAAQgJ,GACN,KAAK,GACL,KAAK,IACH,OAAIxc,KAAKzL,MAAMif,MAAQxT,KAAKzL,MAAMxB,MACrB,KAAPypB,GAAaxc,KAAKzL,MAAMylB,eACxBha,KAAKzL,MAAMif,IACNxT,KAAKmc,YAAY1b,EAAQo7B,cAGlC,oDAA8Brf,IAGhCoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KACxCxT,KAAKmc,YAAY1b,EAAQm7B,QAAShb,IAE3C,KAAK,GACHA,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/CoN,GAAO5gB,KAAK8jC,gBACZjjB,EAAa7gB,KAAKzL,MAAMif,IACxB,MAEF,KAAK,GACL,KAAK,IAEL,QACMpN,EAAUoW,IACZoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/CoN,GAAO5gB,KAAK+jC,gBAAe,GAC3BljB,EAAa7gB,KAAKzL,MAAMif,OAEtBxT,KAAKzL,MAAMif,QA1CJ,4BAiDnB,SAAewwB,GACb,IACIpjB,EADEpE,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAa5C,QAXExT,KAAKzL,MAAMif,IAEF,KAAPgJ,GAAuD,KAA1Cxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,QAC9CxT,KAAKzL,MAAMif,IACboN,EAAMojB,EAAgB,KAAO,QAE7BpjB,EAAMlL,OAAOC,aAAa6G,KAG1Bxc,KAAKzL,MAAMukB,QACb9Y,KAAKzL,MAAMwf,UAAY/T,KAAKzL,MAAMif,IAC3BoN,IA/DU,2BAkEnB,SAAcD,GAIZ,IAHA,IAAIC,EAAM,GACNC,IAAe7gB,KAAKzL,MAAMif,MAErB,CACP,GAAIxT,KAAKzL,MAAMif,KAAOxT,KAAKjP,OACzB,MAAMiP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcoJ,oBAGnD,IAAM+J,EAAKxc,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,KAC5C,GAAIgJ,IAAOmE,EAAO,MAEP,KAAPnE,GACFoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/CoN,GAAO5gB,KAAK8jC,gBACZjjB,EAAa7gB,KAAKzL,MAAMif,KACfpN,EAAUoW,IACnBoE,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,KAC/CoN,GAAO5gB,KAAK+jC,gBAAe,GAC3BljB,EAAa7gB,KAAKzL,MAAMif,OAEtBxT,KAAKzL,MAAMif,IAKjB,OADAoN,GAAO5gB,KAAKuI,MAAMpW,MAAM0uB,EAAY7gB,KAAKzL,MAAMif,OACxCxT,KAAKmc,YAAY1b,EAAQzD,OAAQ4jB,KA5FvB,2BA+FnB,WAOE,IANA,IAEIqjB,EAFA9pC,EAAM,GACN+pC,EAAQ,EAER1nB,EAAKxc,KAAKuI,MAAMvI,KAAKzL,MAAMif,KACzBqvB,IAAa7iC,KAAKzL,MAAMif,IAEvBxT,KAAKzL,MAAMif,IAAMxT,KAAKjP,QAAUmzC,IAAU,IAAI,CAGnD,GAAW,OAFX1nB,EAAKxc,KAAKuI,MAAMvI,KAAKzL,MAAMif,QAEX,CACC,MAAXrZ,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAIgE,OAAO,GAEbu8B,GAAWhmC,KAAKyF,KAClB8pC,EAASvuB,OAAO8I,cAAc8B,SAASnmB,EAAK,QAG9CA,EAAMA,EAAIgE,OAAO,GAEbw8B,GAAejmC,KAAKyF,KACtB8pC,EAASvuB,OAAO8I,cAAc8B,SAASnmB,EAAK,OAIhD8pC,EAASpZ,GAAS1wB,GAGpB,MAGFA,GAAOqiB,EAGT,OAAKynB,IACHjkC,KAAKzL,MAAMif,IAAMqvB,EACV,OApIQ,yBA0InB,WACE,IAAIrmB,EACEzpB,EAAQiN,KAAKzL,MAAMif,IAEzB,GACEgJ,EAAKxc,KAAKuI,MAAMC,aAAaxI,KAAKzL,MAAMif,WACjCoC,EAAiB4G,IAAc,KAAPA,GAEjC,OAAOxc,KAAKmc,YAAY1b,EAAQk7B,QAAS37B,KAAKuI,MAAMpW,MAAMY,EAAOiN,KAAKzL,MAAMif,QAlJ3D,gCAqJnB,WACE,IAAMnf,EAAO2L,KAAKqiC,YAWlB,OATIriC,KAAKpB,MAAM6B,EAAQk7B,SACrBtnC,EAAKI,KAAOuL,KAAKzL,MAAM7E,MACdsQ,KAAKzL,MAAMK,KAAK4H,QACzBnI,EAAKI,KAAOuL,KAAKzL,MAAMK,KAAK4H,QAE5BwD,KAAK2jB,aAGP3jB,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,mBAjKZ,oCAoKnB,WACE,IAAMwuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBhf,EAAOuL,KAAKmkC,qBAClB,IAAKnkC,KAAKikB,IAAIxjB,EAAQqB,OAAQ,OAAOrN,EACrC,IAAMJ,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAGxC,OAFApf,EAAKknC,UAAY9mC,EACjBJ,EAAKI,KAAOuL,KAAKmkC,qBACVnkC,KAAKwiC,WAAWnuC,EAAM,uBA5KZ,iCA+KnB,WACE,IAAMwuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACxBpf,EAAO2L,KAAKokC,yBAEhB,GAAkB,sBAAd/vC,EAAKO,KACP,OAAOP,EAGT,KAAO2L,KAAKikB,IAAIxjB,EAAQuB,MAAM,CAC5B,IAAM6kB,EAAU7mB,KAAK+mB,YAAY8b,EAAUpvB,GAC3CoT,EAAQwU,OAAShnC,EACjBwyB,EAAQxB,SAAWrlB,KAAKmkC,qBACxB9vC,EAAO2L,KAAKwiC,WAAW3b,EAAS,uBAGlC,OAAOxyB,IA/LU,oCAkMnB,WACE,IAAIA,EAEJ,OAAQ2L,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQY,OASX,OARAhN,EAAO2L,KAAKqiC,YACZriC,KAAKuY,OAGwB,wBAF7BlkB,EAAO2L,KAAKqkC,4BAA4BhwC,IAE/BmC,WAAW5B,MAClBoL,KAAKwX,MAAMnjB,EAAKtB,MAAO6nC,GAAUC,kBAG5BxmC,EAET,KAAKoM,EAAQo7B,YACb,KAAKp7B,EAAQzD,OACX,OAAOgD,KAAKskC,gBAEd,QACE,MAAMtkC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO6nC,GAAUK,wBAtNhC,qCA0NnB,WACE,IAAM5mC,EAAO2L,KAAK+mB,YAAY/mB,KAAKzL,MAAMsf,WAAY7T,KAAKzL,MAAMuf,eAChE,OAAO9T,KAAKgnB,aAAa3yB,EAAM,qBAAsB2L,KAAKzL,MAAMxB,MAAOiN,KAAKzL,MAAMkf,YA5NjE,iCA+NnB,SAAoBpf,GAIlB,OAHA2L,KAAKuY,OACLlkB,EAAKmC,WAAawJ,KAAKukC,kBACvBvkC,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,oBAnOZ,yCAsOnB,SAA4BA,GAC1B,GAAI2L,KAAKpB,MAAM6B,EAAQe,QACrBnN,EAAKmC,WAAawJ,KAAKykC,8BAClB,CACL,IAAMjuC,EAAawJ,KAAKukC,kBACxBlwC,EAAKmC,WAAaA,EAIpB,OADAwJ,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,4BA/OZ,+BAkPnB,WACE,IAAMA,EAAO2L,KAAKqiC,YAElB,OAAIriC,KAAKikB,IAAIxjB,EAAQY,SACnBrB,KAAKwkC,OAAO/jC,EAAQ4B,UACpBhO,EAAKqwC,SAAW1kC,KAAK2kC,0BACrB3kC,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,wBAG/BA,EAAKI,KAAOuL,KAAKokC,yBACjB/vC,EAAK3E,MAAQsQ,KAAKikB,IAAIxjB,EAAQkC,IAAM3C,KAAK4kC,yBAA2B,KAC7D5kC,KAAKwiC,WAAWnuC,EAAM,mBA9PZ,sCAiQnB,SAAyBwuC,EAAUpvB,GACjC,IAAMpf,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAExC,OAAIzT,KAAKpB,MAAM6B,EAAQq7B,YACrB97B,KAAKwkC,OAAO/jC,EAAQq7B,WACb97B,KAAKwiC,WAAWnuC,EAAM,wBAG/BA,EAAKI,KAAOuL,KAAK6kC,sBACV7kC,KAAK8kC,gCAAgCzwC,MA1Q3B,6CA6QnB,SAAgCA,GAG9B,IAFA,IAAM+uC,EAAa,IAEXpjC,KAAKpB,MAAM6B,EAAQqD,SAAW9D,KAAKpB,MAAM6B,EAAQq7B,YACvDsH,EAAWhxC,KAAK4N,KAAK+kC,qBAMvB,OAHA1wC,EAAK+uC,WAAaA,EAClB/uC,EAAK2wC,YAAchlC,KAAKikB,IAAIxjB,EAAQqD,OACpC9D,KAAKwkC,OAAO/jC,EAAQq7B,WACb97B,KAAKwiC,WAAWnuC,EAAM,uBAvRZ,sCA0RnB,SAAyBwuC,EAAUpvB,GACjC,IAAMpf,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAExC,OAAIzT,KAAKpB,MAAM6B,EAAQq7B,YACrB97B,KAAKwkC,OAAO/jC,EAAQq7B,WACb97B,KAAKwiC,WAAWnuC,EAAM,wBAG/BA,EAAKI,KAAOuL,KAAK6kC,sBACjB7kC,KAAKwkC,OAAO/jC,EAAQq7B,WACb97B,KAAKwiC,WAAWnuC,EAAM,wBApSZ,+BAuSnB,SAAkBwuC,EAAUpvB,GAC1B,IAAMpf,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAClCwxB,EAAW,GACXC,EAAiBllC,KAAKmlC,yBAAyBtC,EAAUpvB,GAC3D2xB,EAAiB,KAErB,IAAKF,EAAeF,YAAa,CAC/BK,EAAU,OACR,OAAQrlC,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQo7B,YAKX,GAJAgH,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBzT,KAAKuY,OAEDvY,KAAKikB,IAAIxjB,EAAQqD,OAAQ,CAC3BshC,EAAiBplC,KAAKslC,yBAAyBzC,EAAUpvB,GACzD,MAAM4xB,EAGRJ,EAAS7yC,KAAK4N,KAAKulC,kBAAkB1C,EAAUpvB,IAC/C,MAEF,KAAKhT,EAAQm7B,QACXqJ,EAAS7yC,KAAK4N,KAAKskC,iBACnB,MAEF,KAAK7jC,EAAQY,OAET,IAAMhN,EAAO2L,KAAKqiC,YAClBriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQ4B,UACrB4iC,EAAS7yC,KAAK4N,KAAKwlC,oBAAoBnxC,IAEvC4wC,EAAS7yC,KAAK4N,KAAKqkC,4BAA4BhwC,IAGjD,MAGJ,QACE,MAAM2L,KAAK2jB,aAIbyX,GAAW8J,KAAoB9J,GAAWgK,GAC5CplC,KAAKwX,MAAM4tB,EAAeryC,MAAO6nC,GAAUG,4BACjCK,GAAW8J,IAAmB9J,GAAWgK,GACnDplC,KAAKwX,MAAM4tB,EAAeryC,MAAO6nC,GAAUE,yBAA0BQ,GAAoB4J,EAAezwC,OAC9F2mC,GAAW8J,IAAoB9J,GAAWgK,IAChD9J,GAAoB8J,EAAe3wC,QAAU6mC,GAAoB4J,EAAezwC,OAClFuL,KAAKwX,MAAM4tB,EAAeryC,MAAO6nC,GAAUE,yBAA0BQ,GAAoB4J,EAAezwC,OAe9G,GAVI2mC,GAAW8J,IACb7wC,EAAKoxC,gBAAkBP,EACvB7wC,EAAKqxC,gBAAkBN,IAEvB/wC,EAAK6wC,eAAiBA,EACtB7wC,EAAK+wC,eAAiBA,GAGxB/wC,EAAK4wC,SAAWA,EAEZjlC,KAAK0jB,aAAa,KACpB,MAAM1jB,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO6nC,GAAUO,8BAG/C,OAAOC,GAAW8J,GAAkBllC,KAAKwiC,WAAWnuC,EAAM,eAAiB2L,KAAKwiC,WAAWnuC,EAAM,gBA7WhF,6BAgXnB,WACE,IAAMwuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAE5B,OADAzT,KAAKuY,OACEvY,KAAKulC,kBAAkB1C,EAAUpvB,KApXvB,2BAuXnB,SAAcsR,GACZ,OAAI/kB,KAAKpB,MAAM6B,EAAQm7B,SACd57B,KAAK2gC,aAAa3gC,KAAKzL,MAAM7E,MAAO,WAClCsQ,KAAKpB,MAAM6B,EAAQo7B,aACrB77B,KAAK2lC,kBACH3lC,KAAK0jB,aAAa,MAAkD,KAA1C1jB,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,MACpExT,KAAKmc,YAAY1b,EAAQo7B,aAClB77B,KAAK2lC,mBAEZ,iDAA2B5gB,KAhYZ,kCAoYnB,SAAqBxwB,GACnB,IAAMqxC,EAAiB,EAAH,sDAA8BrxC,GAElD,OADAqxC,EAAevsB,eAAiB9kB,EAAM8kB,eAC/BusB,IAvYU,8BA0YnB,SAAiB7zC,GACf,GAAIiO,KAAKzL,MAAM8kB,eAAgB,OAAO,EAAP,kDAA8BtnB,GAC7D,IAAMijB,EAAUhV,KAAKyb,aAErB,GAAIzG,IAAY1b,EAAMoiC,OACpB,OAAO17B,KAAK6lC,eAGd,GAAI7wB,IAAY1b,EAAMkiC,QAAUxmB,IAAY1b,EAAMmiC,OAAQ,CACxD,GAAIhmB,EAAkB1jB,GACpB,OAAOiO,KAAK8lC,cAGd,GAAa,KAAT/zC,EAEF,QADEiO,KAAKzL,MAAMif,IACNxT,KAAKmc,YAAY1b,EAAQq7B,WAGlC,IAAc,KAAT/pC,GAAwB,KAATA,IAAgBijB,IAAY1b,EAAMkiC,OACpD,OAAOx7B,KAAK+lC,cAAch0C,GAI9B,OAAa,KAATA,GAAeiO,KAAKzL,MAAMylB,aAA6D,KAA9Cha,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,MAChFxT,KAAKzL,MAAMif,IACNxT,KAAKmc,YAAY1b,EAAQo7B,cAGlC,oDAA8B9pC,KAtab,2BAyanB,SAAcirB,GACZ,iDAAoBA,GACpB,MAGIhd,KAAKzL,MAFPygB,EADF,EACEA,QACApgB,EAFF,EAEEA,KAGF,GAAIA,IAAS6L,EAAQqD,OAASkZ,IAAavc,EAAQo7B,YACjD7mB,EAAQ5e,QAAQ,EAAG,EAAGkD,EAAMmiC,QAC5Bz7B,KAAKzL,MAAMylB,aAAc,OACpB,GAAIplB,IAAS6L,EAAQq7B,UAAW,CACrC,IAAMlb,EAAM5L,EAAQC,MAEhB2L,IAAQtnB,EAAMkiC,QAAUxe,IAAavc,EAAQqD,OAAS8c,IAAQtnB,EAAMmiC,QACtEzmB,EAAQC,MACRjV,KAAKzL,MAAMylB,YAAchF,EAAQA,EAAQjkB,OAAS,KAAOuI,EAAMoiC,QAE/D17B,KAAKzL,MAAMylB,aAAc,OAElBplB,EAAK4H,SAAYwgB,IAAavc,EAAQuB,KAAOgb,IAAavc,EAAQyB,YAG3ElC,KAAKzL,MAAMylB,YAAcplB,EAAK6K,WAF9BO,KAAKzL,MAAMylB,aAAc,MA7bV,GAAkBsmB,IA86GrC0F,KAt+MU,SAAA1F,GAAU,qCACpB,aAAqB,2CAANvlC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KACJkrC,gBAAa50C,EAFC,EADD,yCAMpB,WACE,OAAOsnB,KAPW,8BAUpB,WACE,OAAO3Y,KAAKod,gBAAgB,OAAQ,QAA8B,SAApBpd,KAAKimC,aAXjC,8BAcpB,WACE,QAASjmC,KAAKod,gBAAgB,OAAQ,WAfpB,yBAkBpB,SAAYxoB,EAAM4lB,GAOhB,OANI5lB,IAAS6L,EAAQzD,QAAUpI,IAAS6L,EAAQoB,MAAQjN,IAAS6L,EAAQiC,2BAC/CrR,IAApB2O,KAAKimC,aACPjmC,KAAKimC,WAAa,MAItB,+CAAyBrxC,EAAM4lB,KAzBb,wBA4BpB,SAAWrd,GACT,QAAwB9L,IAApB2O,KAAKimC,WAA0B,CACjC,IAAMC,EAAUtb,GAAkB/rB,KAAK1B,EAAQzN,OAE/C,GAAKw2C,EAAgB,GAAmB,SAAfA,EAAQ,GAC/BlmC,KAAKimC,WAAa,WACb,IAAmB,WAAfC,EAAQ,GAGjB,MAAM,IAAI51C,MAAM,0BAFhB0P,KAAKimC,WAAa,eAMtB,qDAAwB9oC,KAzCN,sCA4CpB,SAAyBgpC,GACvB,IAAMC,EAAYpmC,KAAKzL,MAAM4kB,OAC7BnZ,KAAKzL,MAAM4kB,QAAS,EACpBnZ,KAAKwkC,OAAO2B,GAAO1lC,EAAQqB,OAC3B,IAAMlN,EAAOoL,KAAKqmC,gBAElB,OADArmC,KAAKzL,MAAM4kB,OAASitB,EACbxxC,IAlDW,gCAqDpB,WACE,IAAMP,EAAO2L,KAAKqiC,YACZiE,EAAYtmC,KAAKzL,MAAMxB,MAQ7B,OAPAiN,KAAKuY,OACLvY,KAAKumC,iBAAiB,UAElBvmC,KAAKzL,MAAMmf,aAAe4yB,EAAY,GACxCtmC,KAAKwX,MAAM8uB,EAAWjf,GAAWwC,oCAG/B7pB,KAAKikB,IAAIxjB,EAAQiB,SACnBrN,EAAK3E,MAAQsQ,KAAKukC,kBAClBvkC,KAAKwkC,OAAO/jC,EAAQkB,QACb3B,KAAKwiC,WAAWnuC,EAAM,sBAEtB2L,KAAKwiC,WAAWnuC,EAAM,uBApEb,kDAwEpB,WACE,IAAM+xC,EAAYpmC,KAAKzL,MAAM4kB,OAC7BnZ,KAAKzL,MAAM4kB,QAAS,EACpBnZ,KAAKwkC,OAAO/jC,EAAQqB,OACpB,IAAIlN,EAAO,KACP4xC,EAAY,KAchB,OAZIxmC,KAAKpB,MAAM6B,EAAQmD,SACrB5D,KAAKzL,MAAM4kB,OAASitB,EACpBI,EAAYxmC,KAAKymC,uBAEjB7xC,EAAOoL,KAAKqmC,gBACZrmC,KAAKzL,MAAM4kB,OAASitB,EAEhBpmC,KAAKpB,MAAM6B,EAAQmD,UACrB4iC,EAAYxmC,KAAKymC,uBAId,CAAC7xC,EAAM4xC,KA3FI,mCA8FpB,SAAsBnyC,GAGpB,OAFA2L,KAAKuY,OACLvY,KAAK0mC,sBAAsBryC,GAAM,GAC1B2L,KAAKwiC,WAAWnuC,EAAM,kBAjGX,sCAoGpB,SAAyBA,GACvB2L,KAAKuY,OACL,IAAMrf,EAAK7E,EAAK6E,GAAK8G,KAAK2mC,kBACpBC,EAAW5mC,KAAKqiC,YAChBwE,EAAgB7mC,KAAKqiC,YAEvBriC,KAAK0jB,aAAa,KACpBkjB,EAAS9E,eAAiB9hC,KAAK8mC,oCAE/BF,EAAS9E,eAAiB,KAG5B9hC,KAAKwkC,OAAO/jC,EAAQiB,QACpB,IAAMqlC,EAAM/mC,KAAKgnC,8BACjBJ,EAASj+B,OAASo+B,EAAIp+B,OACtBi+B,EAASK,KAAOF,EAAIE,KACpBL,EAAS5mC,KAAO+mC,EAAI3hC,MACpBpF,KAAKwkC,OAAO/jC,EAAQkB,QAjBS,MAkBW3B,KAAKknC,uCAlBhB,SAwB7B,OANCN,EAASO,WAlBmB,KAkBP9yC,EAAKmyC,UAlBE,KAmB7BK,EAAcO,eAAiBpnC,KAAKwiC,WAAWoE,EAAU,0BACzD1tC,EAAGkuC,eAAiBpnC,KAAKwiC,WAAWqE,EAAe,kBACnD7mC,KAAKqnC,iBAAiBnuC,GACtB8G,KAAKsnC,YACLtnC,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAx6ENsiB,KAw6EkC1iB,EAAK6E,GAAGnG,OAC5DiN,KAAKwiC,WAAWnuC,EAAM,qBA5HX,8BA+HpB,SAAiBA,EAAMmzC,GACrB,GAAIxnC,KAAKpB,MAAM6B,EAAQ6E,QACrB,OAAOtF,KAAKynC,sBAAsBpzC,GAC7B,GAAI2L,KAAKpB,MAAM6B,EAAQgE,WAC5B,OAAOzE,KAAK0nC,yBAAyBrzC,GAChC,GAAI2L,KAAKpB,MAAM6B,EAAQsE,MAC5B,OAAO/E,KAAK2nC,yBAAyBtzC,GAChC,GAAI2L,KAAKkkB,cAAc,UAC5B,OAAIlkB,KAAKpB,MAAM6B,EAAQuB,KACdhC,KAAK4nC,8BAA8BvzC,IAEtCmzC,GACFxnC,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAc2T,GAAWyB,qBAG1C9oB,KAAK6nC,uBAAuBxzC,IAEhC,GAAI2L,KAAKgkB,aAAa,QAC3B,OAAOhkB,KAAK8nC,0BAA0BzzC,GACjC,GAAI2L,KAAKgkB,aAAa,UAC3B,OAAOhkB,KAAK+nC,2BAA2B1zC,GAClC,GAAI2L,KAAKgkB,aAAa,aAC3B,OAAOhkB,KAAKgoC,0BAA0B3zC,GACjC,GAAI2L,KAAKpB,MAAM6B,EAAQ+E,SAC5B,OAAOxF,KAAKioC,kCAAkC5zC,EAAMmzC,GAEpD,MAAMxnC,KAAK2jB,eAzJK,sCA6JpB,SAAyBtvB,GAKvB,OAJA2L,KAAKuY,OACLlkB,EAAK6E,GAAK8G,KAAKkoC,oCAAmC,GAClDloC,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAv9ElB0zC,EAu9EkC9zC,EAAK6E,GAAGnG,OACvDiN,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,qBAlKX,oCAqKpB,SAAuBA,GAAM,WAC3B2L,KAAK7G,MAAM8sB,MAr/EK,GAu/EZjmB,KAAKpB,MAAM6B,EAAQzD,QACrB3I,EAAK6E,GAAK8G,KAAKskC,gBAEfjwC,EAAK6E,GAAK8G,KAAK2mC,kBAGjB,IAAMyB,EAAW/zC,EAAKgG,KAAO2F,KAAKqiC,YAC5BhoC,EAAO+tC,EAAS/tC,KAAO,GAG7B,IAFA2F,KAAKwkC,OAAO/jC,EAAQY,SAEZrB,KAAKpB,MAAM6B,EAAQe,SAAS,CAClC,IAAI4mC,EAAWpoC,KAAKqiC,YAEhBriC,KAAKpB,MAAM6B,EAAQgF,UACrBzF,KAAKuY,OAEAvY,KAAKgkB,aAAa,SAAYhkB,KAAKpB,MAAM6B,EAAQsF,UACpD/F,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAc2T,GAAWuB,qCAGjD5oB,KAAKqoC,YAAYD,KAEjBpoC,KAAKumC,iBAAiB,UAAWlf,GAAW8C,qCAC5Cie,EAAWpoC,KAAKsoC,iBAAiBF,GAAU,IAG7C/tC,EAAKjI,KAAKg2C,GAGZpoC,KAAK7G,MAAMovC,OACXvoC,KAAKwkC,OAAO/jC,EAAQe,QACpBxB,KAAKwiC,WAAW4F,EAAU,kBAC1B,IAAI9F,EAAO,KACPkG,GAAkB,EAsBtB,OArBAnuC,EAAK/E,SAAQ,SAAAmzC,IAzOjB,SAAwBA,GACtB,MAA4B,gCAArBA,EAAY7zC,MAA+D,6BAArB6zC,EAAY7zC,QAAyC6zC,EAAYC,aAAgD,cAAjCD,EAAYC,YAAY9zC,MAAyD,yBAAjC6zC,EAAYC,YAAY9zC,MAyO7M+zC,CAAeF,GAMa,yBAArBA,EAAY7zC,OACjB4zC,GACF,EAAKhxB,MAAMixB,EAAY11C,MAAOs0B,GAAWM,+BAG9B,OAAT2a,GACF,EAAK9qB,MAAMixB,EAAY11C,MAAOs0B,GAAWE,4BAG3C+a,EAAO,WACPkG,GAAkB,IAfL,aAATlG,GACF,EAAK9qB,MAAMixB,EAAY11C,MAAOs0B,GAAWE,4BAG3C+a,EAAO,SAcXjuC,EAAKiuC,KAAOA,GAAQ,WACbtiC,KAAKwiC,WAAWnuC,EAAM,mBA/NX,+CAkOpB,SAAkCA,EAAMmzC,GAGtC,GAFAxnC,KAAKwkC,OAAO/jC,EAAQ+E,SAEhBxF,KAAKikB,IAAIxjB,EAAQ3J,UASnB,OARIkJ,KAAKpB,MAAM6B,EAAQgE,YAAczE,KAAKpB,MAAM6B,EAAQ6E,QACtDjR,EAAKq0C,YAAc1oC,KAAKsoC,iBAAiBtoC,KAAKqiC,cAE9ChuC,EAAKq0C,YAAc1oC,KAAKqmC,gBACxBrmC,KAAKsnC,aAGPjzC,EAAKxC,SAAU,EACRmO,KAAKwiC,WAAWnuC,EAAM,4BAE7B,GAAI2L,KAAKpB,MAAM6B,EAAQuE,SAAWhF,KAAK4oC,UAAY5oC,KAAKgkB,aAAa,SAAWhkB,KAAKgkB,aAAa,gBAAkBwjB,EAAc,CAChI,IAAM1nC,EAAQE,KAAKzL,MAAM7E,MACnBm5C,EAAare,GAAkB1qB,GACrC,MAAME,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOs0B,GAAW6C,6BAA8BpqB,EAAO+oC,GAGrF,GAAI7oC,KAAKpB,MAAM6B,EAAQsE,OAAS/E,KAAKpB,MAAM6B,EAAQgE,YAAczE,KAAKpB,MAAM6B,EAAQ6E,SAAWtF,KAAKgkB,aAAa,UAG/G,OAFA3vB,EAAKq0C,YAAc1oC,KAAKsoC,iBAAiBtoC,KAAKqiC,aAC9ChuC,EAAKxC,SAAU,EACRmO,KAAKwiC,WAAWnuC,EAAM,4BACxB,GAAI2L,KAAKpB,MAAM6B,EAAQoD,OAAS7D,KAAKpB,MAAM6B,EAAQY,SAAWrB,KAAKgkB,aAAa,cAAgBhkB,KAAKgkB,aAAa,SAAWhkB,KAAKgkB,aAAa,UAUpJ,MAPkB,4BAFlB3vB,EAAO2L,KAAK8oC,YAAYz0C,IAEfO,OACPP,EAAKO,KAAO,oBACZP,EAAKxC,SAAU,SACRwC,EAAK00C,YAGd10C,EAAKO,KAAO,UAAYP,EAAKO,KACtBP,EAIX,MAAM2L,KAAK2jB,eAxQO,2CA2QpB,SAA8BtvB,GAK5B,OAJA2L,KAAKuY,OACLvY,KAAKumC,iBAAiB,WACtBlyC,EAAK+yC,eAAiBpnC,KAAKgpC,0BAC3BhpC,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,0BAhRX,uCAmRpB,SAA0BA,GAIxB,OAHA2L,KAAKuY,OACLvY,KAAKipC,mBAAmB50C,GACxBA,EAAKO,KAAO,mBACLP,IAvRW,wCA0RpB,SAA2BA,GAIzB,OAHA2L,KAAKuY,OACLvY,KAAKkpC,oBAAoB70C,GAAM,GAC/BA,EAAKO,KAAO,oBACLP,IA9RW,uCAiSpB,SAA0BA,GAGxB,OAFA2L,KAAKuY,OACLvY,KAAK0mC,sBAAsBryC,GACpB2L,KAAKwiC,WAAWnuC,EAAM,sBApSX,mCAuSpB,SAAsBA,GAAuB,IAAjB80C,EAAiB,wDAc3C,GAbA90C,EAAK6E,GAAK8G,KAAKopC,+BAA+BD,GAAS,GACvDnpC,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAAM00C,EA/lFnBhB,GAFDA,EAimF4D9zC,EAAK6E,GAAGnG,OAEjFiN,KAAK0jB,aAAa,KACpBrvB,EAAKytC,eAAiB9hC,KAAK8mC,oCAE3BzyC,EAAKytC,eAAiB,KAGxBztC,EAAKg1C,QAAU,GACfh1C,EAAKi1C,WAAa,GAClBj1C,EAAKk1C,OAAS,GAEVvpC,KAAKikB,IAAIxjB,EAAQ8E,UACnB,GACElR,EAAKg1C,QAAQj3C,KAAK4N,KAAKwpC,oCACfL,GAAWnpC,KAAKikB,IAAIxjB,EAAQmB,QAGxC,GAAI5B,KAAKgkB,aAAa,UAAW,CAC/BhkB,KAAKuY,OAEL,GACElkB,EAAKk1C,OAAOn3C,KAAK4N,KAAKwpC,mCACfxpC,KAAKikB,IAAIxjB,EAAQmB,QAG5B,GAAI5B,KAAKgkB,aAAa,cAAe,CACnChkB,KAAKuY,OAEL,GACElkB,EAAKi1C,WAAWl3C,KAAK4N,KAAKwpC,mCACnBxpC,KAAKikB,IAAIxjB,EAAQmB,QAG5BvN,EAAKgG,KAAO2F,KAAKypC,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,MAhVE,uCAoVpB,WACE,IAAMz1C,EAAO2L,KAAKqiC,YASlB,OARAhuC,EAAK6E,GAAK8G,KAAK+pC,mCAEX/pC,KAAK0jB,aAAa,KACpBrvB,EAAKytC,eAAiB9hC,KAAKgqC,sCAE3B31C,EAAKytC,eAAiB,KAGjB9hC,KAAKwiC,WAAWnuC,EAAM,sBA9VX,gCAiWpB,SAAmBA,GAEjB,OADA2L,KAAK0mC,sBAAsBryC,GACpB2L,KAAKwiC,WAAWnuC,EAAM,0BAnWX,gCAsWpB,SAAmB6hB,GACJ,MAATA,GACFlW,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOs0B,GAAWuC,gCAxWxB,+BA4WpB,SAAkB1T,EAAMzC,EAAUi1B,GAC3BthB,GAAczyB,IAAIuhB,IACvBlW,KAAKwX,MAAM/D,EAAUi1B,EAAcrhB,GAAWG,mBAAqBH,GAAWsC,uBAAwBzT,KA9WpF,2CAiXpB,SAA8B+zB,EAASvB,GAErC,OADA1oC,KAAKkqC,kBAAkBlqC,KAAKzL,MAAM7E,MAAOsQ,KAAKzL,MAAMxB,MAAO21C,GACpD1oC,KAAK2mC,gBAAgBsD,KAnXV,gCAsXpB,SAAmB51C,GAYjB,OAXAA,EAAK6E,GAAK8G,KAAKopC,+BAA8B,GAAO,GACpDppC,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAhrFd0zC,EAgrFkC9zC,EAAK6E,GAAGnG,OAEvDiN,KAAK0jB,aAAa,KACpBrvB,EAAKytC,eAAiB9hC,KAAK8mC,oCAE3BzyC,EAAKytC,eAAiB,KAGxBztC,EAAK81C,MAAQnqC,KAAKoqC,yBAAyB3pC,EAAQkC,IACnD3C,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,eAlYX,iCAqYpB,SAAoBA,EAAMsD,GAwBxB,OAvBAqI,KAAKumC,iBAAiB,QACtBlyC,EAAK6E,GAAK8G,KAAKopC,+BAA8B,GAAM,GACnDppC,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAhsFd0zC,EAgsFkC9zC,EAAK6E,GAAGnG,OAEvDiN,KAAK0jB,aAAa,KACpBrvB,EAAKytC,eAAiB9hC,KAAK8mC,oCAE3BzyC,EAAKytC,eAAiB,KAGxBztC,EAAKg2C,UAAY,KAEbrqC,KAAKpB,MAAM6B,EAAQqB,SACrBzN,EAAKg2C,UAAYrqC,KAAKoqC,yBAAyB3pC,EAAQqB,QAGzDzN,EAAKi2C,SAAW,KAEX3yC,IACHtD,EAAKi2C,SAAWtqC,KAAKoqC,yBAAyB3pC,EAAQkC,KAGxD3C,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,gBA7ZX,oCAgapB,WAA+C,IAAxBk2C,EAAwB,wDACvCviC,EAAYhI,KAAKzL,MAAMxB,MACvBsB,EAAO2L,KAAKqiC,YACZmI,EAAWxqC,KAAKyqC,oBAChBC,EAAQ1qC,KAAKkoC,qCAcnB,OAbA7zC,EAAKI,KAAOi2C,EAAMj2C,KAClBJ,EAAKm2C,SAAWA,EAChBn2C,EAAKs2C,MAAQD,EAAMtD,eAEfpnC,KAAKpB,MAAM6B,EAAQkC,KACrB3C,KAAKikB,IAAIxjB,EAAQkC,IACjBtO,EAAKxC,QAAUmO,KAAKqmC,iBAEhBkE,GACFvqC,KAAKwX,MAAMxP,EAAWqf,GAAWwB,yBAI9B7oB,KAAKwiC,WAAWnuC,EAAM,mBAlbX,+CAqbpB,WACE,IAAM+xC,EAAYpmC,KAAKzL,MAAM4kB,OACvB9kB,EAAO2L,KAAKqiC,YAClBhuC,EAAKsU,OAAS,GACd3I,KAAKzL,MAAM4kB,QAAS,EAEhBnZ,KAAK0jB,aAAa,MAAQ1jB,KAAKpB,MAAM6B,EAAQo7B,aAC/C77B,KAAKuY,OAELvY,KAAK2jB,aAGP,IAAIinB,GAAkB,EAEtB,EAAG,CACD,IAAMC,EAAgB7qC,KAAK8qC,uBAAuBF,GAClDv2C,EAAKsU,OAAOvW,KAAKy4C,GAEbA,EAAch5C,UAChB+4C,GAAkB,GAGf5qC,KAAK0jB,aAAa,MACrB1jB,KAAKwkC,OAAO/jC,EAAQmB,cAEd5B,KAAK0jB,aAAa,MAI5B,OAFA1jB,KAAK+qC,iBAAiB,KACtB/qC,KAAKzL,MAAM4kB,OAASitB,EACbpmC,KAAKwiC,WAAWnuC,EAAM,8BAldX,iDAqdpB,WACE,IAAMA,EAAO2L,KAAKqiC,YACZ+D,EAAYpmC,KAAKzL,MAAM4kB,OAC7B9kB,EAAKsU,OAAS,GACd3I,KAAKzL,MAAM4kB,QAAS,EACpBnZ,KAAK+qC,iBAAiB,KACtB,IAAMC,EAAwBhrC,KAAKzL,MAAM6kB,mBAGzC,IAFApZ,KAAKzL,MAAM6kB,oBAAqB,GAExBpZ,KAAK0jB,aAAa,MACxBrvB,EAAKsU,OAAOvW,KAAK4N,KAAKqmC,iBAEjBrmC,KAAK0jB,aAAa,MACrB1jB,KAAKwkC,OAAO/jC,EAAQmB,OAOxB,OAHA5B,KAAKzL,MAAM6kB,mBAAqB4xB,EAChChrC,KAAK+qC,iBAAiB,KACtB/qC,KAAKzL,MAAM4kB,OAASitB,EACbpmC,KAAKwiC,WAAWnuC,EAAM,gCAzeX,0DA4epB,WACE,IAAMA,EAAO2L,KAAKqiC,YACZ+D,EAAYpmC,KAAKzL,MAAM4kB,OAK7B,IAJA9kB,EAAKsU,OAAS,GACd3I,KAAKzL,MAAM4kB,QAAS,EACpBnZ,KAAK+qC,iBAAiB,MAEd/qC,KAAK0jB,aAAa,MACxBrvB,EAAKsU,OAAOvW,KAAK4N,KAAKirC,wCAEjBjrC,KAAK0jB,aAAa,MACrB1jB,KAAKwkC,OAAO/jC,EAAQmB,OAMxB,OAFA5B,KAAK+qC,iBAAiB,KACtB/qC,KAAKzL,MAAM4kB,OAASitB,EACbpmC,KAAKwiC,WAAWnuC,EAAM,gCA7fX,oCAggBpB,WACE,IAAMA,EAAO2L,KAAKqiC,YAIlB,GAHAriC,KAAKumC,iBAAiB,aACtBlyC,EAAKg1C,QAAU,GAEXrpC,KAAKikB,IAAIxjB,EAAQ8E,UACnB,GACElR,EAAKg1C,QAAQj3C,KAAK4N,KAAKwpC,mCAChBxpC,KAAKikB,IAAIxjB,EAAQmB,QAU5B,OAPAvN,EAAKgG,KAAO2F,KAAKypC,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAET9pC,KAAKwiC,WAAWnuC,EAAM,6BAlhBX,wCAqhBpB,WACE,OAAO2L,KAAKpB,MAAM6B,EAAQC,MAAQV,KAAKpB,MAAM6B,EAAQzD,QAAUgD,KAAKskC,gBAAkBtkC,KAAK2mC,iBAAgB,KAthBzF,wCAyhBpB,SAA2BtyC,EAAM62C,EAAUV,GAczC,OAbAn2C,EAAK82C,OAASD,EAEVlrC,KAAKorC,YAAYx2C,OAAS6L,EAAQqB,OACpCzN,EAAK6E,GAAK8G,KAAKqrC,6BACfh3C,EAAK3D,IAAMsP,KAAKoqC,6BAEhB/1C,EAAK6E,GAAK,KACV7E,EAAK3D,IAAMsP,KAAKqmC,iBAGlBrmC,KAAKwkC,OAAO/jC,EAAQU,UACpB9M,EAAK3E,MAAQsQ,KAAKoqC,2BAClB/1C,EAAKm2C,SAAWA,EACTxqC,KAAKwiC,WAAWnuC,EAAM,uBAviBX,6CA0iBpB,SAAgCA,EAAM62C,GAoBpC,OAnBA72C,EAAK82C,OAASD,EACd72C,EAAK6E,GAAK8G,KAAKqrC,6BACfrrC,KAAKwkC,OAAO/jC,EAAQU,UACpBnB,KAAKwkC,OAAO/jC,EAAQU,UAEhBnB,KAAK0jB,aAAa,MAAQ1jB,KAAKpB,MAAM6B,EAAQiB,SAC/CrN,EAAK6sC,QAAS,EACd7sC,EAAK6uC,UAAW,EAChB7uC,EAAK3E,MAAQsQ,KAAKsrC,6BAA6BtrC,KAAK+mB,YAAY1yB,EAAKtB,MAAOsB,EAAK1B,IAAII,UAErFsB,EAAK6sC,QAAS,EAEVlhC,KAAKikB,IAAIxjB,EAAQwB,YACnB5N,EAAK6uC,UAAW,GAGlB7uC,EAAK3E,MAAQsQ,KAAKoqC,4BAGbpqC,KAAKwiC,WAAWnuC,EAAM,4BA9jBX,0CAikBpB,SAA6BA,GAqB3B,IApBAA,EAAKsU,OAAS,GACdtU,EAAK4yC,KAAO,KACZ5yC,EAAKytC,eAAiB,KACtBztC,EAAK2L,KAAO,KAERA,KAAK0jB,aAAa,OACpBrvB,EAAKytC,eAAiB9hC,KAAK8mC,qCAG7B9mC,KAAKwkC,OAAO/jC,EAAQiB,QAEhB1B,KAAKpB,MAAM6B,EAAQ2E,SACrB/Q,EAAK2L,KAAOA,KAAKurC,4BAA2B,GAC5Cl3C,EAAK2L,KAAKvL,KAAO,KAEZuL,KAAKpB,MAAM6B,EAAQkB,SACtB3B,KAAKwkC,OAAO/jC,EAAQmB,SAIhB5B,KAAKpB,MAAM6B,EAAQkB,UAAY3B,KAAKpB,MAAM6B,EAAQ4B,WACxDhO,EAAKsU,OAAOvW,KAAK4N,KAAKurC,4BAA2B,IAE5CvrC,KAAKpB,MAAM6B,EAAQkB,SACtB3B,KAAKwkC,OAAO/jC,EAAQmB,OAUxB,OANI5B,KAAKikB,IAAIxjB,EAAQ4B,YACnBhO,EAAK4yC,KAAOjnC,KAAKurC,4BAA2B,IAG9CvrC,KAAKwkC,OAAO/jC,EAAQkB,QACpBtN,EAAK8yC,WAAannC,KAAKoqC,2BAChBpqC,KAAKwiC,WAAWnuC,EAAM,4BApmBX,6CAumBpB,SAAgCA,EAAM62C,GACpC,IAAMM,EAAYxrC,KAAKqiC,YAGvB,OAFAhuC,EAAK82C,OAASD,EACd72C,EAAK3E,MAAQsQ,KAAKsrC,6BAA6BE,GACxCxrC,KAAKwiC,WAAWnuC,EAAM,4BA3mBX,iCA8mBpB,YAMG,IALDq1C,EAKC,EALDA,YACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEM1D,EAAYpmC,KAAKzL,MAAM4kB,OAC7BnZ,KAAKzL,MAAM4kB,QAAS,EACpB,IAKIsyB,EACAC,EANE1jC,EAAYhI,KAAKqiC,YACvBr6B,EAAU2jC,eAAiB,GAC3B3jC,EAAUS,WAAa,GACvBT,EAAU4jC,SAAW,GACrB5jC,EAAU6jC,cAAgB,GAG1B,IAAIC,GAAU,EAcd,IAZInC,GAAc3pC,KAAKpB,MAAM6B,EAAQa,YACnCtB,KAAKwkC,OAAO/jC,EAAQa,WACpBmqC,EAAWhrC,EAAQgB,UACnBiqC,GAAQ,IAER1rC,KAAKwkC,OAAO/jC,EAAQY,QACpBoqC,EAAWhrC,EAAQe,OACnBkqC,GAAQ,GAGV1jC,EAAU0jC,MAAQA,GAEV1rC,KAAKpB,MAAM6sC,IAAW,CAC5B,IAAIP,GAAW,EACXa,EAAa,KACbC,EAAe,KACb33C,EAAO2L,KAAKqiC,YAElB,GAAIwH,GAAc7pC,KAAKgkB,aAAa,SAAU,CAC5C,IAAMonB,EAAYprC,KAAKorC,YAEnBA,EAAUx2C,OAAS6L,EAAQqB,OAASspC,EAAUx2C,OAAS6L,EAAQwB,WACjEjC,KAAKuY,OACLwzB,EAAa/rC,KAAKzL,MAAMxB,MACxB22C,GAAc,GAIlB,GAAIA,GAAe1pC,KAAKgkB,aAAa,UAAW,CAC9C,IAAMonB,EAAYprC,KAAKorC,YAEnBA,EAAUx2C,OAAS6L,EAAQqB,OAASspC,EAAUx2C,OAAS6L,EAAQwB,WACjEjC,KAAKuY,OACL2yB,GAAW,GAIf,IAAMV,EAAWxqC,KAAKyqC,oBAEtB,GAAIzqC,KAAKikB,IAAIxjB,EAAQO,UACD,MAAd+qC,GACF/rC,KAAK2jB,WAAWooB,GAGd/rC,KAAKikB,IAAIxjB,EAAQO,WACfwpC,GACFxqC,KAAK2jB,WAAW6mB,EAASz3C,OAG3BiV,EAAU6jC,cAAcz5C,KAAK4N,KAAKisC,gCAAgC53C,EAAM62C,KAExEljC,EAAU4jC,SAASx5C,KAAK4N,KAAKksC,2BAA2B73C,EAAM62C,EAAUV,SAErE,GAAIxqC,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAK0jB,aAAa,KACvC,MAAdqoB,GACF/rC,KAAK2jB,WAAWooB,GAGdvB,GACFxqC,KAAK2jB,WAAW6mB,EAASz3C,OAG3BiV,EAAU2jC,eAAev5C,KAAK4N,KAAKmsC,gCAAgC93C,EAAM62C,QACpE,CACL,IAAI5I,EAAO,OAEX,GAAItiC,KAAKgkB,aAAa,QAAUhkB,KAAKgkB,aAAa,OAAQ,CACxD,IAAMonB,EAAYprC,KAAKorC,YAEnBA,EAAUx2C,OAAS6L,EAAQhM,MAAQ22C,EAAUx2C,OAAS6L,EAAQzD,QAAUouC,EAAUx2C,OAAS6L,EAAQC,MACrG4hC,EAAOtiC,KAAKzL,MAAM7E,MAClBsQ,KAAKuY,QAIT,IAAM6zB,EAAgBpsC,KAAKqsC,4BAA4Bh4C,EAAM62C,EAAUa,EAAYvB,EAAUlI,EAAMsH,EAA6B,MAAhBE,EAAuBA,GAAgB4B,GAEjI,OAAlBU,GACFN,GAAU,EACVE,EAAehsC,KAAKzL,MAAMmf,cAE1B1L,EAAUS,WAAWrW,KAAKg6C,GAI9BpsC,KAAKssC,2BAEDN,GAAiBhsC,KAAKpB,MAAM6B,EAAQe,SAAYxB,KAAKpB,MAAM6B,EAAQgB,YACrEzB,KAAKwX,MAAMw0B,EAAc3kB,GAAWqC,mCAIxC1pB,KAAKwkC,OAAOiH,GAER7B,IACF5hC,EAAU8jC,QAAUA,GAGtB,IAAMlrB,EAAM5gB,KAAKwiC,WAAWx6B,EAAW,wBAEvC,OADAhI,KAAKzL,MAAM4kB,OAASitB,EACbxlB,IApuBW,yCAuuBpB,SAA4BvsB,EAAM62C,EAAUa,EAAYvB,EAAUlI,EAAMsH,EAAaE,GACnF,GAAI9pC,KAAKikB,IAAIxjB,EAAQ4B,UAGnB,OAFuBrC,KAAKpB,MAAM6B,EAAQmB,QAAU5B,KAAKpB,MAAM6B,EAAQoB,OAAS7B,KAAKpB,MAAM6B,EAAQe,SAAWxB,KAAKpB,MAAM6B,EAAQgB,YAG1HmoC,EAEOE,GACV9pC,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAc2T,GAAWoB,oBAF/CzoB,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAc2T,GAAWqB,wBAK7C8hB,GACFxqC,KAAKwX,MAAMgzB,EAASz3C,MAAOs0B,GAAWsB,iBAGjC,OAGJihB,GACH5pC,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAc2T,GAAWyC,sBAG/B,MAAdiiB,GACF/rC,KAAK2jB,WAAWooB,GAGdvB,GACFxqC,KAAKwX,MAAMgzB,EAASz3C,MAAOs0B,GAAW6B,gBAGxC70B,EAAKqwC,SAAW1kC,KAAKqmC,gBACdrmC,KAAKwiC,WAAWnuC,EAAM,6BAE7BA,EAAK3D,IAAMsP,KAAKqrC,6BAChBh3C,EAAK82C,OAASD,EACd72C,EAAKk4C,MAAsB,MAAdR,EACb13C,EAAKiuC,KAAOA,EACZ,IAAIY,GAAW,EAmCf,OAjCIljC,KAAK0jB,aAAa,MAAQ1jB,KAAKpB,MAAM6B,EAAQiB,SAC/CrN,EAAK6sC,QAAS,EAEI,MAAd6K,GACF/rC,KAAK2jB,WAAWooB,GAGdvB,GACFxqC,KAAK2jB,WAAW6mB,EAASz3C,OAG3BsB,EAAK3E,MAAQsQ,KAAKsrC,6BAA6BtrC,KAAK+mB,YAAY1yB,EAAKtB,MAAOsB,EAAK1B,IAAII,QAExE,QAATuvC,GAA2B,QAATA,GACpBtiC,KAAKwsC,4BAA4Bn4C,IAG9Bu1C,GAAiC,gBAAlBv1C,EAAK3D,IAAI+D,MAA0BJ,EAAK3E,MAAMsQ,MAChEA,KAAKwX,MAAMnjB,EAAK3E,MAAMsQ,KAAKjN,MAAOs0B,GAAW+B,gCAGlC,SAATkZ,GAAiBtiC,KAAK2jB,aAC1BtvB,EAAK6sC,QAAS,EAEVlhC,KAAKikB,IAAIxjB,EAAQwB,YACnBihC,GAAW,GAGb7uC,EAAK3E,MAAQsQ,KAAKoqC,2BAClB/1C,EAAKm2C,SAAWA,GAGlBn2C,EAAK6uC,SAAWA,EACTljC,KAAKwiC,WAAWnuC,EAAM,wBA/yBb,yCAmzBpB,SAA4BgxB,GAC1B,IAAMonB,EAA+B,QAAlBpnB,EAASid,KAAiB,EAAI,EAC3CvvC,EAAQsyB,EAAStyB,MACjBhC,EAASs0B,EAAS31B,MAAMiZ,OAAO5X,QAAUs0B,EAAS31B,MAAMu3C,KAAO,EAAI,GAErE5hB,EAAS31B,MAAMsQ,MACjBA,KAAKwX,MAAM6N,EAAS31B,MAAMsQ,KAAKjN,MAAyB,QAAlBsyB,EAASid,KAAiBjb,GAAWkB,0BAA4BlB,GAAW4B,2BAGhHl4B,IAAW07C,IACS,QAAlBpnB,EAASid,KACXtiC,KAAKwX,MAAMzkB,EAAOsW,EAAcU,gBAEhC/J,KAAKwX,MAAMzkB,EAAOsW,EAAcW,iBAId,QAAlBqb,EAASid,MAAkBjd,EAAS31B,MAAMu3C,MAC5CjnC,KAAKwX,MAAMzkB,EAAOsW,EAAcY,0BAr0BhB,qCAy0BpB,WACOjK,KAAKikB,IAAIxjB,EAAQoB,OAAU7B,KAAKikB,IAAIxjB,EAAQmB,QAAW5B,KAAKpB,MAAM6B,EAAQe,SAAYxB,KAAKpB,MAAM6B,EAAQgB,YAC5GzB,KAAK2jB,eA30BW,8CA+0BpB,SAAiCkf,EAAUpvB,EAAUva,GACnD2pC,EAAWA,GAAY7iC,KAAKzL,MAAMxB,MAClC0gB,EAAWA,GAAYzT,KAAKzL,MAAMkf,SAGlC,IAFA,IAAIpf,EAAO6E,GAAM8G,KAAKopC,+BAA8B,GAE7CppC,KAAKikB,IAAIxjB,EAAQuB,MAAM,CAC5B,IAAM0qC,EAAQ1sC,KAAK+mB,YAAY8b,EAAUpvB,GACzCi5B,EAAMC,cAAgBt4C,EACtBq4C,EAAMxzC,GAAK8G,KAAKopC,+BAA8B,GAC9C/0C,EAAO2L,KAAKwiC,WAAWkK,EAAO,2BAGhC,OAAOr4C,IA31BW,kCA81BpB,SAAqBwuC,EAAUpvB,EAAUva,GACvC,IAAM7E,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAQxC,OAPApf,EAAKytC,eAAiB,KACtBztC,EAAK6E,GAAK8G,KAAK+pC,iCAAiClH,EAAUpvB,EAAUva,GAEhE8G,KAAK0jB,aAAa,OACpBrvB,EAAKytC,eAAiB9hC,KAAKgqC,uCAGtBhqC,KAAKwiC,WAAWnuC,EAAM,2BAv2BX,iCA02BpB,WACE,IAAMA,EAAO2L,KAAKqiC,YAGlB,OAFAriC,KAAKwkC,OAAO/jC,EAAQsF,SACpB1R,EAAKqwC,SAAW1kC,KAAK4sC,uBACd5sC,KAAKwiC,WAAWnuC,EAAM,0BA92BX,gCAi3BpB,WACE,IAAMA,EAAO2L,KAAKqiC,YAIlB,IAHAhuC,EAAKiF,MAAQ,GACb0G,KAAKwkC,OAAO/jC,EAAQO,UAEbhB,KAAKzL,MAAMif,IAAMxT,KAAKjP,SAAWiP,KAAKpB,MAAM6B,EAAQU,YACzD9M,EAAKiF,MAAMlH,KAAK4N,KAAKqmC,kBACjBrmC,KAAKpB,MAAM6B,EAAQU,YACvBnB,KAAKwkC,OAAO/jC,EAAQmB,OAItB,OADA5B,KAAKwkC,OAAO/jC,EAAQU,UACbnB,KAAKwiC,WAAWnuC,EAAM,yBA73BX,wCAg4BpB,SAA2Bw4C,GACzB,IAAIp4C,EAAO,KACPyuC,GAAW,EACXkE,EAAiB,KACf/yC,EAAO2L,KAAKqiC,YACZyK,EAAK9sC,KAAKorC,YACV2B,EAAS/sC,KAAKzL,MAAMK,OAAS6L,EAAQ2E,MAyB3C,OAvBI0nC,EAAGl4C,OAAS6L,EAAQqB,OAASgrC,EAAGl4C,OAAS6L,EAAQwB,UAC/C8qC,IAAWF,GACb7sC,KAAKwX,MAAMnjB,EAAKtB,MAAOs0B,GAAWiC,sBAGpC70B,EAAOuL,KAAK2mC,gBAAgBoG,GAExB/sC,KAAKikB,IAAIxjB,EAAQwB,YACnBihC,GAAW,EAEP6J,GACF/sC,KAAKwX,MAAMnjB,EAAKtB,MAAOs0B,GAAWgC,4BAItC+d,EAAiBpnC,KAAKoqC,4BAEtBhD,EAAiBpnC,KAAKqmC,gBAGxBhyC,EAAKI,KAAOA,EACZJ,EAAK6uC,SAAWA,EAChB7uC,EAAK+yC,eAAiBA,EACfpnC,KAAKwiC,WAAWnuC,EAAM,uBA/5BX,gDAk6BpB,SAAmCO,GACjC,IAAMP,EAAO2L,KAAK+mB,YAAYnyB,EAAK7B,MAAO6B,EAAKjC,IAAII,OAInD,OAHAsB,EAAKI,KAAO,KACZJ,EAAK6uC,UAAW,EAChB7uC,EAAK+yC,eAAiBxyC,EACfoL,KAAKwiC,WAAWnuC,EAAM,uBAv6BX,yCA06BpB,WAAyC,IAAbsU,EAAa,uDAAJ,GAC/Bs+B,EAAO,KACP7hC,EAAQ,KAWZ,IATIpF,KAAKpB,MAAM6B,EAAQ2E,UACrBA,EAAQpF,KAAKurC,4BAA2B,IAClC92C,KAAO,KAERuL,KAAKpB,MAAM6B,EAAQkB,SACtB3B,KAAKwkC,OAAO/jC,EAAQmB,SAIhB5B,KAAKpB,MAAM6B,EAAQkB,UAAY3B,KAAKpB,MAAM6B,EAAQ4B,WACxDsG,EAAOvW,KAAK4N,KAAKurC,4BAA2B,IAEvCvrC,KAAKpB,MAAM6B,EAAQkB,SACtB3B,KAAKwkC,OAAO/jC,EAAQmB,OAQxB,OAJI5B,KAAKikB,IAAIxjB,EAAQ4B,YACnB4kC,EAAOjnC,KAAKurC,4BAA2B,IAGlC,CACL5iC,SACAs+B,OACA7hC,WAt8BgB,uCA08BpB,SAA0By9B,EAAUpvB,EAAUpf,EAAM6E,GAClD,OAAQA,EAAGzE,MACT,IAAK,MACH,OAAOuL,KAAKwiC,WAAWnuC,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,yBAE/B,IAAK,QACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,uBAE/B,IAAK,QACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,uBAE/B,IAAK,SACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,wBAE/B,IAAK,SACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,wBAE/B,IAAK,SACH,OAAO2L,KAAKwiC,WAAWnuC,EAAM,wBAE/B,QAEE,OADA2L,KAAKgtC,mBAAmB9zC,EAAGzE,MACpBuL,KAAKitC,qBAAqBpK,EAAUpvB,EAAUva,MAp+BvC,kCAw+BpB,WACE,IAGI6tC,EACAnyC,EAJEiuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBpf,EAAO2L,KAAKqiC,YAGd6K,GAAgB,EACdlC,EAAwBhrC,KAAKzL,MAAM6kB,mBAEzC,OAAQpZ,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQhM,KACX,OAAIuL,KAAKgkB,aAAa,aACbhkB,KAAKmtC,yBAGPntC,KAAKotC,0BAA0BvK,EAAUpvB,EAAUpf,EAAM2L,KAAK2mC,mBAEvE,KAAKlmC,EAAQY,OACX,OAAOrB,KAAKypC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKrpC,EAAQa,UACX,OAAOtB,KAAKypC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKrpC,EAAQO,SAIX,OAHAhB,KAAKzL,MAAM6kB,oBAAqB,EAChCxkB,EAAOoL,KAAKqtC,qBACZrtC,KAAKzL,MAAM6kB,mBAAqB4xB,EACzBp2C,EAET,KAAK6L,EAAQgD,WACX,GAAyB,MAArBzD,KAAKzL,MAAM7E,MAUb,OATA2E,EAAKytC,eAAiB9hC,KAAK8mC,oCAC3B9mC,KAAKwkC,OAAO/jC,EAAQiB,QACpBqlC,EAAM/mC,KAAKgnC,8BACX3yC,EAAKsU,OAASo+B,EAAIp+B,OAClBtU,EAAK4yC,KAAOF,EAAIE,KAChB5yC,EAAK2L,KAAO+mC,EAAI3hC,MAChBpF,KAAKwkC,OAAO/jC,EAAQkB,QACpB3B,KAAKwkC,OAAO/jC,EAAQ0B,OACpB9N,EAAK8yC,WAAannC,KAAKqmC,gBAChBrmC,KAAKwiC,WAAWnuC,EAAM,0BAG/B,MAEF,KAAKoM,EAAQiB,OAGX,GAFA1B,KAAKuY,QAEAvY,KAAKpB,MAAM6B,EAAQkB,UAAY3B,KAAKpB,MAAM6B,EAAQ4B,UACrD,GAAIrC,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKpB,MAAM6B,EAAQ2E,OAAQ,CACzD,IAAMtH,EAAQkC,KAAKorC,YAAYx2C,KAC/Bs4C,EAAgBpvC,IAAU2C,EAAQwB,UAAYnE,IAAU2C,EAAQqB,WAEhEorC,GAAgB,EAIpB,GAAIA,EAAe,CAKjB,GAJAltC,KAAKzL,MAAM6kB,oBAAqB,EAChCxkB,EAAOoL,KAAKqmC,gBACZrmC,KAAKzL,MAAM6kB,mBAAqB4xB,EAE5BhrC,KAAKzL,MAAM6kB,sBAAwBpZ,KAAKpB,MAAM6B,EAAQmB,QAAU5B,KAAKpB,MAAM6B,EAAQkB,SAAW3B,KAAKorC,YAAYx2C,OAAS6L,EAAQ0B,OAElI,OADAnC,KAAKwkC,OAAO/jC,EAAQkB,QACb/M,EAEPoL,KAAKikB,IAAIxjB,EAAQmB,OAiBrB,OAZEmlC,EADEnyC,EACIoL,KAAKgnC,4BAA4B,CAAChnC,KAAKstC,mCAAmC14C,KAE1EoL,KAAKgnC,8BAGb3yC,EAAKsU,OAASo+B,EAAIp+B,OAClBtU,EAAK4yC,KAAOF,EAAIE,KAChB5yC,EAAK2L,KAAO+mC,EAAI3hC,MAChBpF,KAAKwkC,OAAO/jC,EAAQkB,QACpB3B,KAAKwkC,OAAO/jC,EAAQ0B,OACpB9N,EAAK8yC,WAAannC,KAAKqmC,gBACvBhyC,EAAKytC,eAAiB,KACf9hC,KAAKwiC,WAAWnuC,EAAM,0BAE/B,KAAKoM,EAAQzD,OACX,OAAOgD,KAAK2gC,aAAa3gC,KAAKzL,MAAM7E,MAAO,+BAE7C,KAAK+Q,EAAQkF,MACb,KAAKlF,EAAQmF,OAGX,OAFAvR,EAAK3E,MAAQsQ,KAAKpB,MAAM6B,EAAQkF,OAChC3F,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,gCAE/B,KAAKoM,EAAQkD,QACX,GAAyB,MAArB3D,KAAKzL,MAAM7E,MAAe,CAG5B,GAFAsQ,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQC,KACrB,OAAOV,KAAKutC,oBAAoBvtC,KAAKzL,MAAM7E,MAAO,8BAA+B2E,GAGnF,GAAI2L,KAAKpB,MAAM6B,EAAQE,QACrB,OAAOX,KAAKutC,oBAAoBvtC,KAAKzL,MAAM7E,MAAO,8BAA+B2E,GAGnF,MAAM2L,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOs0B,GAAW0C,8BAGhD,MAAM/pB,KAAK2jB,aAEb,KAAKljB,EAAQC,IACX,OAAOV,KAAK2gC,aAAa3gC,KAAKzL,MAAM7E,MAAO,+BAE7C,KAAK+Q,EAAQE,OACX,OAAOX,KAAK2gC,aAAa3gC,KAAKzL,MAAM7E,MAAO,+BAE7C,KAAK+Q,EAAQuF,MAEX,OADAhG,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,sBAE/B,KAAKoM,EAAQiF,MAEX,OADA1F,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,6BAE/B,KAAKoM,EAAQ2E,MAEX,OADApF,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,sBAE/B,KAAKoM,EAAQoD,KAEX,OADA7D,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,wBAE/B,QACE,GAAgC,WAA5B2L,KAAKzL,MAAMK,KAAK4H,QAClB,OAAOwD,KAAKwtC,sBACP,GAAIxtC,KAAKzL,MAAMK,KAAK4H,QAAS,CAClC,IAAMsD,EAAQE,KAAKzL,MAAMK,KAAKkL,MAE9B,OADAE,KAAKuY,OACL,oDAA8BlkB,EAAMyL,IAK1C,MAAME,KAAK2jB,eApoCO,kCAuoCpB,WAME,IALA,IAAMkf,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACxB7e,EAAOoL,KAAK4sC,uBACZa,GAA4B,GAExBztC,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAKpB,MAAM6B,EAAQyB,gBAAkBlC,KAAKokB,sBAAsB,CACtG,IAAM/vB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAClCyvB,EAAWljC,KAAKikB,IAAIxjB,EAAQyB,aAClCurC,EAA4BA,GAA6BvK,EACzDljC,KAAKwkC,OAAO/jC,EAAQO,WAEfkiC,GAAYljC,KAAKpB,MAAM6B,EAAQU,WAClC9M,EAAK6tB,YAActtB,EACnBoL,KAAKuY,OACL3jB,EAAOoL,KAAKwiC,WAAWnuC,EAAM,yBAE7BA,EAAKq5C,WAAa94C,EAClBP,EAAKs5C,UAAY3tC,KAAKqmC,gBACtBrmC,KAAKwkC,OAAO/jC,EAAQU,UAEhBssC,GACFp5C,EAAK6uC,SAAWA,EAChBtuC,EAAOoL,KAAKwiC,WAAWnuC,EAAM,8BAE7BO,EAAOoL,KAAKwiC,WAAWnuC,EAAM,sBAKnC,OAAOO,IArqCW,iCAwqCpB,WACE,IAAMP,EAAO2L,KAAKqiC,YAElB,OAAIriC,KAAKikB,IAAIxjB,EAAQwB,WACnB5N,EAAK+yC,eAAiBpnC,KAAK4tC,sBACpB5tC,KAAKwiC,WAAWnuC,EAAM,2BAEtB2L,KAAK6tC,yBA/qCI,gDAmrCpB,WACE,IAAMC,EAAQ9tC,KAAK4tC,sBAEnB,IAAK5tC,KAAKzL,MAAM6kB,oBAAsBpZ,KAAKikB,IAAIxjB,EAAQ0B,OAAQ,CAC7D,IAAM9N,EAAO2L,KAAK+mB,YAAY+mB,EAAM/6C,MAAO+6C,EAAMn7C,IAAII,OAMrD,OALAsB,EAAKsU,OAAS,CAAC3I,KAAKstC,mCAAmCQ,IACvDz5C,EAAK4yC,KAAO,KACZ5yC,EAAK2L,KAAO,KACZ3L,EAAK8yC,WAAannC,KAAKqmC,gBACvBhyC,EAAKytC,eAAiB,KACf9hC,KAAKwiC,WAAWnuC,EAAM,0BAG/B,OAAOy5C,IAhsCW,uCAmsCpB,WACE,IAAMz5C,EAAO2L,KAAKqiC,YAClBriC,KAAKikB,IAAIxjB,EAAQ8C,YACjB,IAAM3O,EAAOoL,KAAK+tC,qCAGlB,IAFA15C,EAAKiF,MAAQ,CAAC1E,GAEPoL,KAAKikB,IAAIxjB,EAAQ8C,aACtBlP,EAAKiF,MAAMlH,KAAK4N,KAAK+tC,sCAGvB,OAA6B,IAAtB15C,EAAKiF,MAAMvI,OAAe6D,EAAOoL,KAAKwiC,WAAWnuC,EAAM,gCA7sC5C,gCAgtCpB,WACE,IAAMA,EAAO2L,KAAKqiC,YAClBriC,KAAKikB,IAAIxjB,EAAQ4C,WACjB,IAAMzO,EAAOoL,KAAKguC,4BAGlB,IAFA35C,EAAKiF,MAAQ,CAAC1E,GAEPoL,KAAKikB,IAAIxjB,EAAQ4C,YACtBhP,EAAKiF,MAAMlH,KAAK4N,KAAKguC,6BAGvB,OAA6B,IAAtB35C,EAAKiF,MAAMvI,OAAe6D,EAAOoL,KAAKwiC,WAAWnuC,EAAM,yBA1tC5C,2BA6tCpB,WACE,IAAM+xC,EAAYpmC,KAAKzL,MAAM4kB,OAC7BnZ,KAAKzL,MAAM4kB,QAAS,EACpB,IAAMvkB,EAAOoL,KAAKiuC,qBAElB,OADAjuC,KAAKzL,MAAM4kB,OAASitB,EACbxxC,IAluCW,kDAquCpB,WACE,GAAIoL,KAAKzL,MAAMK,OAAS6L,EAAQhM,MAA6B,MAArBuL,KAAKzL,MAAM7E,MAAe,CAChE,IAAMmzC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBpf,EAAO2L,KAAK2mC,kBAClB,OAAO3mC,KAAKitC,qBAAqBpK,EAAUpvB,EAAUpf,GAErD,OAAO2L,KAAKqmC,kBA5uCI,qCAgvCpB,WACE,IAAMhyC,EAAO2L,KAAKqiC,YAElB,OADAhuC,EAAK+yC,eAAiBpnC,KAAKoqC,2BACpBpqC,KAAKwiC,WAAWnuC,EAAM,oBAnvCX,gDAsvCpB,SAAmC65C,GACjC,IAAMxD,EAAQwD,EAAyBluC,KAAK2mC,kBAAoB3mC,KAAKopC,gCAOrE,OALIppC,KAAKpB,MAAM6B,EAAQqB,SACrB4oC,EAAMtD,eAAiBpnC,KAAKgpC,0BAC5BhpC,KAAKqnC,iBAAiBqD,IAGjBA,IA9vCW,iCAiwCpB,SAAoBr2C,GAGlB,OAFAA,EAAKmC,WAAW4wC,eAAiB/yC,EAAK+yC,eACtCpnC,KAAKqnC,iBAAiBhzC,EAAKmC,WAAYnC,EAAK+yC,eAAetgC,IAAKzS,EAAK+yC,eAAez0C,IAAImU,KACjFzS,EAAKmC,aApwCM,+BAuwCpB,WACE,IAAIg0C,EAAW,KAef,OAbIxqC,KAAKpB,MAAM6B,EAAQkD,WACrB6mC,EAAWxqC,KAAKqiC,YAES,MAArBriC,KAAKzL,MAAM7E,MACb86C,EAASlI,KAAO,OAEhBkI,EAASlI,KAAO,QAGlBtiC,KAAKuY,OACLvY,KAAKwiC,WAAWgI,EAAU,aAGrBA,IAvxCW,+BA0xCpB,SAAkBn2C,EAAM85C,GAAuC,WAAlBlM,EAAkB,wDAC7D,OAAIkM,EACKnuC,KAAKouC,iCAAiC/5C,GAAM,iEAA8BA,GAAM,EAAM4tC,MAG/F,qDAA+B5tC,GAAM,EAAO4tC,KA/xC1B,wCAkyCpB,SAA2B5tC,EAAMO,GAAwB,IAAlBqtC,EAAkB,wDACvD,GAAIjiC,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAM8kC,EAAW5mC,KAAKqiC,YADO,EAEeriC,KAAKknC,uCAFpB,SAE5BN,EAASQ,eAFmB,KAEH/yC,EAAKmyC,UAFF,KAG7BnyC,EAAK8yC,WAAaP,EAASQ,eAAiBpnC,KAAKwiC,WAAWoE,EAAU,kBAAoB,KAG5F,8DAAiCvyC,EAAMO,EAAMqtC,KAzyC3B,4BA4yCpB,SAAejtB,EAASq5B,GACtB,GAAIruC,KAAKzL,MAAMskB,QAAU7Y,KAAKpB,MAAM6B,EAAQhM,OAA8B,cAArBuL,KAAKzL,MAAM7E,MAAuB,CACrF,IAAM07C,EAAYprC,KAAKorC,YAEvB,GAAIA,EAAUx2C,OAAS6L,EAAQhM,MAAQwJ,GAAUmtC,EAAU17C,OAAQ,CACjE,IAAM2E,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKsuC,mBAAmBj6C,SAE5B,GAAI2L,KAAKuuC,oBAAsBvuC,KAAKgkB,aAAa,QAAS,CAC/D,IAAM3vB,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKwuC,yBAAyBn6C,GAGvC,IAAMiG,EAAO,EAAH,gDAAwB0a,EAASq5B,GAM3C,YAJwBh9C,IAApB2O,KAAKimC,YAA6BjmC,KAAKyuC,iBAAiBn0C,KAC1D0F,KAAKimC,WAAa,MAGb3rC,IAj0CW,sCAo0CpB,SAAyBjG,EAAMq6C,GAC7B,GAAkB,eAAdA,EAAK95C,KACP,GAAkB,YAAd85C,EAAKj6C,MACP,GAAIuL,KAAKpB,MAAM6B,EAAQ6E,SAAWtF,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKpB,MAAM6B,EAAQgE,YAAczE,KAAKpB,MAAM6B,EAAQsE,OAAS/E,KAAKpB,MAAM6B,EAAQ+E,SAC5I,OAAOxF,KAAKsoC,iBAAiBj0C,QAE1B,GAAI2L,KAAKpB,MAAM6B,EAAQhM,MAAO,CACnC,GAAkB,cAAdi6C,EAAKj6C,KACP,OAAOuL,KAAKsuC,mBAAmBj6C,GAC1B,GAAkB,SAAdq6C,EAAKj6C,KACd,OAAOuL,KAAKipC,mBAAmB50C,GAC1B,GAAkB,WAAdq6C,EAAKj6C,KACd,OAAOuL,KAAKkpC,oBAAoB70C,GAAM,GAK5C,mEAAsCA,EAAMq6C,KAr1C1B,0CAw1CpB,WACE,OAAO1uC,KAAKgkB,aAAa,SAAWhkB,KAAKgkB,aAAa,cAAgBhkB,KAAKgkB,aAAa,WAAahkB,KAAKuuC,oBAAsBvuC,KAAKgkB,aAAa,SAA3I,gDAAAhkB,MAAA,KAAAA,QAz1CW,sCA41CpB,WACE,QAAIA,KAAKpB,MAAM6B,EAAQhM,SAA+B,SAArBuL,KAAKzL,MAAM7E,OAAyC,cAArBsQ,KAAKzL,MAAM7E,OAA8C,WAArBsQ,KAAKzL,MAAM7E,OAAsBsQ,KAAKuuC,oBAA2C,SAArBvuC,KAAKzL,MAAM7E,SAI3K,+DAj2CkB,0CAo2CpB,WACE,GAAIsQ,KAAKuuC,oBAAsBvuC,KAAKgkB,aAAa,QAAS,CACxD,IAAM3vB,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKwuC,yBAAyBn6C,GAGvC,0EA32CkB,8BA82CpB,SAAiBq6C,EAAM7L,EAAUpvB,EAAUsR,GAAqB,WAC9D,IAAK/kB,KAAKpB,MAAM6B,EAAQwB,UAAW,OAAOysC,EAE1C,GAAI1uC,KAAKzL,MAAM2kB,uBAAwB,CACrC,IAAM4K,EAAS9jB,KAAK2uC,oBAEpB,GAAe,KAAX7qB,GAA4B,KAAXA,GAA4B,KAAXA,GAA4B,KAAXA,EAErD,OADA9jB,KAAK4uC,2BAA2B7pB,GACzB2pB,EAIX1uC,KAAKwkC,OAAO/jC,EAAQwB,UACpB,IAAM1N,EAAQyL,KAAKzL,MAAMmwB,QACnBmqB,EAAoB7uC,KAAKzL,MAAMykB,UAC/B3kB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxC,EAGIzT,KAAK8uC,gCAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,OAEF,EAAuBhvC,KAAKivC,wBAAwBF,GAApD,SAAKG,EAAL,KAAY7xC,EAAZ,KAEA,GAAI2xC,GAAU3xC,EAAQtM,OAAS,EAAG,CAChC,IAAMioB,EAAY,EAAI61B,GAEtB,GAAIxxC,EAAQtM,OAAS,EAAG,CACtBiP,KAAKzL,MAAQA,EACbyL,KAAKzL,MAAMykB,UAAYA,EAEvB,IAAK,IAAIroB,EAAI,EAAGA,EAAI0M,EAAQtM,OAAQJ,IAClCqoB,EAAU5mB,KAAKiL,EAAQ1M,GAAGoC,OALN,MAWlBiN,KAAK8uC,gCAFPC,EAToB,EASpBA,WACAC,EAVoB,EAUpBA,OAVoB,MAYHhvC,KAAKivC,wBAAwBF,GAZ1B,SAYrBG,EAZqB,KAYd7xC,EAZc,KAmBxB,GAJI2xC,GAAUE,EAAMn+C,OAAS,GAC3BiP,KAAKwX,MAAMjjB,EAAMxB,MAAOs0B,GAAWC,2BAGjC0nB,GAA2B,IAAjBE,EAAMn+C,OAAc,CAChCiP,KAAKzL,MAAQA,EACbykB,EAAU5mB,KAAK88C,EAAM,GAAGn8C,OACxBiN,KAAKzL,MAAMykB,UAAYA,EAHS,MAO5BhZ,KAAK8uC,gCAFPC,EAL8B,EAK9BA,WACAC,EAN8B,EAM9BA,QAWN,OANAhvC,KAAKivC,wBAAwBF,GAAY,GACzC/uC,KAAKzL,MAAMykB,UAAY61B,EACvB7uC,KAAKwkC,OAAO/jC,EAAQqB,OACpBzN,EAAKK,KAAOg6C,EACZr6C,EAAK06C,WAAaA,EAClB16C,EAAK86C,UAAYnvC,KAAKouC,iCAAiC/5C,GAAM,kBAAM,EAAK+6C,sBAAiB/9C,OAAWA,MAC7F2O,KAAKwiC,WAAWnuC,EAAM,2BA36CX,2CA86CpB,WACE2L,KAAKzL,MAAM0kB,0BAA0B7mB,KAAK4N,KAAKzL,MAAMxB,OACrD,IAAMg8C,EAAa/uC,KAAK2kC,0BAClBqK,GAAUhvC,KAAKpB,MAAM6B,EAAQqB,OAEnC,OADA9B,KAAKzL,MAAM0kB,0BAA0BhE,MAC9B,CACL85B,aACAC,YAr7CgB,qCAy7CpB,SAAwB36C,EAAMg7C,GAI5B,IAJ6C,WACvC7zC,EAAQ,CAACnH,GACTi7C,EAAS,GAES,IAAjB9zC,EAAMzK,QAAc,CACzB,IAAMsD,EAAOmH,EAAMyZ,MAED,4BAAd5gB,EAAKO,MACHP,EAAKytC,iBAAmBztC,EAAK8yC,WAC/BnnC,KAAKuvC,sBAAsBl7C,GAE3Bi7C,EAAOl9C,KAAKiC,GAGdmH,EAAMpJ,KAAKiC,EAAKgG,OACO,0BAAdhG,EAAKO,OACd4G,EAAMpJ,KAAKiC,EAAK06C,YAChBvzC,EAAMpJ,KAAKiC,EAAK86C,YAIpB,OAAIE,GACFC,EAAOh6C,SAAQ,SAAAjB,GAAI,OAAI,EAAKk7C,sBAAsBl7C,MAC3C,CAACi7C,EAAQ,KA59CtB,SAAmBE,EAAM96C,GAIvB,IAHA,IAAM+6C,EAAQ,GACRC,EAAQ,GAEL/+C,EAAI,EAAGA,EAAI6+C,EAAKz+C,OAAQJ,KAC9B+D,EAAK86C,EAAK7+C,GAAIA,EAAG6+C,GAAQC,EAAQC,GAAOt9C,KAAKo9C,EAAK7+C,IAGrD,MAAO,CAAC8+C,EAAOC,GAu9CNC,CAAUL,GAAQ,SAAAj7C,GAAI,OAAIA,EAAKsU,OAAOinC,OAAM,SAAA9B,GAAK,OAAI,EAAK/K,aAAa+K,GAAO,WAn9CnE,mCAs9CpB,SAAsBz5C,GACpB,IAAIw7C,EAEJ7vC,KAAK8vC,iBAAiBz7C,EAAKsU,OAAsC,OAA7BknC,EAAcx7C,EAAKmvB,YAAiB,EAASqsB,EAAYE,eAAe,GAC5G/vC,KAAK7G,MAAM8sB,MAAM+pB,GACjB,+CAAkB37C,GAAM,GAAO,GAC/B2L,KAAK7G,MAAMovC,SA59CO,8CA+9CpB,SAAiCl0C,EAAM5B,GACrC,IAAIyM,EAUJ,OARkE,IAA9Dc,KAAKzL,MAAM0kB,0BAA0BjoB,QAAQqD,EAAKtB,QACpDiN,KAAKzL,MAAM0kB,0BAA0B7mB,KAAK4N,KAAKzL,MAAMxB,OACrDmM,EAASzM,IACTuN,KAAKzL,MAAM0kB,0BAA0BhE,OAErC/V,EAASzM,IAGJyM,IA1+CW,4BA6+CpB,SAAe7K,EAAMwuC,EAAUpvB,GAQ7B,GAPApf,EAAO,EAAH,gDAAwBA,EAAMwuC,EAAUpvB,GAExCzT,KAAKikB,IAAIxjB,EAAQwB,YACnB5N,EAAK6uC,UAAW,EAChBljC,KAAKqnC,iBAAiBhzC,IAGpB2L,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAMmuC,EAAejwC,KAAK+mB,YAAY8b,EAAUpvB,GAGhD,OAFAw8B,EAAaz5C,WAAanC,EAC1B47C,EAAa7I,eAAiBpnC,KAAKgpC,0BAC5BhpC,KAAKwiC,WAAWyN,EAAc,sBAGvC,OAAO57C,IA5/CW,qCA+/CpB,SAAwBA,GACJ,sBAAdA,EAAKO,OAAqD,SAApBP,EAAKi2B,YAA6C,WAApBj2B,EAAKi2B,aAA0C,2BAAdj2B,EAAKO,MAAyD,SAApBP,EAAK00C,YAAuC,yBAAd10C,EAAKO,MAAuD,SAApBP,EAAK00C,YAI9N,2DAA8B10C,KApgDZ,yBAugDpB,SAAYA,GACV,IAAM67C,EAAO,EAAH,6CAAqB77C,GAM/B,MAJkB,2BAAd67C,EAAKt7C,MAAmD,yBAAds7C,EAAKt7C,OACjDs7C,EAAKnH,WAAamH,EAAKnH,YAAc,SAGhCmH,IA9gDW,oCAihDpB,SAAuB77C,GACrB,GAAI2L,KAAKgkB,aAAa,QAAS,CAC7B3vB,EAAK00C,WAAa,OAClB,IAAMoH,EAAkBnwC,KAAKqiC,YAG7B,OAFAriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQY,SACrBhN,EAAKuU,WAAa5I,KAAKowC,wBACvBpwC,KAAKqwC,gBAAgBh8C,GACd,MAEA2L,KAAKipC,mBAAmBkH,GAE5B,GAAInwC,KAAKgkB,aAAa,UAAW,CACtC3vB,EAAK00C,WAAa,OAClB,IAAMoH,EAAkBnwC,KAAKqiC,YAE7B,OADAriC,KAAKuY,OACEvY,KAAKkpC,oBAAoBiH,GAAiB,GAC5C,GAAInwC,KAAKgkB,aAAa,aAAc,CACzC3vB,EAAK00C,WAAa,OAClB,IAAMoH,EAAkBnwC,KAAKqiC,YAE7B,OADAriC,KAAKuY,OACEvY,KAAKsuC,mBAAmB6B,GAC1B,GAAInwC,KAAKuuC,oBAAsBvuC,KAAKgkB,aAAa,QAAS,CAC/D3vB,EAAK00C,WAAa,QAClB,IAAMoH,EAAkBnwC,KAAKqiC,YAE7B,OADAriC,KAAKuY,OACEvY,KAAKwuC,yBAAyB2B,GAErC,iEAAoC97C,KA9iDpB,2BAkjDpB,SAAcA,GACZ,0DAA2BqU,eAEvB1I,KAAKgkB,aAAa,SAAWhkB,KAAKorC,YAAYx2C,OAAS6L,EAAQoD,QACjExP,EAAK00C,WAAa,OAClB/oC,KAAKuY,OACLvY,KAAKuY,QACE,KAzjDS,gDA+jDpB,SAAmClkB,GACjC,IAAMmf,EAAMxT,KAAKzL,MAAMxB,MACjBu9C,EAAe,EAAH,oEAA4Cj8C,GAM9D,OAJIi8C,GAAoC,SAApBj8C,EAAK00C,YACvB/oC,KAAK2jB,WAAWnQ,GAGX88B,IAvkDW,0BA0kDpB,SAAaj8C,EAAMH,EAAaq8C,GAC9B,gDAAmBl8C,EAAMH,EAAaq8C,GAElCvwC,KAAK0jB,aAAa,OACpBrvB,EAAKytC,eAAiB9hC,KAAK8mC,uCA9kDX,8BAklDpB,SAAiBpF,EAAW8O,EAAQj8C,GAClC,IAAMif,EAAMxT,KAAKzL,MAAMxB,MAEvB,GAAIiN,KAAKgkB,aAAa,WAAY,CAChC,GAAIhkB,KAAKywC,6BAA6B/O,EAAW8O,GAC/C,OAGFA,EAAO74C,SAAU,EAGnB,oDAAuB+pC,EAAW8O,EAAQj8C,GAEtCi8C,EAAO74C,UACW,kBAAhB64C,EAAO57C,MAA4C,yBAAhB47C,EAAO57C,MAAmD,uBAAhB47C,EAAO57C,KACtFoL,KAAKwX,MAAMhE,EAAK6T,GAAWI,qBAClB+oB,EAAO9gD,OAChBsQ,KAAKwX,MAAMg5B,EAAO9gD,MAAMqD,MAAOs0B,GAAWK,iCAnmD5B,wBAwmDpB,SAAWxR,GACT,MAAgB,aAATA,GAAgC,kBAATA,IAzmDZ,0BA4mDpB,WACE,IAAMA,EAAO,EAAH,4CACJw6B,EAAW,KAAOx6B,EAEnBlW,KAAK2wC,WAAWz6B,IAAUlW,KAAKzL,MAAM4kB,QACxCnZ,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcsD,kBAAmB+jC,GAG9D1wC,KAAKmc,YAAY1b,EAAQhM,KAAMi8C,KApnDb,8BAunDpB,SAAiB3+C,GACf,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEpD,OAAa,MAATzhB,GAAyB,MAATwmB,EACXvY,KAAKsd,SAAS7c,EAAQa,UAAW,IAC/BtB,KAAKzL,MAAM4kB,QAAoB,KAATpnB,GAAwB,KAATA,EAErCiO,KAAKzL,MAAM4kB,QAAmB,KAATpnB,EACjB,KAATwmB,EACKvY,KAAKsd,SAAS7c,EAAQyB,YAAa,GAGrClC,KAAKsd,SAAS7c,EAAQwB,SAAU,GA19H7C,SAAyBggB,EAAS1J,GAChC,OAAmB,KAAZ0J,GAA2B,KAAT1J,EA09HZq4B,CAAgB7+C,EAAMwmB,IAC/BvY,KAAKzL,MAAMif,KAAO,EACXxT,KAAK6wC,gBAEZ,oDAA8B9+C,GAXvBiO,KAAKsd,SAAS7c,EAAQgD,WAAY,KA7nDzB,0BA4oDpB,SAAapP,EAAMyuC,GACjB,MAAkB,uBAAdzuC,EAAKO,KACAoL,KAAK+iC,aAAa1uC,EAAKmC,WAAYssC,GAE1C,gDAA0BzuC,EAAMyuC,KAhpDhB,0BAopDpB,SAAazuC,GAAqB,IAAf2uC,EAAe,wDAChC,MAAkB,uBAAd3uC,EAAKO,KACP,gDAA0BoL,KAAK8wC,oBAAoBz8C,GAAO2uC,GAE1D,gDAA0B3uC,EAAM2uC,KAxpDhB,8BA4pDpB,SAAiB+N,EAAUC,EAAkBhO,GAC3C,IAAK,IAAIryC,EAAI,EAAGA,EAAIogD,EAAShgD,OAAQJ,IAAK,CACxC,IAAM+9C,EAAOqC,EAASpgD,GAEsB,wBAA/B,MAAR+9C,OAAe,EAASA,EAAK95C,QAChCm8C,EAASpgD,GAAKqP,KAAK8wC,oBAAoBpC,IAI3C,2DAA8BqC,EAAUC,EAAkBhO,KArqDxC,8BAwqDpB,SAAiB+N,EAAUE,GACzB,IAAK,IAAItgD,EAAI,EAAGA,EAAIogD,EAAShgD,OAAQJ,IAAK,CACxC,IAAIugD,EAEExC,EAAOqC,EAASpgD,IAElB+9C,GAAsB,uBAAdA,EAAK95C,MAAiE,OAA7Bs8C,EAAcxC,EAAKlrB,QAAkB0tB,EAAY9P,iBAAmB2P,EAAShgD,OAAS,IAAMkgD,GAC/IjxC,KAAKwX,MAAMk3B,EAAKtH,eAAer0C,MAAOs0B,GAAWoC,mBAIrD,OAAOsnB,IAnrDW,4BAsrDpB,SAAeI,EAAOC,EAAcC,EAAStsB,GAC3C,IAAM1wB,EAAO,EAAH,gDAAwB88C,EAAOC,EAAcC,EAAStsB,GAMhE,OAJIqsB,IAAiBpxC,KAAKzL,MAAM2kB,wBAC9BlZ,KAAKsxC,iBAAiBj9C,EAAKmT,UAGtBnT,IA7rDW,uBAgsDpB,SAAUq6C,GACR,GAAkB,uBAAdA,EAAK95C,KAA+B,8BADvBmG,EACuB,iCADvBA,EACuB,kBACtC,gEAAuB2zC,GAAvB,OAAgC3zC,OAlsDhB,gCAssDpB,SAAmB1G,GAKjB,OAJI2L,KAAKpB,MAAM6B,EAAQqB,SACrBzN,EAAK+yC,eAAiBpnC,KAAKgpC,2BAG7B,sDAAgC30C,KA3sDd,uCA8sDpB,SAA0BA,GAKxB,OAJI2L,KAAKpB,MAAM6B,EAAQqB,SACrBzN,EAAK+yC,eAAiBpnC,KAAKgpC,2BAG7B,6DAAuC30C,KAntDrB,2BAstDpB,WACE,OAAO2L,KAAK0jB,aAAa,MAAlB,iCAAA1jB,MAAA,KAAAA,QAvtDW,6BA0tDpB,WACE,OAAOA,KAAKpB,MAAM6B,EAAQqB,QAAnB,mCAAA9B,MAAA,KAAAA,QA3tDW,oCA8tDpB,SAAuBkhC,GACrB,OAAQlhC,KAAKpB,MAAM6B,EAAQqB,QAApB,0DAA2Do/B,KA/tDhD,6BAkuDpB,SAAgBQ,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,GAatE,GAZIV,EAAOsJ,UACTxqC,KAAK2jB,WAAWud,EAAOsJ,SAASz3C,cAG3BmuC,EAAOsJ,SAEVxqC,KAAK0jB,aAAa,OACpBwd,EAAOY,eAAiB9hC,KAAK8mC,qCAG/B,mDAAsBpF,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,GAE1EV,EAAOv4B,QAAUg5B,EAAe,CAClC,IAAMh5B,EAASu4B,EAAOv4B,OAElBA,EAAO5X,OAAS,GAAKiP,KAAKuxC,YAAY5oC,EAAO,KAC/C3I,KAAKwX,MAAM0pB,EAAOnuC,MAAOs0B,GAAW+B,mCAEjC,GAAoB,qBAAhB8X,EAAOtsC,MAA+B+sC,GAAiBT,EAAOxxC,MAAMiZ,OAAQ,CACrF,IAAMA,EAASu4B,EAAOxxC,MAAMiZ,OAExBA,EAAO5X,OAAS,GAAKiP,KAAKuxC,YAAY5oC,EAAO,KAC/C3I,KAAKwX,MAAM0pB,EAAOnuC,MAAOs0B,GAAW+B,iCAzvDtB,oCA8vDpB,SAAuBsY,EAAWR,EAAQ5d,EAAaD,GACjD6d,EAAOsJ,UACTxqC,KAAK2jB,WAAWud,EAAOsJ,SAASz3C,cAG3BmuC,EAAOsJ,SAEVxqC,KAAK0jB,aAAa,OACpBwd,EAAOY,eAAiB9hC,KAAK8mC,qCAG/B,0DAA6BpF,EAAWR,EAAQ5d,EAAaD,KAzwD3C,6BA4wDpB,SAAgBhvB,GAOd,GANA,mDAAsBA,GAElBA,EAAKisC,YAActgC,KAAK0jB,aAAa,OACvCrvB,EAAKm9C,oBAAsBxxC,KAAKgqC,uCAG9BhqC,KAAKgkB,aAAa,cAAe,CACnChkB,KAAKuY,OACL,IAAMk5B,EAAcp9C,EAAKi1C,WAAa,GAEtC,EAAG,CACD,IAAMj1C,EAAO2L,KAAKqiC,YAClBhuC,EAAK6E,GAAK8G,KAAKopC,+BAA8B,GAEzCppC,KAAK0jB,aAAa,KACpBrvB,EAAKytC,eAAiB9hC,KAAKgqC,sCAE3B31C,EAAKytC,eAAiB,KAGxB2P,EAAYr/C,KAAK4N,KAAKwiC,WAAWnuC,EAAM,0BAChC2L,KAAKikB,IAAIxjB,EAAQmB,WAlyDV,qCAsyDpB,SAAwBs/B,GACtB,2DAA8BA,GAC9B,IAAMv4B,EAAS3I,KAAK0xC,6BAA6BxQ,GAEjD,GAAIv4B,EAAO5X,OAAS,EAAG,CACrB,IAAM+8C,EAAQnlC,EAAO,GAEjB3I,KAAKuxC,YAAYzD,IAA0B,QAAhB5M,EAAOoB,KACpCtiC,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAWkB,2BAC1BvoB,KAAKuxC,YAAYzD,IAC1B9tC,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAW4B,8BAhzDrB,+BAqzDpB,SAAkB50B,EAAMs9C,GACtB,IAAMnH,EAAWxqC,KAAKyqC,oBAChB/5C,EAAM,EAAH,mDAA2B2D,EAAMs9C,GAE1C,OADAt9C,EAAKm2C,SAAWA,EACT95C,IAzzDW,+BA4zDpB,SAAkB4nC,EAAMuK,EAAUpvB,EAAU6P,EAAaD,EAASqf,EAAWC,EAAY5d,GAMvF,IAAI+c,EALAxJ,EAAKkS,UACPxqC,KAAK2jB,WAAW2U,EAAKkS,SAASz3C,cAGzBulC,EAAKkS,SAGRxqC,KAAK0jB,aAAa,OAASif,IAC7Bb,EAAiB9hC,KAAK8mC,oCACjB9mC,KAAKpB,MAAM6B,EAAQiB,SAAS1B,KAAK2jB,cAGxC,qDAAwB2U,EAAMuK,EAAUpvB,EAAU6P,EAAaD,EAASqf,EAAWC,EAAY5d,GAE3F+c,KACDxJ,EAAK5oC,OAAS4oC,GAAMwJ,eAAiBA,KA50DtB,0CAg1DpB,SAA6BgM,GAwB3B,OAvBI9tC,KAAKikB,IAAIxjB,EAAQwB,YACA,eAAf6rC,EAAMl5C,MACRoL,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAW2B,mBAGjChpB,KAAKuxC,YAAYzD,IACnB9tC,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAWgC,2BAGrCykB,EAAM5K,UAAW,GAGfljC,KAAKpB,MAAM6B,EAAQqB,OACrBgsC,EAAM1G,eAAiBpnC,KAAKgpC,0BACnBhpC,KAAKuxC,YAAYzD,IAC1B9tC,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAW8B,6BAGjCnpB,KAAKpB,MAAM6B,EAAQkC,KAAO3C,KAAKuxC,YAAYzD,IAC7C9tC,KAAKwX,MAAMs2B,EAAM/6C,MAAOs0B,GAAWkC,oBAGrCvpB,KAAKqnC,iBAAiByG,GACfA,IAx2DW,+BA22DpB,SAAkBjL,EAAUpvB,EAAUm+B,GACpC,IAAMv9C,EAAO,EAAH,mDAA2BwuC,EAAUpvB,EAAUm+B,GAMzD,MAJkB,sBAAdv9C,EAAKO,MAAgCP,EAAK+yC,gBAAkB/yC,EAAK81C,MAAMp3C,MAAQsB,EAAK+yC,eAAer0C,OACrGiN,KAAKwX,MAAMnjB,EAAK+yC,eAAer0C,MAAOs0B,GAAWmC,uBAG5Cn1B,IAl3DW,sCAq3DpB,SAAyBA,GACvB,OAAKg2B,GAAkBh2B,GAIhBk2B,GAAqBvqB,KAAKzL,OAH/B,4DAAsCF,KAv3DtB,uCA63DpB,SAA0BA,EAAMw9C,EAAWj9C,EAAMk9C,GAC/CD,EAAUE,MAAQ1nB,GAAkBh2B,GAAQ2L,KAAKopC,+BAA8B,GAAM,GAAQppC,KAAK2mC,kBAClG3mC,KAAKgyC,UAAUH,EAAUE,MAAOD,EAvrIf3J,GAwrIjB9zC,EAAKuU,WAAWxW,KAAK4N,KAAKwiC,WAAWqP,EAAWj9C,MAh4D9B,8CAm4DpB,SAAiCP,GAC/BA,EAAKi2B,WAAa,QAClB,IAAIgY,EAAO,KAQX,GANItiC,KAAKpB,MAAM6B,EAAQsF,SACrBu8B,EAAO,SACEtiC,KAAKgkB,aAAa,UAC3Bse,EAAO,QAGLA,EAAM,CACR,IAAMwK,EAAK9sC,KAAKorC,YAEH,SAAT9I,GAAmBwK,EAAGl4C,OAAS6L,EAAQoD,MACzC7D,KAAK2jB,WAAWmpB,EAAG/5C,QAGjBw3B,GAAqBuiB,IAAOA,EAAGl4C,OAAS6L,EAAQY,QAAUyrC,EAAGl4C,OAAS6L,EAAQoD,QAChF7D,KAAKuY,OACLlkB,EAAKi2B,WAAagY,GAItB,2EAA8CjuC,KA15D5B,kCA65DpB,SAAqBA,GACnB,IAAMw9C,EAAY7xC,KAAKqiC,YACjB4P,EAAqBjyC,KAAKpB,MAAM6B,EAAQzD,QACxCk1C,EAAalyC,KAAKmyC,wBACpBC,EAAoB,KAEA,eAApBF,EAAWt9C,OACW,SAApBs9C,EAAWz9C,KACb29C,EAAoB,OACS,WAApBF,EAAWz9C,OACpB29C,EAAoB,WAIxB,IAAItP,GAAY,EAEhB,GAAI9iC,KAAKgkB,aAAa,QAAUhkB,KAAKqyC,sBAAsB,MAAO,CAChE,IAAMC,EAAWtyC,KAAK2mC,iBAAgB,GAEZ,OAAtByL,GAA+BpyC,KAAKpB,MAAM6B,EAAQhM,OAAUuL,KAAKzL,MAAMK,KAAK4H,SAK9Eq1C,EAAUU,SAAWL,EACrBL,EAAUvnB,WAAa,KACvBunB,EAAUE,MAAQ/xC,KAAK2mC,oBANvBkL,EAAUU,SAAWD,EACrBT,EAAUvnB,WAAa8nB,EACvBP,EAAUE,MAAQxrB,GAAgB+rB,QAM/B,CACL,GAA0B,OAAtBF,IAA+BpyC,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKzL,MAAMK,KAAK4H,SAC7Eq1C,EAAUU,SAAWvyC,KAAK2mC,iBAAgB,GAC1CkL,EAAUvnB,WAAa8nB,MAClB,CACL,GAAIH,EACF,MAAMjyC,KAAKwX,MAAMq6B,EAAU9+C,MAAOsW,EAAc0C,sBAAuBmmC,EAAWxiD,OAGpFmiD,EAAUU,SAAWL,EACrBL,EAAUvnB,WAAa,KAGrBtqB,KAAKkkB,cAAc,MACrB2tB,EAAUE,MAAQ/xC,KAAK2mC,mBAEvB7D,GAAY,EACZ+O,EAAUE,MAAQxrB,GAAgBsrB,EAAUU,WAIhD,IAAMC,EAAmBnoB,GAAkBh2B,GACrCo+C,EAAwBpoB,GAAkBwnB,GAE5CW,GAAoBC,GACtBzyC,KAAKwX,MAAMq6B,EAAU9+C,MAAOs0B,GAAWmB,sCAGrCgqB,GAAoBC,IACtBzyC,KAAKkqC,kBAAkB2H,EAAUE,MAAMt9C,KAAMo9C,EAAUE,MAAMh/C,OAAO,IAGlE+vC,GAAc0P,GAAqBC,GACrCzyC,KAAK0yC,kBAAkBb,EAAUE,MAAMt9C,KAAMo9C,EAAU9+C,OAAO,GAAM,GAGtEiN,KAAKgyC,UAAUH,EAAUE,MAAO,mBArxIf5J,GAsxIjB9zC,EAAKuU,WAAWxW,KAAK4N,KAAKwiC,WAAWqP,EAAW,sBA99D9B,8BAi+DpB,WACE,OAAQ7xC,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQ2E,MACX,OAAOpF,KAAK2mC,iBAAgB,GAE9B,QACE,+DAv+Dc,iCA2+DpB,SAAoBtyC,EAAMs+C,GACxB,IAAMrQ,EAAOjuC,EAAKiuC,KAEL,QAATA,GAA2B,QAATA,GAAkBtiC,KAAK0jB,aAAa,OACxDrvB,EAAKytC,eAAiB9hC,KAAK8mC,qCAG7B,uDAA0BzyC,EAAMs+C,KAl/Dd,wBAq/DpB,SAAWzC,EAAM5N,GACf,8CAAiB4N,EAAM5N,GAEnBtiC,KAAKpB,MAAM6B,EAAQqB,SACrBouC,EAAKh3C,GAAGkuC,eAAiBpnC,KAAKgpC,0BAC9BhpC,KAAKqnC,iBAAiB6I,EAAKh3C,OA1/DX,+CA8/DpB,SAAkC7E,EAAMqB,GACtC,GAAIsK,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAMkpC,EAAwBhrC,KAAKzL,MAAM6kB,mBACzCpZ,KAAKzL,MAAM6kB,oBAAqB,EAChC/kB,EAAK8yC,WAAannC,KAAKgpC,0BACvBhpC,KAAKzL,MAAM6kB,mBAAqB4xB,EAGlC,4EAA+C32C,EAAMqB,KAtgEnC,mCAygEpB,WACE,OAAOsK,KAAKpB,MAAM6B,EAAQqB,QAAnB,yCAAA9B,MAAA,KAAAA,QA1gEW,8BA6gEpB,SAAiB+kB,EAAqB6tB,GAAgB,IAChDC,EAGAhP,EAJgD,OAGhDtvC,EAAQ,KAGZ,GAAIyL,KAAKgJ,UAAU,SAAWhJ,KAAKpB,MAAM6B,EAAQo7B,cAAgB77B,KAAK0jB,aAAa,MAAO,CAGxF,GAFAnvB,EAAQyL,KAAKzL,MAAMmwB,UACnBmf,EAAM7jC,KAAK8yC,UAAS,gEAA6B/tB,EAAqB6tB,KAAiBr+C,IAC9EgH,MAAO,OAAOsoC,EAAIxvC,KAC3B,IACE2gB,EACEhV,KAAKzL,MADPygB,QAEIyG,EAAazG,EAAQA,EAAQjkB,OAAS,GAExC0qB,IAAeniB,EAAMkiC,OACvBxmB,EAAQjkB,QAAU,EACT0qB,IAAeniB,EAAMoiC,SAC9B1mB,EAAQjkB,QAAU,GAItB,GAAoB,OAAf8hD,EAAOhP,IAAgBgP,EAAKt3C,OAASyE,KAAK0jB,aAAa,KAAM,CAChE,IAAIqvB,EAAOC,EAGPlR,EADJvtC,EAAQA,GAASyL,KAAKzL,MAAMmwB,QAE5B,IAAMviB,EAAQnC,KAAK8yC,UAAS,SAAAG,GAC1B,IAAIC,EAEJpR,EAAiB,EAAKgF,oCACtB,IAAMqM,EAAkB,EAAK/E,iCAAiCtM,GAAgB,WAC5E,IAAM5iC,EAAS,EAAH,4CAA0B6lB,EAAqB6tB,GAE3D,OADA,EAAKQ,2BAA2Bl0C,EAAQ4iC,GACjC5iC,KAE8C,OAAlDg0C,EAAwBC,EAAgB3vB,QAAkB0vB,EAAsB9R,eAAe6R,IACpG,IAAMvE,EAAO,EAAK2E,8BAA8BF,GAIhD,MAHkB,4BAAdzE,EAAK95C,MAAoCq+C,IAC7CvE,EAAK5M,eAAiBA,EACtB,EAAKsR,2BAA2B1E,EAAM5M,GAC/BqR,IACN5+C,GACC4+C,EAAkB,KAEtB,GAAIhxC,EAAM9N,MAAgE,4BAAxD2L,KAAKqzC,8BAA8BlxC,EAAM9N,MAAMO,KAAoC,CACnG,IAAKuN,EAAM5G,QAAU4G,EAAM2iB,QAKzB,OAJI3iB,EAAM9N,KAAKi/C,OACbtzC,KAAKwX,MAAMsqB,EAAe/uC,MAAOs0B,GAAW4C,iDAGvC9nB,EAAM9N,KAGf8+C,EAAkBhxC,EAAM9N,KAG1B,GAAqB,OAAhB0+C,EAAQlP,IAAgBkP,EAAM1+C,KAEjC,OADA2L,KAAKzL,MAAQsvC,EAAIjf,UACVif,EAAIxvC,KAGb,GAAI8+C,EAEF,OADAnzC,KAAKzL,MAAQ4N,EAAMyiB,UACZuuB,EAGT,GAAqB,OAAhBH,EAAQnP,IAAgBmP,EAAMnuB,OAAQ,MAAMgf,EAAItoC,MACrD,GAAI4G,EAAM0iB,OAAQ,MAAM1iB,EAAM5G,MAC9B,MAAMyE,KAAKwX,MAAMsqB,EAAe/uC,MAAOs0B,GAAW2C,mCAGpD,2DAA8BjF,EAAqB6tB,KArlEjC,wBAwlEpB,SAAWv+C,GAAM,WACf,GAAI2L,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAM5C,EAASc,KAAK8yC,UAAS,WAC3B,IAAM9H,EAAwB,EAAKz2C,MAAM6kB,mBACzC,EAAK7kB,MAAM6kB,oBAAqB,EAChC,IAAMwtB,EAAW,EAAKvE,YAHW,EAIW,EAAK6E,uCAJhB,SAQjC,OAJCN,EAASQ,eAJuB,KAIP/yC,EAAKmyC,UAJE,KAKjC,EAAKjyC,MAAM6kB,mBAAqB4xB,EAC5B,EAAK5mB,sBAAsB,EAAKT,aAC/B,EAAK/kB,MAAM6B,EAAQ0B,QAAQ,EAAKwhB,aAC9BijB,KAET,GAAI1nC,EAAO2lB,OAAQ,OAAO,KACtB3lB,EAAO3D,QAAOyE,KAAKzL,MAAQ2K,EAAO0lB,WACtCvwB,EAAK8yC,WAAajoC,EAAO7K,KAAK+yC,eAAiBpnC,KAAKwiC,WAAWtjC,EAAO7K,KAAM,kBAAoB,KAGlG,qDAAwBA,KAzmEN,8BA4mEpB,SAAiBsU,GACf,OAAO3I,KAAKpB,MAAM6B,EAAQqB,QAAnB,oCAAA9B,MAAA,KAAAA,KAAoD2I,KA7mEzC,wCAgnEpB,SAA2BtU,EAAMsU,IACmC,IAA9D3I,KAAKzL,MAAM0kB,0BAA0BjoB,QAAQqD,EAAKtB,OACpDsB,EAAKsU,OAASA,EAEd,8DAAiCtU,EAAMsU,KApnEvB,yBAwnEpB,SAAYtU,EAAMk/C,EAAiBC,GACjC,IAAIA,IAAiF,IAA9DxzC,KAAKzL,MAAM0kB,0BAA0BjoB,QAAQqD,EAAKtB,OAAzE,CAIA,IAAK,IAAIpC,EAAI,EAAGA,EAAI0D,EAAKsU,OAAO5X,OAAQJ,IAClCqP,KAAKuxC,YAAYl9C,EAAKsU,OAAOhY,KAAOA,EAAI,GAC1CqP,KAAKwX,MAAMnjB,EAAKsU,OAAOhY,GAAGoC,MAAOs0B,GAAWiC,sBAIhD,uDAA4B5gB,cAnoEV,gDAsoEpB,SAAmC+qC,GACjC,6EAAgDA,IAAkE,IAApDzzC,KAAKzL,MAAMykB,UAAUhoB,QAAQgP,KAAKzL,MAAMxB,UAvoEpF,6BA0oEpB,SAAgBuwC,EAAMT,EAAUpvB,EAAU8vB,GAAS,WACjD,GAAkB,eAAdD,EAAK1uC,MAAuC,UAAd0uC,EAAK7uC,OAAgE,IAA5CuL,KAAKzL,MAAMykB,UAAUhoB,QAAQ6xC,GAAkB,CACxG7iC,KAAKuY,OACL,IAAMlkB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxCpf,EAAKwF,OAASypC,EACdjvC,EAAKqU,UAAY1I,KAAK0zC,6BAA6BjzC,EAAQkB,QAAQ,GACnE2hC,EAAOtjC,KAAKwiC,WAAWnuC,EAAM,uBACxB,GAAkB,eAAdivC,EAAK1uC,MAAuC,UAAd0uC,EAAK7uC,MAAoBuL,KAAK0jB,aAAa,KAAM,CACxF,IAAMnvB,EAAQyL,KAAKzL,MAAMmwB,QACnBviB,EAAQnC,KAAK8yC,UAAS,SAAAG,GAAK,OAAI,EAAKU,kCAAkC9Q,EAAUpvB,IAAaw/B,MAAS1+C,GAC5G,IAAK4N,EAAM5G,QAAU4G,EAAM2iB,QAAS,OAAO3iB,EAAM9N,KACjD,IAAM6K,EAASc,KAAK8yC,UAAS,+DAA4BxP,EAAMT,EAAUpvB,EAAU8vB,KAAUhvC,GAC7F,GAAI2K,EAAO7K,OAAS6K,EAAO3D,MAAO,OAAO2D,EAAO7K,KAEhD,GAAI8N,EAAM9N,KAER,OADA2L,KAAKzL,MAAQ4N,EAAMyiB,UACZziB,EAAM9N,KAGf,GAAI6K,EAAO7K,KAET,OADA2L,KAAKzL,MAAQ2K,EAAO0lB,UACb1lB,EAAO7K,KAGhB,MAAM8N,EAAM5G,OAAS2D,EAAO3D,MAG9B,0DAA6B+nC,EAAMT,EAAUpvB,EAAU8vB,KArqErC,4BAwqEpB,SAAeD,EAAMT,EAAUpvB,EAAU8vB,EAASqQ,GAAgB,WAChE,GAAI5zC,KAAKpB,MAAM6B,EAAQyB,cAAgBlC,KAAK6zC,sBAAuB,CAGjE,GAFAD,EAAepQ,qBAAsB,EAEjCD,EAEF,OADAqQ,EAAelQ,MAAO,EACfJ,EAGTtjC,KAAKuY,OACL,IAAMlkB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAMxC,OALApf,EAAKwF,OAASypC,EACdjvC,EAAKy/C,cAAgB9zC,KAAKgqC,sCAC1BhqC,KAAKwkC,OAAO/jC,EAAQiB,QACpBrN,EAAKqU,UAAY1I,KAAK0zC,6BAA6BjzC,EAAQkB,QAAQ,GACnEtN,EAAK6uC,UAAW,EACTljC,KAAK+zC,qBAAqB1/C,GAAM,GAClC,IAAKkvC,GAAWvjC,KAAKg0C,oBAAsBh0C,KAAK0jB,aAAa,KAAM,CACxE,IAAMrvB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxCpf,EAAKwF,OAASypC,EACd,IAAMpkC,EAASc,KAAK8yC,UAAS,WAK3B,OAJAz+C,EAAKy/C,cAAgB,EAAKG,+CAC1B,EAAKzP,OAAO/jC,EAAQiB,QACpBrN,EAAKqU,UAAY,EAAKgrC,6BAA6BjzC,EAAQkB,QAAQ,GAC/DiyC,EAAepQ,sBAAqBnvC,EAAK6uC,UAAW,GACjD,EAAK6Q,qBAAqB1/C,EAAMu/C,EAAepQ,wBAGxD,GAAItkC,EAAO7K,KAET,OADI6K,EAAO3D,QAAOyE,KAAKzL,MAAQ2K,EAAO0lB,WAC/B1lB,EAAO7K,KAIlB,yDAA4BivC,EAAMT,EAAUpvB,EAAU8vB,EAASqQ,KA1sE7C,+BA6sEpB,SAAkBv/C,GAAM,WAClB6/C,EAAQ,KAERl0C,KAAKg0C,oBAAsBh0C,KAAK0jB,aAAa,OAC/CwwB,EAAQl0C,KAAK8yC,UAAS,kBAAM,EAAKmB,kDAAgD5/C,MAGnFA,EAAKy/C,cAAgBI,EACrB,qDAAwB7/C,KArtEN,+CAwtEpB,SAAkCwuC,EAAUpvB,GAC1C,IAAMpf,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAExC,GADAzT,KAAKm0C,oBAAoB9/C,GACpB2L,KAAKo0C,WAAW//C,GACrB,OAAO2L,KAAKq0C,qBAAqBhgD,OAAMhD,GAAW,KA5tEhC,mCA+tEpB,SAAsBU,GACpB,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEpD,GAAa,KAATzhB,GAAwB,KAATwmB,GAAevY,KAAKzL,MAAM+kB,eAI3C,OAHAtZ,KAAKzL,MAAM+kB,gBAAiB,EAC5BtZ,KAAKzL,MAAMif,KAAO,OAClBxT,KAAKwb,YAIP,yDAA4BzpB,KAzuEV,gCA4uEpB,SAAmBA,GACjB,IAAMwmB,EAAOvY,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GAEvC,MAATzhB,GAAyB,MAATwmB,EAKpB,sDAAyBxmB,GAJvBiO,KAAKsd,SAAS7c,EAAQgB,UAAW,KAhvEjB,2BAuvEpB,SAAc7H,EAAMrD,GAClB,IAAM+9C,EAAW,EAAH,+CAAuB16C,EAAMrD,GAM3C,OAJIyJ,KAAKzL,MAAM+kB,gBACbtZ,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAK6T,GAAW+C,yBAGjCkqB,IA9vEW,8BAiwEpB,WACE,GAAIt0C,KAAKgJ,UAAU,iBAAmBhJ,KAAKu0C,kBAQzC,OAPIv0C,KAAKzL,MAAM+kB,gBACbtZ,KAAK2jB,WAAW,KAAM0D,GAAW0B,mBAGnC/oB,KAAKw0C,2BACLx0C,KAAKzL,MAAMif,KAAOxT,KAAKu0C,uBACvBv0C,KAAKzL,MAAM+kB,gBAAiB,GAI9B,IAAItZ,KAAKzL,MAAM+kB,eAWf,4DAVE,IAAMxS,EAAM9G,KAAKuI,MAAMvX,QAAQ,MAAOgP,KAAKzL,MAAMif,KAAO,GAExD,IAAa,IAAT1M,EACF,MAAM9G,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAM,EAAGnK,EAAckJ,qBAGrDvS,KAAKzL,MAAMif,IAAM1M,EAAM,IApxEP,6BA2xEpB,WAME,IALA,IACE0M,EACExT,KAAKzL,MADPif,IAEEihC,EAA4B,EAEzB,CAAC,GAAI,GAAG31B,SAAS9e,KAAKuI,MAAMC,WAAWgL,EAAMihC,KAClDA,IAGF,IAAMC,EAAM10C,KAAKuI,MAAMC,WAAWisC,EAA4BjhC,GACxDmhC,EAAM30C,KAAKuI,MAAMC,WAAWisC,EAA4BjhC,EAAM,GAEpE,OAAY,KAARkhC,GAAsB,KAARC,EACTF,EAA4B,EAG2D,iBAA5Fz0C,KAAKuI,MAAMpW,MAAMsiD,EAA4BjhC,EAAKihC,EAA4BjhC,EAAM,IAC/EihC,EAA4B,GAGzB,KAARC,GAAsB,KAARC,GACTF,IAjzES,sCAuzEpB,WAGE,IAAa,IAFDz0C,KAAKuI,MAAMvX,QAAQ,KAAMgP,KAAKzL,MAAMif,KAG9C,MAAMxT,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAckJ,uBA3zE/B,sDA+zEpB,SAAyCiB,EAAzC,GAGG,IAFDohC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA70C,KAAKwX,MAAMhE,EAAK6T,GAAWO,gCAAiCitB,EAAYD,KAn0EtD,4CAs0EpB,SAA+BphC,EAA/B,GAGG,IAFDohC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEMhM,EAAagM,EAAW,GAAGC,cAAgBD,EAAW1iD,MAAM,GAClE6N,KAAKwX,MAAMhE,EAAK6T,GAAWe,sBAAuBysB,EAAYhM,EAAY+L,KA30ExD,8CA80EpB,SAAiCphC,EAAjC,GAGG,IAFDohC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA70C,KAAKwX,MAAMhE,EAAK6T,GAAWQ,wBAAyBgtB,EAAYD,KAl1E9C,mDAq1EpB,SAAsCphC,EAAtC,GAEG,IADDohC,EACC,EADDA,SAEA50C,KAAKwX,MAAMhE,EAAK6T,GAAWS,6BAA8B8sB,KAx1EvC,8CA21EpB,SAAiCphC,EAAjC,GAGG,IAFDohC,EAEC,EAFDA,SACAG,EACC,EADDA,aAEA,OAAO/0C,KAAKwX,MAAMhE,EAAsB,OAAjBuhC,EAAwB1tB,GAAWW,uCAAyCX,GAAWU,wBAAyB6sB,EAAUG,KA/1E/H,mDAk2EpB,SAAsCvhC,EAAtC,GAIG,IAHDohC,EAGC,EAHDA,SACAI,EAEC,EAFDA,aACAH,EACC,EADDA,WAEIjiD,EAAU,KAEd,OAAQoiD,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHpiD,EAAUy0B,GAAWY,wCACrB,MAEF,IAAK,SACHr1B,EAAUy0B,GAAWa,uCACrB,MAEF,QACEt1B,EAAUy0B,GAAWc,wCAGzB,OAAOnoB,KAAKwX,MAAMhE,EAAK5gB,EAASgiD,EAAUC,EAAYG,KAx3EpC,qDA23EpB,SAAwCxhC,EAAxC,GAGG,IAFDohC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEA70C,KAAKwX,MAAMhE,EAAK6T,GAAWgB,+BAAgCusB,EAAUC,KA/3EnD,gEAk4EpB,SAAmDrhC,EAAnD,GAEG,IADDohC,EACC,EADDA,SAEA50C,KAAKwX,MAAMhE,EAAK6T,GAAWiB,0CAA2CssB,KAr4EpD,gCAw4EpB,WAAqB,WACb/R,EAAW7iC,KAAKzL,MAAMxB,MAEtBkiD,EAAY,kBAAM,EAAKr2C,MAAM6B,EAAQmB,QAAU,EAAKhD,MAAM6B,EAAQe,SAExE,OAAQxB,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQC,IAET,IAAMw0C,EAAUl1C,KAAKm1C,oBAAoBn1C,KAAKzL,MAAM7E,OAEpD,OAAIulD,IACK,CACLrgD,KAAM,SACN4e,IAAK0hC,EAAQniD,MACbrD,MAAOwlD,GAIJ,CACLtgD,KAAM,UACN4e,IAAKqvB,GAIX,KAAKpiC,EAAQzD,OAET,IAAMk4C,EAAUl1C,KAAKo1C,mBAAmBp1C,KAAKzL,MAAM7E,OAEnD,OAAIulD,IACK,CACLrgD,KAAM,SACN4e,IAAK0hC,EAAQniD,MACbrD,MAAOwlD,GAIJ,CACLtgD,KAAM,UACN4e,IAAKqvB,GAIX,KAAKpiC,EAAQkF,MACb,KAAKlF,EAAQmF,OAET,IAAMsvC,EAAUl1C,KAAKq1C,oBAAoBr1C,KAAKpB,MAAM6B,EAAQkF,QAE5D,OAAIsvC,IACK,CACLrgD,KAAM,UACN4e,IAAK0hC,EAAQniD,MACbrD,MAAOwlD,GAIJ,CACLtgD,KAAM,UACN4e,IAAKqvB,GAIX,QACE,MAAO,CACLjuC,KAAM,UACN4e,IAAKqvB,MAx8EO,+BA68EpB,WACE,IAAMrvB,EAAMxT,KAAKzL,MAAMxB,MAMvB,MAAO,CACLmG,GANS8G,KAAK2mC,iBAAgB,GAO9BtrB,KANWrb,KAAKikB,IAAIxjB,EAAQkC,IAAM3C,KAAKs1C,qBAAuB,CAC9D1gD,KAAM,OACN4e,UAl9EgB,+CA09EpB,SAAkCA,EAAKwB,EAASugC,GAC9C,IACEP,EACEhgC,EADFggC,aAGmB,OAAjBA,GAIAA,IAAiBO,GACnBv1C,KAAKw1C,sCAAsChiC,EAAKwB,KAp+EhC,6BAw+EpB,YAaE,IAVC,IAFD4/B,EAEC,EAFDA,SACAI,EACC,EADDA,aAEMS,EAAY,IAAItkD,IAChBukD,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEhBC,GAAoB,GAEhB/1C,KAAKpB,MAAM6B,EAAQe,SAAS,CAClC,GAAIxB,KAAKikB,IAAIxjB,EAAQ4B,UAAW,CAC9B0zC,GAAoB,EACpB,MAGF,IAAMC,EAAah2C,KAAKqiC,YACxB,EAGIriC,KAAKi2C,oBAFP/8C,EADF,EACEA,GACAmiB,EAFF,EAEEA,KAEIw5B,EAAa37C,EAAGzE,KAEtB,GAAmB,KAAfogD,EAAJ,CAII,SAASngD,KAAKmgD,IAChB70C,KAAKk2C,+BAA+Bh9C,EAAGnG,MAAO,CAC5C6hD,WACAC,eAIAY,EAAU9gD,IAAIkgD,IAChB70C,KAAKm2C,iCAAiCj9C,EAAGnG,MAAO,CAC9C6hD,WACAC,eAIJY,EAAUtgD,IAAI0/C,GACd,IAAM7/B,EAAU,CACd4/B,WACAI,eACAH,cAIF,OAFAmB,EAAW98C,GAAKA,EAERmiB,EAAKzmB,MACX,IAAK,UAEDoL,KAAKo2C,kCAAkC/6B,EAAK7H,IAAKwB,EAAS,WAC1DghC,EAAW36B,KAAOA,EAAK3rB,MACvBgmD,EAAQC,eAAevjD,KAAK4N,KAAKwiC,WAAWwT,EAAY,sBACxD,MAGJ,IAAK,SAEDh2C,KAAKo2C,kCAAkC/6B,EAAK7H,IAAKwB,EAAS,UAC1DghC,EAAW36B,KAAOA,EAAK3rB,MACvBgmD,EAAQE,cAAcxjD,KAAK4N,KAAKwiC,WAAWwT,EAAY,qBACvD,MAGJ,IAAK,SAEDh2C,KAAKo2C,kCAAkC/6B,EAAK7H,IAAKwB,EAAS,UAC1DghC,EAAW36B,KAAOA,EAAK3rB,MACvBgmD,EAAQG,cAAczjD,KAAK4N,KAAKwiC,WAAWwT,EAAY,qBACvD,MAGJ,IAAK,UAED,MAAMh2C,KAAKw1C,sCAAsCn6B,EAAK7H,IAAKwB,GAG/D,IAAK,OAED,OAAQggC,GACN,IAAK,UACHh1C,KAAKq2C,yCAAyCh7B,EAAK7H,IAAKwB,GACxD,MAEF,IAAK,SACHhV,KAAKs2C,wCAAwCj7B,EAAK7H,IAAKwB,GACvD,MAEF,QACE0gC,EAAQI,iBAAiB1jD,KAAK4N,KAAKwiC,WAAWwT,EAAY,yBAK/Dh2C,KAAKpB,MAAM6B,EAAQe,SACtBxB,KAAKwkC,OAAO/jC,EAAQmB,QAIxB,MAAO,CACL8zC,UACAK,uBAllFgB,mCAslFpB,SAAsBQ,EAAoBT,EAA1C,GAEG,IADDlB,EACC,EADDA,SAEA,GAAkC,IAA9B2B,EAAmBxlD,OACrB,OAAO+kD,EACF,GAAgC,IAA5BA,EAAiB/kD,OAC1B,OAAOwlD,EACF,GAAIT,EAAiB/kD,OAASwlD,EAAmBxlD,OAAQ,WACzCwlD,GADyC,IAC9D,2BAAyC,KAA9B/F,EAA8B,QACvCxwC,KAAKw2C,mDAAmDhG,EAAOz9C,MAAO,CACpE6hD,cAH0D,8BAO9D,OAAOkB,EACF,UACgBA,GADhB,IACL,2BAAuC,KAA5BtF,EAA4B,QACrCxwC,KAAKw2C,mDAAmDhG,EAAOz9C,MAAO,CACpE6hD,cAHC,8BAOL,OAAO2B,IA5mFS,uCAgnFpB,YAEG,IADD3B,EACC,EADDA,SAEA,GAAI50C,KAAKkkB,cAAc,MAAO,CAC5B,IAAKlkB,KAAKpB,MAAM6B,EAAQhM,MACtB,MAAMuL,KAAKy2C,iCAAiCz2C,KAAKzL,MAAMxB,MAAO,CAC5D6hD,WACAG,aAAc,OAIlB,IACErlD,EACEsQ,KAAKzL,MADP7E,MAWF,OATAsQ,KAAKuY,OAES,YAAV7oB,GAAiC,WAAVA,GAAgC,WAAVA,GAAgC,WAAVA,GACrEsQ,KAAKy2C,iCAAiCz2C,KAAKzL,MAAMxB,MAAO,CACtD6hD,WACAG,aAAcrlD,IAIXA,EAGT,OAAO,OA1oFW,0BA6oFpB,SAAa2E,EAAb,GAGG,WAFDugD,EAEC,EAFDA,SACA8B,EACC,EADDA,QAEM1B,EAAeh1C,KAAK22C,0BAA0B,CAClD/B,aAEF50C,KAAKwkC,OAAO/jC,EAAQY,QACpB,MAGIrB,KAAK42C,gBAAgB,CACvBhC,WACAI,iBAJAU,EADF,EACEA,QACAK,EAFF,EAEEA,kBAOF,OAFA1hD,EAAK0hD,kBAAoBA,EAEjBf,GACN,IAAK,UAIH,OAHA3gD,EAAK2gD,cAAe,EACpB3gD,EAAKqhD,QAAUA,EAAQC,eACvB31C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,mBAE/B,IAAK,SAIH,OAHAA,EAAK2gD,cAAe,EACpB3gD,EAAKqhD,QAAUA,EAAQE,cACvB51C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAE/B,IAAK,SAMH,OALAA,EAAK2gD,cAAe,EACpB3gD,EAAKqhD,QAAU11C,KAAK62C,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFlB,aAEF50C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAE/B,IAAK,SAGH,OAFAA,EAAKqhD,QAAUA,EAAQI,iBACvB91C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAE/B,QAEI,IAAMujC,EAAQ,WAGZ,OAFAvjC,EAAKqhD,QAAU,GACf,EAAKlR,OAAO/jC,EAAQe,QACb,EAAKghC,WAAWnuC,EAAM,mBAG/BA,EAAK2gD,cAAe,EACpB,IAAM8B,EAAWpB,EAAQC,eAAe5kD,OAClCgmD,EAAUrB,EAAQE,cAAc7kD,OAChCimD,EAAUtB,EAAQG,cAAc9kD,OAChCkmD,EAAevB,EAAQI,iBAAiB/kD,OAE9C,GAAK+lD,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAMlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApCtF,EAAoC,QAC7CxwC,KAAKq2C,yCAAyC7F,EAAOz9C,MAAO,CAC1D6hD,WACAC,WAAYrE,EAAOt3C,GAAGzE,QAJiC,8BAU3D,OAFAJ,EAAKqhD,QAAUA,EAAQC,eACvB31C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,mBACxB,IAAKyiD,IAAaE,GAAWD,GAAWE,EAAc,WACtCvB,EAAQI,kBAD8B,IAC3D,2BAA+C,KAApCtF,EAAoC,QAC7CxwC,KAAKs2C,wCAAwC9F,EAAOz9C,MAAO,CACzD6hD,WACAC,WAAYrE,EAAOt3C,GAAGzE,QAJiC,8BAU3D,OAFAJ,EAAKqhD,QAAUA,EAAQE,cACvB51C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAK7B,OAHA2L,KAAKk3C,sCAAsCR,EAAS,CAClD9B,aAEKhd,IA3BP,OAJAvjC,EAAKqhD,QAAU11C,KAAK62C,sBAAsBnB,EAAQG,cAAeH,EAAQI,iBAAkB,CACzFlB,aAEF50C,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAN7B,OAAOujC,OAvsFG,sCA8uFpB,SAAyBvjC,GACvB,IAAM6E,EAAK8G,KAAK2mC,kBAMhB,OALAtyC,EAAK6E,GAAKA,EACV7E,EAAKgG,KAAO2F,KAAKm3C,aAAan3C,KAAKqiC,YAAa,CAC9CuS,SAAU17C,EAAGzE,KACbiiD,QAASx9C,EAAGnG,QAEPiN,KAAKwiC,WAAWnuC,EAAM,qBArvFX,iCAwvFpB,WACE,IAAMkkB,EAAOvY,KAAK8b,iBAElB,GAAoC,KAAhC9b,KAAKuI,MAAMC,WAAW+P,GAAc,CACtC,IAAM6+B,EAAYp3C,KAAKuI,MAAMC,WAAW+P,EAAO,GAC/C,OAAqB,KAAd6+B,GAAkC,KAAdA,EAG7B,OAAO,IAhwFW,2CAmwFpB,SAA8B/iD,GAC5B,MAAqB,uBAAdA,EAAKO,KAAgCP,EAAKmC,WAAanC,MApwF5C,GAAkBisC,IAu+MtC+W,WA9yFgB,SAAA/W,GAAU,oIAC1B,WACE,OAAOlE,KAFiB,4BAK1B,WACE,OAAOp8B,KAAKpB,MAAM6B,EAAQhM,QANF,sCAS1B,WACE,OAAQuL,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAKpB,MAAM6B,EAAQY,SAAWrB,KAAKpB,MAAM6B,EAAQoD,OAAS7D,KAAKpB,MAAM6B,EAAQ4B,WAAarC,KAAKpB,MAAM6B,EAAQK,cAAgBd,KAAKs3C,2BAA6Bt3C,KAAKmkB,0BAVpL,0CAa1B,WAEE,OADAnkB,KAAKuY,OACEvY,KAAKu3C,6BAfY,6BAkB1B,SAAgBC,EAAkBC,GAChC,GAAKz3C,KAAKpB,MAAM6B,EAAQhM,MAAxB,CAIA,IAAMmrC,EAAW5/B,KAAKzL,MAAM7E,MAE5B,IAA4C,IAAxC8nD,EAAiBxmD,QAAQ4uC,GAAkB,CAC7C,GAAI6X,GAAiCz3C,KAAK03C,0BACxC,OAGF,GAAI13C,KAAK23C,WAAW33C,KAAK43C,6BAA6B7gD,KAAKiJ,OACzD,OAAO4/B,MA/Ba,8BAsC1B,SAAiBiY,EAAUL,EAAkBM,EAAqBpjC,EAAe+iC,GAa/E,IAb8G,WACxGM,EAAe,SAACvkC,EAAKosB,EAAUoY,EAAQC,GACvCrY,IAAaoY,GAAUH,EAASI,IAClC,EAAKzgC,MAAMhE,EAAKkpB,GAASyB,sBAAuB6Z,EAAQC,IAItDC,EAAe,SAAC1kC,EAAKosB,EAAUuY,EAAMC,IACrCP,EAASM,IAASvY,IAAawY,GAAQP,EAASO,IAASxY,IAAauY,IACxE,EAAK3gC,MAAMhE,EAAKkpB,GAASkB,sBAAuBua,EAAMC,MAIjD,CACP,IAAMvV,EAAW7iC,KAAKzL,MAAMxB,MACtB6sC,EAAW5/B,KAAKq4C,gBAAgBb,EAAiBp4C,OAA8B,MAAvB04C,EAA8BA,EAAsB,IAAKL,GACvH,IAAK7X,EAAU,MAEXD,GAAmBC,GACjBiY,EAASS,cACXt4C,KAAKwX,MAAMqrB,EAAUnG,GAASW,iCAE9B0a,EAAalV,EAAUjD,EAAUA,EAAU,YAC3CmY,EAAalV,EAAUjD,EAAUA,EAAU,UAC3CmY,EAAalV,EAAUjD,EAAUA,EAAU,YAC3CiY,EAASS,cAAgB1Y,IAGvBrwC,OAAOkG,eAAeC,KAAKmiD,EAAUjY,GACvC5/B,KAAKwX,MAAMqrB,EAAUnG,GAASY,kBAAmBsC,IAEjDmY,EAAalV,EAAUjD,EAAU,SAAU,YAC3CmY,EAAalV,EAAUjD,EAAU,SAAU,YAC3CmY,EAAalV,EAAUjD,EAAU,WAAY,YAC7CmY,EAAalV,EAAUjD,EAAU,WAAY,YAC7CsY,EAAarV,EAAUjD,EAAU,UAAW,YAC5CsY,EAAarV,EAAUjD,EAAU,SAAU,aAG7CiY,EAASjY,IAAY,GAGI,MAAvBkY,GAA+BA,EAAoBh5B,SAAS8gB,IAC9D5/B,KAAKwX,MAAMqrB,EAAUnuB,EAAekrB,MAjFhB,gCAsF1B,SAAmB0C,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAOtiC,KAAKpB,MAAM6B,EAAQe,QAE5B,IAAK,wBACH,OAAOxB,KAAKpB,MAAM6B,EAAQY,QAE5B,IAAK,oBACH,OAAOrB,KAAKpB,MAAM6B,EAAQU,UAE5B,IAAK,4BACH,OAAOnB,KAAK0jB,aAAa,KAG7B,MAAM,IAAIpzB,MAAM,iBAtGQ,yBAyG1B,SAAYgyC,EAAMiW,GAGhB,IAFA,IAAMr5C,EAAS,IAEPc,KAAKw4C,mBAAmBlW,IAC9BpjC,EAAO9M,KAAKmmD,KAGd,OAAOr5C,IAhHiB,kCAmH1B,SAAqBojC,EAAMiW,GACzB,OAAOhc,GAAQv8B,KAAKy4C,2BAA2BnW,EAAMiW,GAAc,MApH3C,wCAuH1B,SAA2BjW,EAAMiW,EAAcG,GAG7C,IAFA,IAAMx5C,EAAS,IAGTc,KAAKw4C,mBAAmBlW,IADrB,CAKP,IAAMqW,EAAUJ,IAEhB,GAAe,MAAXI,EACF,OAKF,GAFAz5C,EAAO9M,KAAKumD,IAER34C,KAAKikB,IAAIxjB,EAAQmB,OAArB,CAIA,GAAI5B,KAAKw4C,mBAAmBlW,GAC1B,MAOF,YAJIoW,GACF14C,KAAKwkC,OAAO/jC,EAAQmB,SAMxB,OAAO1C,IAtJiB,kCAyJ1B,SAAqBojC,EAAMiW,EAAcK,EAASC,GAC3CA,IACCD,EACF54C,KAAKwkC,OAAO/jC,EAAQO,UAEpBhB,KAAK+qC,iBAAiB,MAI1B,IAAM7rC,EAASc,KAAK84C,qBAAqBxW,EAAMiW,GAQ/C,OANIK,EACF54C,KAAKwkC,OAAO/jC,EAAQU,UAEpBnB,KAAK+qC,iBAAiB,KAGjB7rC,IA1KiB,+BA6K1B,WACE,IAAM7K,EAAO2L,KAAKqiC,YAmBlB,OAlBAriC,KAAKwkC,OAAO/jC,EAAQgF,SACpBzF,KAAKwkC,OAAO/jC,EAAQiB,QAEf1B,KAAKpB,MAAM6B,EAAQzD,SACtBgD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO2pC,GAAS8C,+BAGxCnrC,EAAKqwC,SAAW1kC,KAAKskC,gBACrBtkC,KAAKwkC,OAAO/jC,EAAQkB,QAEhB3B,KAAKikB,IAAIxjB,EAAQuB,OACnB3N,EAAK0kD,UAAY/4C,KAAKg5C,mBAAkB,IAGtCh5C,KAAK0jB,aAAa,OACpBrvB,EAAKytC,eAAiB9hC,KAAKi5C,wBAGtBj5C,KAAKwiC,WAAWnuC,EAAM,kBAjML,+BAoM1B,SAAkB6kD,GAGhB,IAFA,IAAIjV,EAASjkC,KAAK2mC,kBAEX3mC,KAAKikB,IAAIxjB,EAAQuB,MAAM,CAC5B,IAAM3N,EAAO2L,KAAK4jC,gBAAgBK,GAClC5vC,EAAKu9C,KAAO3N,EACZ5vC,EAAK81C,MAAQnqC,KAAK2mC,gBAAgBuS,GAClCjV,EAASjkC,KAAKwiC,WAAWnuC,EAAM,mBAGjC,OAAO4vC,IA9MiB,kCAiN1B,WACE,IAAM5vC,EAAO2L,KAAKqiC,YAOlB,OANAhuC,EAAK8kD,SAAWn5C,KAAKg5C,mBAAkB,IAElCh5C,KAAKmkB,yBAA2BnkB,KAAK0jB,aAAa,OACrDrvB,EAAKytC,eAAiB9hC,KAAKi5C,wBAGtBj5C,KAAKwiC,WAAWnuC,EAAM,qBAzNL,sCA4N1B,SAAyB+kD,GACvBp5C,KAAKuY,OACL,IAAMlkB,EAAO2L,KAAK4jC,gBAAgBwV,GAIlC,OAHA/kD,EAAKglD,cAAgBD,EACrB/kD,EAAK+yC,eAAiBpnC,KAAKs5C,uBAAsB,GACjDjlD,EAAKklD,SAAU,EACRv5C,KAAKwiC,WAAWnuC,EAAM,qBAlOL,iCAqO1B,WACE,IAAMA,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,gBAxOL,8BA2O1B,WACE,IAAMA,EAAO2L,KAAKqiC,YASlB,OARAriC,KAAKwkC,OAAO/jC,EAAQsF,SAEhB/F,KAAKpB,MAAM6B,EAAQgF,SACrBpR,EAAKmlD,SAAWx5C,KAAKy5C,oBAErBplD,EAAKmlD,SAAWx5C,KAAKg5C,mBAAkB,GAGlCh5C,KAAKwiC,WAAWnuC,EAAM,iBArPL,kCAwP1B,WACE,IAAMA,EAAO2L,KAAKqiC,YAIlB,OAHAhuC,EAAKI,KAAOuL,KAAK05C,2BACjBrlD,EAAKslD,WAAa35C,KAAK45C,mBAAmBn5C,EAAQ8E,UAClDlR,EAAKxC,QAAUmO,KAAK45C,mBAAmBn5C,EAAQkC,IACxC3C,KAAKwiC,WAAWnuC,EAAM,qBA7PL,sCAgQ1B,WACE,GAAI2L,KAAK0jB,aAAa,KACpB,OAAO1jB,KAAK65C,0BAlQU,mCAsQ1B,WACE,IAAMxlD,EAAO2L,KAAKqiC,YAclB,OAZIriC,KAAK0jB,aAAa,MAAQ1jB,KAAKpB,MAAM6B,EAAQo7B,aAC/C77B,KAAKuY,OAELvY,KAAK2jB,aAGPtvB,EAAKsU,OAAS3I,KAAK85C,qBAAqB,4BAA6B95C,KAAK+5C,qBAAqBhjD,KAAKiJ,OAAO,GAAO,GAEvF,IAAvB3L,EAAKsU,OAAO5X,QACdiP,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASe,qBAG3Bz9B,KAAKwiC,WAAWnuC,EAAM,gCArRL,2CAwR1B,WACE,OAAI2L,KAAKorC,YAAYx2C,OAAS6L,EAAQuE,QACpChF,KAAKuY,OACEvY,KAAKg6C,wBAGP,OA9RiB,6BAiS1B,SAAgBC,EAAaC,GAC3B,IAAMC,EAAsBF,IAAgBx5C,EAAQ0B,MACpD+3C,EAAUpY,eAAiB9hC,KAAKo6C,2BAChCp6C,KAAKwkC,OAAO/jC,EAAQiB,QACpBw4C,EAAUG,WAAar6C,KAAKs6C,kCAExBH,GAEOn6C,KAAKpB,MAAMq7C,MADpBC,EAAU9S,eAAiBpnC,KAAKu6C,qCAAqCN,MAxS/C,4CA8S1B,WAAiC,WAC/B,OAAOj6C,KAAKw6C,iBAAiB/5C,EAAQkB,OAAQ,IAAI9L,KAAI,SAAAkpB,GAKnD,MAJqB,eAAjBA,EAAQnqB,MAA0C,gBAAjBmqB,EAAQnqB,MAA2C,kBAAjBmqB,EAAQnqB,MAA6C,iBAAjBmqB,EAAQnqB,MACjH,EAAK4iB,MAAMuH,EAAQhsB,MAAO2pC,GAASgD,kCAAmC3gB,EAAQnqB,MAGzEmqB,OApTe,wCAwT1B,WACO/e,KAAKikB,IAAIxjB,EAAQmB,QAAW5B,KAAKskB,oBACpCtkB,KAAKwkC,OAAO/jC,EAAQoB,QA1TE,oCA8T1B,SAAuBygC,EAAMjuC,GAG3B,OAFA2L,KAAKy6C,gBAAgBh6C,EAAQqB,MAAOzN,GACpC2L,KAAK06C,6BACE16C,KAAKwiC,WAAWnuC,EAAMiuC,KAjUL,6CAoU1B,WAEE,OADAtiC,KAAKuY,OACEvY,KAAKikB,IAAIxjB,EAAQhM,OAASuL,KAAKpB,MAAM6B,EAAQqB,SAtU5B,sCAyU1B,SAAyBzN,GACvB,GAAM2L,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAK26C,YAAY36C,KAAK46C,gCAAgC7jD,KAAKiJ,OAAjG,CAIAA,KAAKwkC,OAAO/jC,EAAQO,UACpB,IAAM9H,EAAK8G,KAAK2mC,kBAChBztC,EAAGkuC,eAAiBpnC,KAAKs5C,wBACzBt5C,KAAKqnC,iBAAiBnuC,GACtB8G,KAAKwkC,OAAO/jC,EAAQU,UACpB9M,EAAKgmD,WAAa,CAACnhD,GACnB,IAAMtE,EAAOoL,KAAK66C,2BAGlB,OAFIjmD,IAAMP,EAAK+yC,eAAiBxyC,GAChCoL,KAAK06C,6BACE16C,KAAKwiC,WAAWnuC,EAAM,uBAvVL,8CA0V1B,SAAiCA,EAAMymD,GACjC96C,KAAKikB,IAAIxjB,EAAQwB,YAAW5N,EAAK6uC,UAAW,GAChD,IAAM6X,EAAU1mD,EAEhB,GAAI2L,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAK0jB,aAAa,KAAM,CACpDo3B,GACF96C,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASmC,4BAGlC,IAAMqC,EAAS6Z,EASf,GAPI7Z,EAAOoB,MAAQtiC,KAAK0jB,aAAa,MACnC1jB,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKkpB,GAASI,iCAGtC98B,KAAKy6C,gBAAgBh6C,EAAQqB,MAAOo/B,GACpClhC,KAAK06C,6BAEe,QAAhBxZ,EAAOoB,KACLpB,EAAOmZ,WAAWtpD,OAAS,IAC7BiP,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcU,gBAErC/J,KAAKuxC,YAAYrQ,EAAOmZ,WAAW,KACrCr6C,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKkpB,GAASG,yCAGnC,GAAoB,QAAhBqE,EAAOoB,KAAgB,CAChC,GAAiC,IAA7BpB,EAAOmZ,WAAWtpD,OACpBiP,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcW,oBACpC,CACL,IAAMgxC,EAAiB9Z,EAAOmZ,WAAW,GAErCr6C,KAAKuxC,YAAYyJ,IACnBh7C,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKkpB,GAASG,mCAGV,eAAxBme,EAAepmD,MAAyBomD,EAAe9X,UACzDljC,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKkpB,GAASoC,uCAGV,gBAAxBkc,EAAepmD,MACjBoL,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKkpB,GAASqC,mCAIpCmC,EAAOkG,gBACTpnC,KAAKwX,MAAM0pB,EAAOkG,eAAer0C,MAAO2pC,GAASsC,qCAGnDkC,EAAOoB,KAAO,SAGhB,OAAOtiC,KAAKwiC,WAAWtB,EAAQ,qBAE/B,IAAM7b,EAAW01B,EACbD,IAAUz1B,EAASy1B,UAAW,GAClC,IAAMlmD,EAAOoL,KAAK66C,2BAGlB,OAFIjmD,IAAMywB,EAAS+hB,eAAiBxyC,GACpCoL,KAAK06C,6BACE16C,KAAKwiC,WAAWnd,EAAU,yBArZX,+BAyZ1B,WACE,IAAMhxB,EAAO2L,KAAKqiC,YAElB,GAAIriC,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAK0jB,aAAa,KAClD,OAAO1jB,KAAKi7C,uBAAuB,6BAA8B5mD,GAGnE,GAAI2L,KAAKpB,MAAM6B,EAAQ0E,MAAO,CAC5B,IAAMjM,EAAK8G,KAAKqiC,YAGhB,OAFAriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAK0jB,aAAa,KAC3C1jB,KAAKi7C,uBAAuB,kCAAmC5mD,IAEtEA,EAAK3D,IAAMsP,KAAKk7C,iBAAiBhiD,EAAI,OAC9B8G,KAAKm7C,iCAAiC9mD,GAAM,IAIvD2L,KAAKo7C,iBAAiB/mD,EAAM,CAAC,YAAa,CAAC,UAAW,WAAY,UAAW,YAAa,SAAU,SAAU,YAAaqoC,GAASwB,6BACpI,IAAMmd,EAAMr7C,KAAKs7C,yBAAyBjnD,GAE1C,OAAIgnD,IAIJr7C,KAAKu7C,kBAAkBlnD,GAAM,GAExBA,EAAKkuC,UAA8B,eAAlBluC,EAAK3D,IAAIkE,MAA4C,QAAlBP,EAAK3D,IAAI+D,MAAoC,QAAlBJ,EAAK3D,IAAI+D,OAAmBuL,KAAKu3C,6BACnHljD,EAAKiuC,KAAOjuC,EAAK3D,IAAI+D,KACrBuL,KAAKu7C,kBAAkBlnD,GAAM,IAGxB2L,KAAKm7C,iCAAiC9mD,IAAQA,EAAKymD,aA1blC,gCA6b1B,WACE,IAAMzmD,EAAO2L,KAAKqiC,YAElB,OADAhuC,EAAKqhD,QAAU11C,KAAKw7C,2BACbx7C,KAAKwiC,WAAWnuC,EAAM,mBAhcL,sCAmc1B,WACE2L,KAAKwkC,OAAO/jC,EAAQY,QACpB,IAAMq0C,EAAU11C,KAAKy7C,YAAY,cAAez7C,KAAK07C,kBAAkB3kD,KAAKiJ,OAE5E,OADAA,KAAKwkC,OAAO/jC,EAAQe,QACbk0C,IAvciB,mCA0c1B,WAGE,OAFA11C,KAAKuY,OAEDvY,KAAKikB,IAAIxjB,EAAQkD,SACZ3D,KAAKgkB,aAAa,aAGvBhkB,KAAKgkB,aAAa,aACpBhkB,KAAKuY,SAGFvY,KAAKpB,MAAM6B,EAAQO,YAIxBhB,KAAKuY,SAEAvY,KAAK27C,mBAIV37C,KAAKuY,OACEvY,KAAKpB,MAAM6B,EAAQoF,UAheF,wCAme1B,WACE,IAAMxR,EAAO2L,KAAKqiC,YAGlB,OAFAhuC,EAAKI,KAAOuL,KAAK05C,2BACjBrlD,EAAKslD,WAAa35C,KAAK47C,sBAAsBn7C,EAAQoF,KAC9C7F,KAAKwiC,WAAWnuC,EAAM,qBAveL,+BA0e1B,WACE,IAAMA,EAAO2L,KAAKqiC,YA2BlB,OA1BAriC,KAAKwkC,OAAO/jC,EAAQY,QAEhBrB,KAAKpB,MAAM6B,EAAQkD,UACrBtP,EAAKymD,SAAW96C,KAAKzL,MAAM7E,MAC3BsQ,KAAKuY,OACLvY,KAAKumC,iBAAiB,aACbvmC,KAAKkkB,cAAc,cAC5B7vB,EAAKymD,UAAW,GAGlB96C,KAAKwkC,OAAO/jC,EAAQO,UACpB3M,EAAKw2C,cAAgB7qC,KAAK67C,6BAC1BxnD,EAAKynD,SAAW97C,KAAKkkB,cAAc,MAAQlkB,KAAK+7C,cAAgB,KAChE/7C,KAAKwkC,OAAO/jC,EAAQU,UAEhBnB,KAAKpB,MAAM6B,EAAQkD,UACrBtP,EAAK6uC,SAAWljC,KAAKzL,MAAM7E,MAC3BsQ,KAAKuY,OACLvY,KAAKwkC,OAAO/jC,EAAQwB,WACXjC,KAAKikB,IAAIxjB,EAAQwB,YAC1B5N,EAAK6uC,UAAW,GAGlB7uC,EAAK+yC,eAAiBpnC,KAAKg8C,iBAC3Bh8C,KAAKsnC,YACLtnC,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,kBAtgBL,8BAygB1B,WAAmB,WACXA,EAAO2L,KAAKqiC,YAClBhuC,EAAK4nD,aAAej8C,KAAK85C,qBAAqB,oBAAqB95C,KAAKk8C,wBAAwBnlD,KAAKiJ,OAAO,GAAM,GAClH,IAAIm8C,GAAsB,EACtBC,EAAkB,KA0BtB,OAzBA/nD,EAAK4nD,aAAa3mD,SAAQ,SAAA+mD,GACxB,IAAIC,EAGF1nD,EACEynD,EADFznD,MAGEunD,GAAgC,eAATvnD,GAAkC,mBAATA,GAAwC,uBAATA,GAAiCynD,EAAYnZ,UAC9H,EAAK1rB,MAAM6kC,EAAYtpD,MAAO2pC,GAAS+B,4BAGzC0d,EAAsBA,GAAgC,uBAATvnD,GAAiCynD,EAAYnZ,UAAqB,mBAATtuC,EAEzF,eAATA,IAEFA,GADAynD,EAAcA,EAAYjV,gBACPxyC,MAGrB,IAAM2nD,EAAqB,uBAAT3nD,GAClBwnD,EAA0D,OAAvCE,EAAmBF,GAA2BE,EAAmBC,KAE5DA,GACtB,EAAK/kC,MAAM6kC,EAAYtpD,MAAO2pC,GAAS4B,qCAGpCt+B,KAAKwiC,WAAWnuC,EAAM,iBAviBL,qCA0iB1B,WACE,MAGI2L,KAAKzL,MAFAsuC,EADT,EACE9vC,MACA0gB,EAFF,EAEEA,SAEIwzB,EAAOjnC,KAAKikB,IAAIxjB,EAAQ4B,UAC1BzN,EAAOoL,KAAK+7C,cACV7Y,EAAWljC,KAAKikB,IAAIxjB,EAAQwB,UAGlC,GAFgBjC,KAAKikB,IAAIxjB,EAAQqB,OAEpB,CACX,IAAM06C,EAAcx8C,KAAK4jC,gBAAgBhvC,GACzC4nD,EAAYtZ,SAAWA,EAEL,oBAAdtuC,EAAKA,MAA+BA,EAAKktC,gBAAyC,eAAvBltC,EAAKukD,SAASvkD,MAG3EoL,KAAKwX,MAAM5iB,EAAK7B,MAAO2pC,GAAS0B,yBAChCoe,EAAY18C,MAAQlL,GAHpB4nD,EAAY18C,MAAQlL,EAAKukD,SAM3BqD,EAAYt6B,YAAcliB,KAAK+7C,cAC/BnnD,EAAOoL,KAAKwiC,WAAWga,EAAa,2BAC/B,GAAItZ,EAAU,CACnB,IAAMuZ,EAAmBz8C,KAAK4jC,gBAAgBhvC,GAC9C6nD,EAAiBrV,eAAiBxyC,EAClCA,EAAOoL,KAAKwiC,WAAWia,EAAkB,kBAG3C,GAAIxV,EAAM,CACR,IAAMyV,EAAW18C,KAAK+mB,YAAY8b,EAAUpvB,GAC5CipC,EAAStV,eAAiBxyC,EAC1BA,EAAOoL,KAAKwiC,WAAWka,EAAU,cAGnC,OAAO9nD,IA7kBiB,sCAglB1B,WACE,IAAMP,EAAO2L,KAAKqiC,YAIlB,OAHAriC,KAAKwkC,OAAO/jC,EAAQiB,QACpBrN,EAAK+yC,eAAiBpnC,KAAK+7C,cAC3B/7C,KAAKwkC,OAAO/jC,EAAQkB,QACb3B,KAAKwiC,WAAWnuC,EAAM,yBArlBL,8CAwlB1B,SAAiCO,EAAM+nD,GACrC,IAAMtoD,EAAO2L,KAAKqiC,YASlB,MAPa,sBAATztC,IACFP,EAAKsoD,WAAaA,EACdA,GAAU38C,KAAKuY,OACnBvY,KAAKuY,QAGPvY,KAAKy6C,gBAAgBh6C,EAAQ0B,MAAO9N,GAC7B2L,KAAKwiC,WAAWnuC,EAAMO,KAlmBL,oCAqmB1B,WAAyB,WACjBP,EAAO2L,KAAKqiC,YAgBlB,OAdAhuC,EAAK6gD,QAAW,WACd,OAAQ,EAAK3gD,MAAMK,MACjB,KAAK6L,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQzD,OACb,KAAKyD,EAAQkF,MACb,KAAKlF,EAAQmF,OACX,OAAO,EAAK0+B,gBAEd,QACE,MAAM,EAAK3gB,cAVD,GAcT3jB,KAAKwiC,WAAWnuC,EAAM,mBAtnBL,wCAynB1B,WACE,IAAMA,EAAO2L,KAAKqiC,YAElB,OADAhuC,EAAK6gD,QAAUl1C,KAAK48C,eAAc,GAC3B58C,KAAKwiC,WAAWnuC,EAAM,mBA5nBL,uCA+nB1B,WACE,OAAI2L,KAAKzL,MAAM4kB,OAAenZ,KAAK+7C,cACnC,gEAjoBwB,gDAooB1B,WACE,IAAMc,EAAc78C,KAAK88C,sBAEzB,OAAI98C,KAAKgkB,aAAa,QAAUhkB,KAAKmkB,wBAC5BnkB,KAAK+8C,yBAAyBF,GAE9BA,IA1oBe,iCA8oB1B,WACE,OAAQ78C,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQhM,KACb,KAAKgM,EAAQuF,MACb,KAAKvF,EAAQiF,MAET,IAAM9Q,EAAOoL,KAAKpB,MAAM6B,EAAQuF,OAAS,gBAAkBhG,KAAKpB,MAAM6B,EAAQiF,OAAS,gBA7rBjG,SAA6BhW,GAC3B,OAAQA,GACN,IAAK,MACH,MAAO,eAET,IAAK,UACH,MAAO,mBAET,IAAK,SACH,MAAO,kBAET,IAAK,QACH,MAAO,iBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,SACH,MAAO,kBAET,IAAK,YACH,MAAO,qBAET,IAAK,UACH,MAAO,mBAET,QACE,QA4pB6GstD,CAAoBh9C,KAAKzL,MAAM7E,OAExI,QAAa2B,IAATuD,GAAmD,KAA7BoL,KAAK2uC,oBAA4B,CACzD,IAAMt6C,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAMO,GAG/B,OAAOoL,KAAKg6C,uBAGhB,KAAKv5C,EAAQzD,OACb,KAAKyD,EAAQC,IACb,KAAKD,EAAQE,OACb,KAAKF,EAAQkF,MACb,KAAKlF,EAAQmF,OACX,OAAO5F,KAAKi9C,yBAEd,KAAKx8C,EAAQkD,QACX,GAAyB,MAArB3D,KAAKzL,MAAM7E,MAAe,CAC5B,IAAM2E,EAAO2L,KAAKqiC,YACZ7mB,EAAYxb,KAAKorC,YAEvB,GAAI5vB,EAAU5mB,OAAS6L,EAAQC,KAAO8a,EAAU5mB,OAAS6L,EAAQE,OAC/D,MAAMX,KAAK2jB,aAIb,OADAtvB,EAAK6gD,QAAUl1C,KAAKk9C,kBACbl9C,KAAKwiC,WAAWnuC,EAAM,iBAG/B,MAEF,KAAKoM,EAAQ2E,MACX,OAAOpF,KAAKm9C,qCAEd,KAAK18C,EAAQsF,QACX,OAAO/F,KAAKo9C,mBAEd,KAAK38C,EAAQgF,QACX,OAAOzF,KAAKy5C,oBAEd,KAAKh5C,EAAQY,OACX,OAAOrB,KAAK26C,YAAY36C,KAAKq9C,sBAAsBtmD,KAAKiJ,OAASA,KAAKs9C,oBAAsBt9C,KAAKu9C,qBAEnG,KAAK98C,EAAQO,SACX,OAAOhB,KAAKw9C,mBAEd,KAAK/8C,EAAQiB,OACX,OAAO1B,KAAKy9C,2BAEd,KAAKh9C,EAAQ6B,UACX,OAAOtC,KAAK09C,6BAGhB,MAAM19C,KAAK2jB,eA3sBa,sCA8sB1B,WAGE,IAFA,IAAI/uB,EAAOoL,KAAK29C,uBAER39C,KAAKmkB,yBAA2BnkB,KAAKikB,IAAIxjB,EAAQO,WACvD,GAAIhB,KAAKpB,MAAM6B,EAAQU,UAAW,CAChC,IAAM9M,EAAO2L,KAAK4jC,gBAAgBhvC,GAClCP,EAAK6tB,YAActtB,EACnBoL,KAAKwkC,OAAO/jC,EAAQU,UACpBvM,EAAOoL,KAAKwiC,WAAWnuC,EAAM,mBACxB,CACL,IAAMA,EAAO2L,KAAK4jC,gBAAgBhvC,GAClCP,EAAKq5C,WAAa94C,EAClBP,EAAKs5C,UAAY3tC,KAAK+7C,cACtB/7C,KAAKwkC,OAAO/jC,EAAQU,UACpBvM,EAAOoL,KAAKwiC,WAAWnuC,EAAM,uBAIjC,OAAOO,IAhuBiB,iCAmuB1B,SAAoBgpD,GAClB,IAAMvpD,EAAO2L,KAAKqiC,YASlB,OARAriC,KAAKumC,iBAAiBqX,GACtBvpD,EAAKupD,SAAWA,EAChBvpD,EAAK+yC,eAAiBpnC,KAAK69C,8BAEV,aAAbD,GACF59C,KAAK89C,iCAAiCzpD,GAGjC2L,KAAKwiC,WAAWnuC,EAAM,oBA7uBL,8CAgvB1B,SAAiCA,GAC/B,OAAQA,EAAK+yC,eAAexyC,MAC1B,IAAK,cACL,IAAK,cACH,OAEF,QACEoL,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAAS2C,uBAvvBZ,8BA2vB1B,WACE,IAAMhrC,EAAO2L,KAAKqiC,YAClBriC,KAAKumC,iBAAiB,SACtB,IAAMsE,EAAgB7qC,KAAKqiC,YAG3B,OAFAwI,EAAcp2C,KAAOuL,KAAK05C,2BAC1BrlD,EAAKw2C,cAAgB7qC,KAAKwiC,WAAWqI,EAAe,mBAC7C7qC,KAAKwiC,WAAWnuC,EAAM,iBAjwBL,yCAowB1B,WAA8B,WACtBupD,EAAW,CAAC,QAAS,SAAU,YAAY5d,MAAK,SAAAve,GAAE,OAAI,EAAKuC,aAAavC,MAC9E,OAAOm8B,EAAW59C,KAAK+9C,oBAAoBH,GAAY59C,KAAKgkB,aAAa,SAAWhkB,KAAKg+C,mBAAqBh+C,KAAKi+C,6BAtwB3F,4CAywB1B,SAA+B3b,EAAM4b,EAAsBN,GACzD,IAAMvpD,EAAO2L,KAAKqiC,YACZ8b,EAAqBn+C,KAAKikB,IAAI25B,GAC9BtkD,EAAQ,GAEd,GACEA,EAAMlH,KAAK8rD,WACJl+C,KAAKikB,IAAI25B,IAElB,OAAqB,IAAjBtkD,EAAMvI,QAAiBotD,GAI3B9pD,EAAKiF,MAAQA,EACN0G,KAAKwiC,WAAWnuC,EAAMiuC,IAJpBhpC,EAAM,KAnxBS,6CA0xB1B,WACE,OAAO0G,KAAKo+C,+BAA+B,qBAAsBp+C,KAAK69C,4BAA4B9mD,KAAKiJ,MAAOS,EAAQ8C,cA3xB9F,sCA8xB1B,WACE,OAAOvD,KAAKo+C,+BAA+B,cAAep+C,KAAKq+C,gCAAgCtnD,KAAKiJ,MAAOS,EAAQ4C,aA/xB3F,qCAkyB1B,WACE,QAAIrD,KAAK0jB,aAAa,MAIf1jB,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAK26C,YAAY36C,KAAKs+C,qCAAqCvnD,KAAKiJ,SAvyB7E,kCA0yB1B,WACE,GAAIA,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKpB,MAAM6B,EAAQ2E,OAEjD,OADApF,KAAKuY,QACE,EAGT,GAAIvY,KAAKpB,MAAM6B,EAAQY,QAAS,CAC9B,IAAIk9C,EAAoB,EAGxB,IAFAv+C,KAAKuY,OAEEgmC,EAAoB,GACrBv+C,KAAKpB,MAAM6B,EAAQY,UACnBk9C,EACOv+C,KAAKpB,MAAM6B,EAAQe,WAC1B+8C,EAGJv+C,KAAKuY,OAGP,OAAO,EAGT,GAAIvY,KAAKpB,MAAM6B,EAAQO,UAAW,CAChC,IAAIu9C,EAAoB,EAGxB,IAFAv+C,KAAKuY,OAEEgmC,EAAoB,GACrBv+C,KAAKpB,MAAM6B,EAAQO,YACnBu9C,EACOv+C,KAAKpB,MAAM6B,EAAQU,aAC1Bo9C,EAGJv+C,KAAKuY,OAGP,OAAO,EAGT,OAAO,IAl1BiB,kDAq1B1B,WAGE,GAFAvY,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQkB,SAAW3B,KAAKpB,MAAM6B,EAAQ4B,UACnD,OAAO,EAGT,GAAIrC,KAAKw+C,uBAAwB,CAC/B,GAAIx+C,KAAKpB,MAAM6B,EAAQqB,QAAU9B,KAAKpB,MAAM6B,EAAQmB,QAAU5B,KAAKpB,MAAM6B,EAAQwB,WAAajC,KAAKpB,MAAM6B,EAAQkC,IAC/G,OAAO,EAGT,GAAI3C,KAAKpB,MAAM6B,EAAQkB,UACrB3B,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQ0B,QACrB,OAAO,EAKb,OAAO,IA12BiB,kDA62B1B,SAAqC83C,GAAa,WAChD,OAAOj6C,KAAKy+C,UAAS,WACnB,IAAMC,EAAI,EAAKrc,YACf,EAAKmC,OAAOyV,GACZ,IAAM5lD,EAAO,EAAKguC,YACZkX,IAAY,EAAK5B,WAAW,EAAKgH,4BAA4B5nD,KAAK,IAExE,GAAIwiD,GAAW,EAAK36C,MAAM6B,EAAQ2E,OAAQ,CACxC,IAAIw5C,EAAoB,EAAKzB,qCAa7B,MAX+B,eAA3ByB,EAAkBhqD,MACpBP,EAAKglD,cAAgBuF,EACrBvqD,EAAKklD,SAAU,EACfllD,EAAK+yC,eAAiB,KACtBwX,EAAoB,EAAKpc,WAAWnuC,EAAM,qBAE1C,EAAK++C,2BAA2BwL,EAAmBvqD,GACnDuqD,EAAkBrF,SAAU,GAG9BmF,EAAEtX,eAAiBwX,EACZ,EAAKpc,WAAWkc,EAAG,oBAG5B,IAAMG,EAAwB,EAAKlD,kBAAoB,EAAKhE,WAAW,EAAKmH,2BAA2B/nD,KAAK,IAE5G,IAAK8nD,EACH,OAAKtF,GAILllD,EAAKglD,cAAgB,EAAK1S,kBAC1BtyC,EAAKklD,QAAUA,EACfllD,EAAK+yC,eAAiB,KACtBsX,EAAEtX,eAAiB,EAAK5E,WAAWnuC,EAAM,mBAClC,EAAKmuC,WAAWkc,EAAG,qBAPjB,EAAKpF,uBAAsB,EAAOoF,GAU7C,IAAM9pD,EAAO,EAAK0kD,uBAAsB,GAKxC,OAJAjlD,EAAKglD,cAAgBwF,EACrBxqD,EAAK+yC,eAAiBxyC,EACtBP,EAAKklD,QAAUA,EACfmF,EAAEtX,eAAiB,EAAK5E,WAAWnuC,EAAM,mBAClC,EAAKmuC,WAAWkc,EAAG,yBAx5BJ,qDA45B1B,WACE,OAAO1+C,KAAKpB,MAAM6B,EAAQqB,OAAS9B,KAAKu6C,qCAAqC95C,EAAQqB,YAASzQ,IA75BtE,sCAg6B1B,WACE,OAAO2O,KAAKpB,MAAM6B,EAAQqB,OAAS9B,KAAKs5C,6BAA0BjoD,IAj6B1C,4BAo6B1B,WACE,OAAO2O,KAAK45C,mBAAmBn5C,EAAQqB,SAr6Bf,wCAw6B1B,WACE,IAAM5I,EAAK8G,KAAK2mC,kBAEhB,GAAI3mC,KAAKgkB,aAAa,QAAUhkB,KAAKmkB,wBAEnC,OADAnkB,KAAKuY,OACErf,IA76Be,yCAi7B1B,WACE,IAAK8G,KAAKpB,MAAM6B,EAAQhM,OAA8B,YAArBuL,KAAKzL,MAAM7E,OAAuBsQ,KAAKmkB,wBACtE,OAAO,EAGT,IAAMlK,EAAcja,KAAKzL,MAAM0lB,YAG/B,OAFAja,KAAKuY,UAEAvY,KAAKpB,MAAM6B,EAAQhM,QAAUuL,KAAKpB,MAAM6B,EAAQ2E,UAIjD6U,GACFja,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAcrK,EAAcqD,2BAA4B,YAGzE,KAj8BiB,mCAo8B1B,WAA6D,WAAvCqyC,IAAuC,yDAAtBL,EAAsB,uDAAlB1+C,KAAKqiC,YAK9C,OAJAriC,KAAKy+C,UAAS,WACRM,GAAU,EAAKva,OAAO/jC,EAAQqB,OAClC48C,EAAEtX,eAAiB,EAAK2U,iBAEnB/7C,KAAKwiC,WAAWkc,EAAG,sBAz8BF,yBA48B1B,WACEjiB,GAAOz8B,KAAKzL,MAAM4kB,QAClB,IAAMvkB,EAAOoL,KAAKg/C,4BAElB,GAAIh/C,KAAKmkB,0BAA4BnkB,KAAKikB,IAAIxjB,EAAQ8E,UACpD,OAAO3Q,EAGT,IAAMP,EAAO2L,KAAK4jC,gBAAgBhvC,GAOlC,OANAP,EAAK4qD,UAAYrqD,EACjBP,EAAK6qD,YAAcl/C,KAAKg/C,4BACxBh/C,KAAKwkC,OAAO/jC,EAAQwB,UACpB5N,EAAK8qD,SAAWn/C,KAAK+7C,cACrB/7C,KAAKwkC,OAAO/jC,EAAQqB,OACpBzN,EAAK+qD,UAAYp/C,KAAK+7C,cACf/7C,KAAKwiC,WAAWnuC,EAAM,uBA39BL,4CA89B1B,WACE,OAAO2L,KAAKgkB,aAAa,aAAehkB,KAAKorC,YAAYx2C,OAAS6L,EAAQ0E,OA/9BlD,uCAk+B1B,WACE,OAAInF,KAAKq/C,0BACAr/C,KAAKs/C,iCAAiC,kBAG3Ct/C,KAAKpB,MAAM6B,EAAQ0E,MACdnF,KAAKs/C,iCAAiC,qBACpCt/C,KAAKu/C,iCACPv/C,KAAKs/C,iCAAiC,qBAAqB,GAG7Dt/C,KAAKw/C,6BA7+BY,kCAg/B1B,WACE,IAAMnrD,EAAO2L,KAAKqiC,YAEZr9B,EAAShF,KAAKy/C,gCAKpB,OAHAprD,EAAK+yC,eAAiBpiC,GAAUhF,KAAK0/C,sBACrC1/C,KAAK+qC,iBAAiB,KACtB12C,EAAKmC,WAAawJ,KAAKk9C,kBAChBl9C,KAAKwiC,WAAWnuC,EAAM,qBAx/BL,mCA2/B1B,SAAsBsrD,GACpB,IAAMC,EAAgB5/C,KAAKzL,MAAMxB,MAC3B8sD,EAAgB7/C,KAAK84C,qBAAqB,wBAAyB94C,KAAK8/C,mCAAmC/oD,KAAKiJ,OAMtH,OAJK6/C,EAAc9uD,QACjBiP,KAAKwX,MAAMooC,EAAeljB,GAASa,wBAAyBoiB,GAGvDE,IAngCiB,gDAsgC1B,WACE,IAAMxrD,EAAO2L,KAAKqiC,YAOlB,OANAhuC,EAAKmC,WAAawJ,KAAKg5C,mBAAkB,GAErCh5C,KAAK0jB,aAAa,OACpBrvB,EAAKytC,eAAiB9hC,KAAKi5C,wBAGtBj5C,KAAKwiC,WAAWnuC,EAAM,mCA9gCL,yCAihC1B,SAA4BA,GACtB2L,KAAKpB,MAAM6B,EAAQhM,OACrBJ,EAAK6E,GAAK8G,KAAK2mC,kBACf3mC,KAAKgyC,UAAU39C,EAAK6E,GAAI,mCAlgOJ,OAogOpB7E,EAAK6E,GAAK,KACV8G,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO2pC,GAAS2B,uBAGxChqC,EAAKytC,eAAiB9hC,KAAKo6C,2BAEvBp6C,KAAKikB,IAAIxjB,EAAQ8E,YACnBlR,EAAKg1C,QAAUrpC,KAAK+/C,sBAAsB,YAG5C,IAAM1lD,EAAO2F,KAAKqiC,YAGlB,OAFAhoC,EAAKA,KAAO2F,KAAKy+C,SAASz+C,KAAKw7C,yBAAyBzkD,KAAKiJ,OAC7D3L,EAAKgG,KAAO2F,KAAKwiC,WAAWnoC,EAAM,mBAC3B2F,KAAKwiC,WAAWnuC,EAAM,4BAniCL,yCAsiC1B,SAA4BA,GAAM,WAgBhC,OAfAA,EAAK6E,GAAK8G,KAAK2mC,kBACf3mC,KAAKgyC,UAAU39C,EAAK6E,GAAI,wBArhOP,GAshOjB7E,EAAKytC,eAAiB9hC,KAAKo6C,2BAC3B/lD,EAAK+yC,eAAiBpnC,KAAKy+C,UAAS,WAGlC,GAFA,EAAKja,OAAO/jC,EAAQkC,IAEhB,EAAKqhB,aAAa,cAAgB,EAAKonB,YAAYx2C,OAAS6L,EAAQuB,IAAK,CAC3E,IAAM3N,EAAO,EAAKguC,YAElB,OADA,EAAK9pB,OACE,EAAKiqB,WAAWnuC,EAAM,sBAG/B,OAAO,EAAK0nD,iBAEd/7C,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,4BAtjCL,2BAyjC1B,SAAc2rD,GACZ,IAAMC,EAAajgD,KAAKzL,MAAMygB,QAC9BhV,KAAKzL,MAAMygB,QAAU,CAACirC,EAAW,IAEjC,IACE,OAAOD,IADT,QAGEhgD,KAAKzL,MAAMygB,QAAUirC,KAhkCC,sBAokC1B,SAASD,GACP,IAAM5Z,EAAYpmC,KAAKzL,MAAM4kB,OAC7BnZ,KAAKzL,MAAM4kB,QAAS,EAEpB,IACE,OAAO6mC,IADT,QAGEhgD,KAAKzL,MAAM4kB,OAASitB,KA3kCE,gCA+kC1B,SAAmBtoC,GACjB,OAAQkC,KAAKpB,MAAMd,GAAqBkC,KAAK0/C,2BAAjBruD,IAhlCJ,mCAmlC1B,SAAsByM,GAAO,WAC3B,OAAOkC,KAAKkgD,mBAAkB,kBAAM,EAAK1b,OAAO1mC,QAplCxB,iCAulC1B,WAAsB,WACpB,OAAOkC,KAAKkgD,mBAAkB,kBAAM,EAAK3nC,YAxlCjB,+BA2lC1B,SAAkBynC,GAAI,WACpB,OAAOhgD,KAAKy+C,UAAS,WAEnB,OADAuB,IACO,EAAKjE,mBA9lCU,+BAkmC1B,WACE,IAAM1nD,EAAO2L,KAAKqiC,YAOlB,OANAhuC,EAAK6E,GAAK8G,KAAKpB,MAAM6B,EAAQzD,QAAUgD,KAAKskC,gBAAkBtkC,KAAK2mC,iBAAgB,GAE/E3mC,KAAKikB,IAAIxjB,EAAQkC,MACnBtO,EAAK8rD,YAAcngD,KAAK2kC,2BAGnB3kC,KAAKwiC,WAAWnuC,EAAM,kBA1mCL,oCA6mC1B,SAAuBA,EAAMgoC,GAO3B,OANIA,IAAShoC,EAAKo2B,OAAQ,GAC1Bp2B,EAAK6E,GAAK8G,KAAK2mC,kBACf3mC,KAAKgyC,UAAU39C,EAAK6E,GAAI,8BAA+BmjC,EAxlOhC+jB,IAJNjY,KA6lOjBnoC,KAAKwkC,OAAO/jC,EAAQY,QACpBhN,EAAKqhD,QAAU11C,KAAK84C,qBAAqB,cAAe94C,KAAKqgD,kBAAkBtpD,KAAKiJ,OACpFA,KAAKwkC,OAAO/jC,EAAQe,QACbxB,KAAKwiC,WAAWnuC,EAAM,uBApnCL,gCAunC1B,WACE,IAAMA,EAAO2L,KAAKqiC,YAKlB,OAJAriC,KAAK7G,MAAM8sB,MAjoOK,GAkoOhBjmB,KAAKwkC,OAAO/jC,EAAQY,QACpBrB,KAAKsgD,4BAA4BjsD,EAAKgG,KAAO,QAAIhJ,GAAW,EAAMoP,EAAQe,QAC1ExB,KAAK7G,MAAMovC,OACJvoC,KAAKwiC,WAAWnuC,EAAM,mBA7nCL,iDAgoC1B,SAAoCA,GAAsB,IAAhBksD,EAAgB,wDAOxD,GANAlsD,EAAK6E,GAAK8G,KAAK2mC,kBAEV4Z,GACHvgD,KAAKgyC,UAAU39C,EAAK6E,GAAI,kCA3mOJ,MA8mOlB8G,KAAKikB,IAAIxjB,EAAQuB,KAAM,CACzB,IAAMw+C,EAAQxgD,KAAKqiC,YACnBriC,KAAKygD,oCAAoCD,GAAO,GAChDnsD,EAAKgG,KAAOmmD,OAEZxgD,KAAK7G,MAAM8sB,MAAMzP,IACjBxW,KAAK6lB,UAAUI,MAx1KP,GAy1KR5xB,EAAKgG,KAAO2F,KAAK0gD,qBACjB1gD,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,OAGb,OAAOvoC,KAAKwiC,WAAWnuC,EAAM,yBAnpCL,qDAspC1B,SAAwCA,GAoBtC,OAnBI2L,KAAKgkB,aAAa,WACpB3vB,EAAKssD,QAAS,EACdtsD,EAAK6E,GAAK8G,KAAK2mC,mBACN3mC,KAAKpB,MAAM6B,EAAQzD,QAC5B3I,EAAK6E,GAAK8G,KAAKskC,gBAEftkC,KAAK2jB,aAGH3jB,KAAKpB,MAAM6B,EAAQY,SACrBrB,KAAK7G,MAAM8sB,MAAMzP,IACjBxW,KAAK6lB,UAAUI,MA72KP,GA82KR5xB,EAAKgG,KAAO2F,KAAK0gD,qBACjB1gD,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,QAEXvoC,KAAKsnC,YAGAtnC,KAAKwiC,WAAWnuC,EAAM,yBA1qCL,4CA6qC1B,SAA+BA,EAAMusD,GACnCvsD,EAAKusD,SAAWA,IAAY,EAC5BvsD,EAAK6E,GAAK8G,KAAK2mC,kBACf3mC,KAAKgyC,UAAU39C,EAAK6E,GAAI,4BAjqOPivC,GAkqOjBnoC,KAAKwkC,OAAO/jC,EAAQkC,IACpB,IAAMk+C,EAAkB7gD,KAAK8gD,yBAQ7B,MANwB,SAApBzsD,EAAKi2B,YAAkD,8BAAzBu2B,EAAgBjsD,MAChDoL,KAAKwX,MAAMqpC,EAAgB9tD,MAAO2pC,GAASiB,0BAG7CtpC,EAAKwsD,gBAAkBA,EACvB7gD,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,+BA1rCL,yCA6rC1B,WACE,OAAO2L,KAAKgkB,aAAa,YAA2C,KAA7BhkB,KAAK2uC,sBA9rCpB,oCAisC1B,WACE,OAAO3uC,KAAK+gD,8BAAgC/gD,KAAKghD,iCAAmChhD,KAAKg5C,mBAAkB,KAlsCnF,4CAqsC1B,WACE,IAAM3kD,EAAO2L,KAAKqiC,YAIlB,GAHAriC,KAAKumC,iBAAiB,WACtBvmC,KAAKwkC,OAAO/jC,EAAQiB,SAEf1B,KAAKpB,MAAM6B,EAAQzD,QACtB,MAAMgD,KAAK2jB,aAKb,OAFAtvB,EAAKmC,WAAawJ,KAAKskC,gBACvBtkC,KAAKwkC,OAAO/jC,EAAQkB,QACb3B,KAAKwiC,WAAWnuC,EAAM,+BAhtCL,yBAmtC1B,SAAY4sD,GACV,IAAM1sD,EAAQyL,KAAKzL,MAAMmwB,QACnBw8B,EAAMD,IAEZ,OADAjhD,KAAKzL,MAAQA,EACN2sD,IAvtCiB,gCA0tC1B,SAAmBD,GACjB,IAAM/hD,EAASc,KAAK8yC,UAAS,SAAAG,GAAK,OAAIgO,KAAOhO,OAC7C,IAAI/zC,EAAO4lB,SAAY5lB,EAAO7K,KAE9B,OADI6K,EAAO3D,QAAOyE,KAAKzL,MAAQ2K,EAAO0lB,WAC/B1lB,EAAO7K,OA9tCU,wBAiuC1B,SAAW4sD,GACT,IAAM1sD,EAAQyL,KAAKzL,MAAMmwB,QACnBxlB,EAAS+hD,IAEf,YAAe5vD,IAAX6N,IAAmC,IAAXA,EACnBA,OAEPc,KAAKzL,MAAQA,KAxuCS,+BA6uC1B,SAAkB4sD,GAAM,WACtB,IAAInhD,KAAKskB,mBAAT,CAIA,IACIge,EADA8e,EAAYphD,KAAKzL,MAAMK,KAQ3B,OALIoL,KAAKgkB,aAAa,SACpBo9B,EAAY3gD,EAAQsE,KACpBu9B,EAAO,OAGFtiC,KAAKqhD,oBAAmB,WAC7B,OAAQD,GACN,KAAK3gD,EAAQgE,UAEX,OADA08C,EAAKxpD,SAAU,EACR,EAAK2pD,uBAAuBH,GAAM,GAAO,GAElD,KAAK1gD,EAAQ6E,OAEX,OADA67C,EAAKxpD,SAAU,EACR,EAAK4pD,WAAWJ,GAAM,GAAM,GAErC,KAAK1gD,EAAQuE,OACX,GAAI,EAAKpG,MAAM6B,EAAQuE,SAAW,EAAKqtC,sBAAsB,QAG3D,OAFA,EAAK7N,OAAO/jC,EAAQuE,QACpB,EAAKuhC,iBAAiB,QACf,EAAKib,uBAAuBL,GAAM,GAG7C,KAAK1gD,EAAQsE,KAEX,OADAu9B,EAAOA,GAAQ,EAAK/tC,MAAM7E,MACnB,EAAK+xD,kBAAkBN,EAAM7e,GAEtC,KAAK7hC,EAAQhM,KAET,IAAM/E,EAAQ,EAAK6E,MAAM7E,MAEzB,MAAc,WAAVA,EACK,EAAKgyD,wCAAwCP,GAE7C,EAAKQ,mBAAmBR,EAAMzxD,GAAO,UAtxC9B,yCA6xC1B,WACE,OAAOsQ,KAAK2hD,mBAAmB3hD,KAAKqiC,YAAariC,KAAKzL,MAAM7E,OAAO,KA9xC3C,wCAiyC1B,SAA2B2E,EAAMq6C,GAC/B,OAAQA,EAAKj6C,MACX,IAAK,UAED,IAAMi0C,EAAc1oC,KAAK4hD,kBAAkBvtD,GAE3C,GAAIq0C,EAEF,OADAA,EAAY/wC,SAAU,EACf+wC,EAGT,MAGJ,IAAK,SACH,GAAI1oC,KAAKpB,MAAM6B,EAAQY,QAAS,CAC9BrB,KAAK7G,MAAM8sB,MAAMzP,IACjBxW,KAAK6lB,UAAUI,MA7/KX,GA8/KJ,IAAM47B,EAAMxtD,EAMZ,OALAwtD,EAAIlB,QAAS,EACbkB,EAAI3oD,GAAKw1C,EACTmT,EAAIxnD,KAAO2F,KAAK0gD,qBAChB1gD,KAAK7G,MAAMovC,OACXvoC,KAAK6lB,UAAU0iB,OACRvoC,KAAKwiC,WAAWqf,EAAK,uBAG9B,MAEF,QACE,OAAO7hD,KAAK2hD,mBAAmBttD,EAAMq6C,EAAKj6C,MAAM,MA/zC5B,gCAm0C1B,SAAmBJ,EAAM3E,EAAO6oB,GAC9B,OAAQ7oB,GACN,IAAK,WACH,GAAIsQ,KAAK8hD,sBAAsBvpC,KAAUvY,KAAKpB,MAAM6B,EAAQ6E,SAAWtF,KAAKpB,MAAM6B,EAAQhM,OACxF,OAAOuL,KAAK+hD,2BAA2B1tD,GAGzC,MAEF,IAAK,OACH,GAAIkkB,GAAQvY,KAAKpB,MAAM6B,EAAQhM,MAE7B,OADI8jB,GAAMvY,KAAKuY,OACRvY,KAAKwhD,uBAAuBntD,GAAM,GAG3C,MAEF,IAAK,YACH,GAAI2L,KAAK8hD,sBAAsBvpC,IAASvY,KAAKpB,MAAM6B,EAAQhM,MACzD,OAAOuL,KAAKgiD,4BAA4B3tD,GAG1C,MAEF,IAAK,SACH,GAAI2L,KAAK8hD,sBAAsBvpC,GAAO,CACpC,GAAIvY,KAAKpB,MAAM6B,EAAQzD,QACrB,OAAOgD,KAAK0hD,wCAAwCrtD,GAC/C,GAAI2L,KAAKpB,MAAM6B,EAAQhM,MAC5B,OAAOuL,KAAKygD,oCAAoCpsD,GAIpD,MAEF,IAAK,YACH,GAAI2L,KAAK8hD,sBAAsBvpC,IAASvY,KAAKpB,MAAM6B,EAAQhM,MACzD,OAAOuL,KAAKygD,oCAAoCpsD,GAGlD,MAEF,IAAK,OACH,GAAI2L,KAAK8hD,sBAAsBvpC,IAASvY,KAAKpB,MAAM6B,EAAQhM,MACzD,OAAOuL,KAAKiiD,4BAA4B5tD,MA/2CtB,mCAs3C1B,SAAsBkkB,GACpB,OAAIA,GACEvY,KAAKkiD,0BACTliD,KAAKuY,QACE,IAGDvY,KAAKskB,qBA73CW,iDAg4C1B,SAAoCue,EAAUpvB,GAAU,WACtD,GAAKzT,KAAK0jB,aAAa,KAAvB,CAIA,IAAMy+B,EAA4BniD,KAAKzL,MAAM2kB,uBAC7ClZ,KAAKzL,MAAM2kB,wBAAyB,EACpC,IAAMgoC,EAAMlhD,KAAKoiD,oBAAmB,WAClC,IAAM/tD,EAAO,EAAK0yB,YAAY8b,EAAUpvB,GAKxC,OAJApf,EAAKytC,eAAiB,EAAK+X,wBAC3B,iDAA0BxlD,GAC1BA,EAAK8yC,WAAa,EAAKkb,0CACvB,EAAK7d,OAAO/jC,EAAQ0B,OACb9N,KAIT,GAFA2L,KAAKzL,MAAM2kB,uBAAyBipC,EAE/BjB,EAIL,OAAOlhD,KAAKq0C,qBAAqB6M,EAAK,MAAM,MAr5CpB,kCAw5C1B,WAAuB,WACf7sD,EAAO2L,KAAKqiC,YAWlB,OAVAhuC,EAAKsU,OAAS3I,KAAKy+C,UAAS,kBAAM,EAAK6D,eAAc,WAEnD,OADA,EAAKvX,iBAAiB,KACf,EAAK+N,qBAAqB,4BAA6B,EAAKiD,YAAYhlD,KAAK,UAG3D,IAAvB1C,EAAKsU,OAAO5X,QACdiP,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASc,oBAGlCx9B,KAAK+qC,iBAAiB,KACf/qC,KAAKwiC,WAAWnuC,EAAM,kCAp6CL,kCAu6C1B,WACE,GAAI2L,KAAKpB,MAAM6B,EAAQhM,MACrB,OAAQuL,KAAKzL,MAAM7E,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,IAr7CiB,sCAw7C1B,WACE,OAAIsQ,KAAKuiD,wBACT,+DA17CwB,qCA67C1B,SAAwB5P,EAAgB6P,GACtC,IAEIlK,EAFEzV,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAExBqnC,GAAW,EACX2H,GAAW,EAEf,QAAuBpxD,IAAnBshD,EAA8B,CAChC,IAAMkF,EAAW,GACjB73C,KAAKo7C,iBAAiBvD,EAAU,CAAC,SAAU,UAAW,YAAa,WAAY,aAC/ES,EAAgBT,EAASS,cACzBmK,EAAW5K,EAAS4K,SACpB3H,EAAWjD,EAASiD,UAEG,IAAnBnI,IAA6B2F,GAAiBwC,GAAY2H,IAC5DziD,KAAKwX,MAAMqrB,EAAUnG,GAAS0C,6BAIlC,IAAMwS,EAAO5xC,KAAK0iD,oBAClB1iD,KAAK2iD,6BAA6B/Q,GAClC,IAAMgR,EAAM5iD,KAAK0iD,kBAAkB9Q,EAAK7+C,MAAO6+C,EAAKj/C,IAAII,MAAO6+C,GAE/D,GAAI0G,GAAiBwC,GAAY2H,EAAU,CACzC,IAAMI,EAAK7iD,KAAK+mB,YAAY8b,EAAUpvB,GAetC,OAbI+uC,EAAWzxD,SACb8xD,EAAGL,WAAaA,GAGdlK,IAAeuK,EAAGvK,cAAgBA,GAClCwC,IAAU+H,EAAG/H,SAAWA,GACxB2H,IAAUI,EAAGJ,SAAWA,GAEX,eAAbG,EAAIhuD,MAAsC,sBAAbguD,EAAIhuD,MACnCoL,KAAKwX,MAAMqrC,EAAG9vD,MAAO2pC,GAAS+C,kCAGhCojB,EAAGC,UAAYF,EACR5iD,KAAKwiC,WAAWqgB,EAAI,uBAO7B,OAJIL,EAAWzxD,SACb6gD,EAAK4Q,WAAaA,GAGbI,IA3+CiB,wCA8+C1B,SAA2BvuD,EAAMO,GAAwB,IAAlBqtC,EAAkB,wDACnDjiC,KAAKpB,MAAM6B,EAAQqB,SACrBzN,EAAK8yC,WAAannC,KAAKu6C,qCAAqC95C,EAAQqB,QAGtE,IAAMihD,EAAwB,wBAATnuD,EAAiC,oBAA+B,gBAATA,EAAyB,uBAAoBvD,EAErH0xD,IAAiB/iD,KAAKpB,MAAM6B,EAAQY,SAAWrB,KAAKskB,mBACtDtkB,KAAKwiC,WAAWnuC,EAAM0uD,GAIH,sBAAjBA,GAAwC/iD,KAAKzL,MAAMglB,mBACrDvZ,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASU,kCAE5B/oC,EAAKsD,SACP,8DAAiCtD,EAAM0uD,EAAc9gB,GAKzD,8DAAiC5tC,EAAMO,EAAMqtC,KAngDrB,yCAsgD1B,SAA4B5tC,IACrBA,EAAKgG,MAAQhG,EAAK6E,GACrB8G,KAAKgyC,UAAU39C,EAAK6E,GAAI,gBAAiB8d,IAEzC,gEAAqCtO,aA1gDf,wCA8gD1B,SAA2BvS,GAAO,WAChCA,EAAMb,SAAQ,SAAAjB,GACgC,0BAA/B,MAARA,OAAe,EAASA,EAAKO,OAChC,EAAK4iB,MAAMnjB,EAAK+yC,eAAer0C,MAAO2pC,GAAS4C,+BAjhD3B,8BAshD1B,SAAiByR,EAAUiS,GAEzB,OADAhjD,KAAKijD,2BAA2BlS,GACzBA,IAxhDiB,4BA2hD1B,WAAwB,6BAANh2C,EAAM,yBAANA,EAAM,gBACtB,IAAM1G,GAAI,sEAA2B0G,IAMrC,MAJkB,oBAAd1G,EAAKO,MACPoL,KAAKijD,2BAA2B5uD,EAAKmT,UAGhCnT,IAliDiB,4BAqiD1B,SAAeivC,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAAO,WACvD,IAAKyL,KAAKmkB,yBAA2BnkB,KAAKpB,MAAM6B,EAAQsC,MAAO,CAC7D/C,KAAKzL,MAAMylB,aAAc,EACzBha,KAAKuY,OACL,IAAM2qC,EAAoBljD,KAAK+mB,YAAY8b,EAAUpvB,GAErD,OADAyvC,EAAkB1sD,WAAa8sC,EACxBtjC,KAAKwiC,WAAW0gB,EAAmB,uBAG5C,IAAIC,GAAiB,EAErB,GAAInjD,KAAKpB,MAAM6B,EAAQyB,cAA6C,KAA7BlC,KAAK2uC,oBAA4B,CACtE,GAAIpL,EAEF,OADAhvC,EAAMmvC,MAAO,EACNJ,EAGT/uC,EAAMivC,oBAAsB2f,GAAiB,EAC7CnjD,KAAKuY,OAGP,GAAIvY,KAAK0jB,aAAa,KAAM,CAC1B,IAAI0/B,EACElkD,EAASc,KAAKoiD,oBAAmB,WACrC,IAAK7e,GAAW,EAAK8f,qBAAqB/f,GAAO,CAC/C,IAAMggB,EAAe,EAAKC,oCAAoC1gB,EAAUpvB,GAExE,GAAI6vC,EACF,OAAOA,EAIX,IAAMjvD,EAAO,EAAK0yB,YAAY8b,EAAUpvB,GACxCpf,EAAKwF,OAASypC,EACd,IAAMwQ,EAAgB,EAAKmF,uBAE3B,GAAInF,EAAe,CAMjB,GALIqP,IAAmB,EAAKvkD,MAAM6B,EAAQiB,UACxC0hD,EAAuB,EAAK7uD,MAAMif,IAClC,EAAKmQ,eAGF4f,GAAW,EAAKtf,IAAIxjB,EAAQiB,QAS/B,OARArN,EAAKqU,UAAY,EAAKgrC,6BAA6BjzC,EAAQkB,QAAQ,GACnE,EAAKshD,2BAA2B5uD,EAAKqU,WACrCrU,EAAKytC,eAAiBgS,EAElBv/C,EAAMivC,sBACRnvC,EAAK6uC,SAAWigB,GAGX,EAAKpP,qBAAqB1/C,EAAME,EAAMivC,qBACxC,GAAI,EAAK5kC,MAAM6B,EAAQ6B,WAAY,CACxC,IAAMpD,EAAS,EAAKskD,8BAA8BlgB,EAAMT,EAAUpvB,EAAUlf,GAE5E,OADA2K,EAAO4iC,eAAiBgS,EACjB50C,GAIX,EAAKykB,gBAOP,GAJIy/B,GACFpjD,KAAK2jB,WAAWy/B,EAAsB3iD,EAAQiB,QAG5CxC,EAAQ,OAAOA,EAGrB,yDAA4BokC,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,KA1mDvC,+BA6mD1B,SAAkBF,GAAM,WACtB,GAAI2L,KAAK0jB,aAAa,KAAM,CAC1B,IAAMoe,EAAiB9hC,KAAKoiD,oBAAmB,WAC7C,IAAMrnD,EAAO,EAAKk+C,uBAElB,OADK,EAAKr6C,MAAM6B,EAAQiB,SAAS,EAAKiiB,aAC/B5oB,KAGL+mC,IACFztC,EAAKytC,eAAiBA,GAI1B,qDAAwBztC,KA1nDA,yBA6nD1B,SAAYu9C,EAAM6R,EAAcC,EAAcC,GAC5C,GAAIpnB,GAAQ97B,EAAQoF,IAAI1F,OAASwjD,IAAY3jD,KAAKmkB,yBAA2BnkB,KAAKgkB,aAAa,MAAO,CACpG,IAAM3vB,EAAO2L,KAAK+mB,YAAY08B,EAAcC,GAC5CrvD,EAAKmC,WAAao7C,EAElB,IAAM5sC,EAAShF,KAAKy/C,gCAUpB,OAPEprD,EAAK+yC,eADHpiC,GAGoBhF,KAAK0/C,sBAG7B1/C,KAAKwiC,WAAWnuC,EAAM,kBACtB2L,KAAK4jD,eACE5jD,KAAK6jD,YAAYxvD,EAAMovD,EAAcC,EAAcC,GAG5D,sDAAyB/R,EAAM6R,EAAcC,EAAcC,KA/oDnC,+BAkpD1B,SAAkBztC,EAAMzC,EAAUqwC,EAAehhB,MAlpDvB,mCAopD1B,cAppD0B,yBAspD1B,SAAYzuC,GAGV,GAFAA,EAAKi2B,WAAa,QAEdtqB,KAAKpB,MAAM6B,EAAQhM,OAASuL,KAAKpB,MAAM6B,EAAQoD,OAAS7D,KAAKpB,MAAM6B,EAAQY,QAAS,CACtF,IAAI0iD,EAAQ/jD,KAAKorC,YAQjB,IANIprC,KAAKgkB,aAAa,SAAW+/B,EAAMnvD,OAAS6L,EAAQmB,OAAWmiD,EAAMnvD,OAAS6L,EAAQhM,MAAwB,SAAhBsvD,EAAMr0D,OAAqBq0D,EAAMnvD,OAAS6L,EAAQkC,KAClJtO,EAAKi2B,WAAa,OAClBtqB,KAAKuY,OACLwrC,EAAQ/jD,KAAKorC,aAGXprC,KAAKpB,MAAM6B,EAAQhM,OAASsvD,EAAMnvD,OAAS6L,EAAQkC,GACrD,OAAO3C,KAAKgkD,+BAA+B3vD,GAI/C,IAAM4vD,EAAa,EAAH,6CAAqB5vD,GAMrC,MAJ8B,SAA1B4vD,EAAW35B,YAAyB25B,EAAWr7C,WAAW7X,OAAS,GAAuC,2BAAlCkzD,EAAWr7C,WAAW,GAAGhU,MACnGoL,KAAKwX,MAAMysC,EAAWlxD,MAAO2pC,GAASyC,wCAGjC8kB,IA7qDiB,yBAgrD1B,SAAY5vD,GACV,GAAI2L,KAAKpB,MAAM6B,EAAQgF,SAUrB,OATAzF,KAAKuY,OAEDvY,KAAKgkB,aAAa,SAAwC,KAA7BhkB,KAAK2uC,qBACpCt6C,EAAKi2B,WAAa,OAClBtqB,KAAKuY,QAELlkB,EAAKi2B,WAAa,QAGbtqB,KAAKgkD,+BAA+B3vD,GAAM,GAC5C,GAAI2L,KAAKikB,IAAIxjB,EAAQkC,IAAK,CAC/B,IAAMxS,EAASkE,EAGf,OAFAlE,EAAOqG,WAAawJ,KAAKukC,kBACzBvkC,KAAKsnC,YACEtnC,KAAKwiC,WAAWryC,EAAQ,sBAC1B,GAAI6P,KAAKkkB,cAAc,MAAO,CACnC,IAAMgsB,EAAO77C,EAIb,OAHA2L,KAAKumC,iBAAiB,aACtB2J,EAAKh3C,GAAK8G,KAAK2mC,kBACf3mC,KAAKsnC,YACEtnC,KAAKwiC,WAAW0N,EAAM,gCAS7B,OAPIlwC,KAAKgkB,aAAa,SAAWhkB,KAAKorC,YAAYx2C,OAAS6L,EAAQY,QACjErB,KAAKuY,OACLlkB,EAAK00C,WAAa,QAElB10C,EAAK00C,WAAa,QAGpB,+CAAyB10C,KA/sDH,6BAmtD1B,WACE,OAAO2L,KAAKgkB,aAAa,aAAehkB,KAAKorC,YAAYx2C,OAAS6L,EAAQ6E,SAptDlD,0CAutD1B,WACE,GAAItF,KAAKkkD,kBAAmB,CAC1B,IAAMC,EAAMnkD,KAAKqiC,YAIjB,OAHAriC,KAAKuY,OACL4rC,EAAIxH,UAAW,EACf38C,KAAKuhD,WAAW4C,GAAK,GAAM,GACpBA,EAGT,GAAyB,cAArBnkD,KAAKzL,MAAM7E,MAAuB,CACpC,IAAM00D,EAAgBpkD,KAAKqiC,YAC3BriC,KAAKuY,OACL,IAAMrZ,EAASc,KAAKgiD,4BAA4BoC,GAChD,GAAIllD,EAAQ,OAAOA,EAGrB,0EAvuDwB,mCA0uD1B,SAAsB8V,EAASq5B,GAC7B,GAAIruC,KAAKzL,MAAMK,OAAS6L,EAAQuE,OAAQ,CACtC,IAAM++C,EAAQ/jD,KAAKorC,YAEnB,GAAI2Y,EAAMnvD,OAAS6L,EAAQhM,MAAwB,SAAhBsvD,EAAMr0D,MAAkB,CACzD,IAAM2E,EAAO2L,KAAKqiC,YAGlB,OAFAriC,KAAKwkC,OAAO/jC,EAAQuE,QACpBhF,KAAKumC,iBAAiB,QACfvmC,KAAKwhD,uBAAuBntD,GAAM,IAI7C,gEAAmC2gB,EAASq5B,KAtvDpB,iCAyvD1B,WACE,OAAOruC,KAAKq4C,gBAAgB,CAAC,SAAU,YAAa,cA1vD5B,gCA6vD1B,SAAmB7H,EAAQ6T,GACzB,OAAOA,EAAU/kD,MAAK,SAAAsgC,GACpB,OAAID,GAAmBC,GACd4Q,EAAO8H,gBAAkB1Y,IAGzB4Q,EAAO5Q,QAnwDM,qCAuwD1B,WACE,OAAO5/B,KAAKgkB,aAAa,WAA0C,MAA7BhkB,KAAK2uC,sBAxwDnB,8BA2wD1B,SAAiBjN,EAAW8O,EAAQj8C,GAAO,WACnC8vD,EAAY,CAAC,UAAW,UAAW,SAAU,YAAa,WAAY,WAAY,WAAY,UACpGrkD,KAAKo7C,iBAAiB5K,EAAQ6T,OAAWhzD,OAAWA,GAAW,GAE/D,IAAMizD,EAAmC,WACnC,EAAK5M,2BACP,EAAKn/B,OACL,EAAKA,OAED,EAAKgsC,mBAAmB/T,EAAQ6T,IAClC,EAAK7sC,MAAM,EAAKjjB,MAAMif,IAAKkpB,GAASuC,+BAGtC,EAAKulB,sBAAsB9iB,EAAW8O,IAEtC,EAAKiU,6BAA6B/iB,EAAW8O,EAAQj8C,IAASi8C,EAAOrF,SAIrEqF,EAAO74C,QACTqI,KAAKqhD,mBAAmBiD,GAExBA,MAjyDsB,0CAqyD1B,SAA6B5iB,EAAW8O,EAAQj8C,EAAO22C,GACrD,IAAMmQ,EAAMr7C,KAAKs7C,yBAAyB9K,GAE1C,GAAI6K,EAmBF,OAlBA3Z,EAAUrnC,KAAKjI,KAAKipD,GAEhB7K,EAAOmM,UACT38C,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAASmB,2BAGhC2S,EAAO8H,eACTt4C,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAASoB,+BAAgC0S,EAAO8H,eAGvE9H,EAAO74C,SACTqI,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAASqB,+BAGhCyS,EAAOiS,UACTziD,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAASsB,6BAMjCh+B,KAAKzL,MAAMilB,iBAAmBg3B,EAAOmM,UACxC38C,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAAS6B,mCAGhCiS,EAAOiS,WACJluD,EAAMmwD,eACT1kD,KAAKwX,MAAMg5B,EAAOz9C,MAAO2pC,GAASgC,wBAItC,gEAAmCgD,EAAW8O,EAAQj8C,EAAO22C,KAx0DrC,0CA20D1B,SAA6ByZ,GACV3kD,KAAKikB,IAAIxjB,EAAQwB,YACpB0iD,EAAazhB,UAAW,GAElCyhB,EAAa7J,UAAY96C,KAAKpB,MAAM6B,EAAQiB,SAC9C1B,KAAKwX,MAAMmtC,EAAa5xD,MAAO2pC,GAASM,wBAGtC2nB,EAAahtD,SAAWqI,KAAKpB,MAAM6B,EAAQiB,SAC7C1B,KAAKwX,MAAMmtC,EAAa5xD,MAAO2pC,GAASK,yBAp1DlB,sCAw1D1B,SAAyB1oC,EAAMq6C,GAE7B,OAD2B,eAAdA,EAAK95C,KAAwBoL,KAAK4kD,2BAA2BvwD,EAAMq6C,QAAQr9C,IACzE,EAAJ,0DAAmCgD,EAAMq6C,KA11D5B,0CA61D1B,WACE,QAAI1uC,KAAKuiD,wBACT,mEA/1DwB,8BAk2D1B,SAAiB7T,EAAM7L,EAAUpvB,EAAUsR,GAAqB,WAC9D,IAAK/kB,KAAKzL,MAAM2kB,yBAA2BlZ,KAAKpB,MAAM6B,EAAQwB,UAC5D,2DAA8BysC,EAAM7L,EAAUpvB,EAAUsR,GAG1D,IAAM7lB,EAASc,KAAK8yC,UAAS,gEAA6BpE,EAAM7L,EAAUpvB,MAE1E,OAAKvU,EAAO7K,MAQR6K,EAAO3D,QAAOyE,KAAKzL,MAAQ2K,EAAO0lB,WAC/B1lB,EAAO7K,OARR6K,EAAO3D,OACT,8DAAiCwpB,EAAqB7lB,EAAO3D,OAGxDmzC,KA92De,4BAq3D1B,SAAer6C,EAAMwuC,EAAUpvB,GAQ7B,GAPApf,EAAO,EAAH,gDAAwBA,EAAMwuC,EAAUpvB,GAExCzT,KAAKikB,IAAIxjB,EAAQwB,YACnB5N,EAAK6uC,UAAW,EAChBljC,KAAKqnC,iBAAiBhzC,IAGpB2L,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAMmuC,EAAejwC,KAAK+mB,YAAY8b,EAAUpvB,GAGhD,OAFAw8B,EAAaz5C,WAAanC,EAC1B47C,EAAa7I,eAAiBpnC,KAAKs5C,wBAC5Bt5C,KAAKwiC,WAAWyN,EAAc,wBAGvC,OAAO57C,IAp4DiB,oCAu4D1B,SAAuBA,GACrB,IAQIq0C,EARE7F,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBoxC,EAAY7kD,KAAKkkB,cAAc,WAErC,GAAI2gC,IAAc7kD,KAAKgkB,aAAa,aAAehkB,KAAK8kD,gCACtD,MAAM9kD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO2pC,GAASgB,mCAsB9C,OAjBI19B,KAAKpB,MAAM6B,EAAQhM,QACrBi0C,EAAc1oC,KAAK+kD,+BAGhBrc,IACHA,EAAc,EAAH,wDAAgCr0C,IAGzCq0C,IAAqC,2BAArBA,EAAY9zC,MAA0D,2BAArB8zC,EAAY9zC,MAAqCiwD,KACpHxwD,EAAK00C,WAAa,QAGhBL,GAAemc,IACjB7kD,KAAKmnB,mBAAmBuhB,EAAa7F,EAAUpvB,GAC/Ci1B,EAAY/wC,SAAU,GAGjB+wC,IAn6DiB,0BAs6D1B,SAAar0C,EAAMH,EAAaq8C,GAC9B,GAAMr8C,IAAeq8C,IAAevwC,KAAKgkB,aAAa,cAAtD,CAIA,gDAAmB3vB,EAAMH,EAAaq8C,EAAYl8C,EAAKsD,QAAUqf,GA75PlDmxB,KA85Pf,IAAMrG,EAAiB9hC,KAAKo6C,2BACxBtY,IAAgBztC,EAAKytC,eAAiBA,MA76DlB,0CAg7D1B,SAA6BztC,IACtBA,EAAK6uC,UAAYljC,KAAKikB,IAAIxjB,EAAQsC,QACrC1O,EAAK2wD,UAAW,GAGlB,IAAMpwD,EAAOoL,KAAK66C,2BACdjmD,IAAMP,EAAK+yC,eAAiBxyC,KAt7DR,gCAy7D1B,SAAmBP,GAOjB,GANA2L,KAAKilD,6BAA6B5wD,GAE9B2L,KAAKzL,MAAMglB,kBAAoBvZ,KAAKpB,MAAM6B,EAAQkC,KACpD3C,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO2pC,GAASS,iCAGpC9oC,EAAKsoD,UAAY38C,KAAKpB,MAAM6B,EAAQkC,IAAK,CAC3C,IACEjS,EACE2D,EADF3D,IAEFsP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAO2pC,GAASE,+BAA6C,eAAblsC,EAAIkE,MAA0BP,EAAKkuC,SAAnC,WAA6DviC,KAAKuI,MAAMpW,MAAMzB,EAAIqC,MAAOrC,EAAIoW,KAA7F,KAA8CpW,EAAI+D,MAG1H,6DAAgCJ,KAv8DR,uCA08D1B,SAA0BA,GAUxB,OATIA,EAAKsoD,UACP38C,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASiC,2BAG9BtqC,EAAKikD,eACPt4C,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAASkC,+BAAgCvqC,EAAKikD,eAGvEt4C,KAAKilD,6BAA6B5wD,GAClC,6DAAuCA,KAp9Df,6BAu9D1B,SAAgBqtC,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,GACtE,IAAME,EAAiB9hC,KAAKo6C,2BAExBtY,GAAkBH,GACpB3hC,KAAKwX,MAAMsqB,EAAe/uC,MAAO2pC,GAASO,+BAGxCiE,EAAOvpC,SAA4B,QAAhBupC,EAAOoB,MAAkC,QAAhBpB,EAAOoB,MACrDtiC,KAAKwX,MAAM0pB,EAAOnuC,MAAO2pC,GAASQ,gBAAiBgE,EAAOoB,MAGxDR,IAAgBZ,EAAOY,eAAiBA,GAC5C,mDAAsBJ,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,KAn+DtD,oCAs+D1B,SAAuBF,EAAWR,EAAQ5d,EAAaD,GACrD,IAAMye,EAAiB9hC,KAAKo6C,2BACxBtY,IAAgBZ,EAAOY,eAAiBA,GAC5C,0DAA6BJ,EAAWR,EAAQ5d,EAAaD,KAz+DrC,6BA4+D1B,SAAgBhvB,GACd,mDAAsBA,GAElBA,EAAKisC,YAActgC,KAAK0jB,aAAa,OACvCrvB,EAAKm9C,oBAAsBxxC,KAAKi5C,wBAG9Bj5C,KAAKkkB,cAAc,gBACrB7vB,EAAKi1C,WAAatpC,KAAK+/C,sBAAsB,iBAp/DvB,+BAw/D1B,SAAkBznB,GAAe,MACzBwJ,EAAiB9hC,KAAKo6C,2BACxBtY,IAAgBxJ,EAAKwJ,eAAiBA,GAFX,2BAAN/mC,EAAM,iCAANA,EAAM,mBAG/B,iEAAwBu9B,GAAxB,OAAiCv9B,MA3/DT,iCA8/D1B,SAAoB1G,EAAMs+C,GACxB,IAAM7Q,EAAiB9hC,KAAKo6C,2BACxBtY,IAAgBztC,EAAKytC,eAAiBA,GAC1C,uDAA0BztC,EAAMs+C,KAjgER,wBAogE1B,SAAWzC,EAAM5N,GACf,8CAAiB4N,EAAM5N,GAEF,eAAjB4N,EAAKh3C,GAAGtE,MAAyBoL,KAAKikB,IAAIxjB,EAAQsC,QACpDmtC,EAAK8U,UAAW,GAGlB,IAAMpwD,EAAOoL,KAAK66C,2BAEdjmD,IACFs7C,EAAKh3C,GAAGkuC,eAAiBxyC,EACzBoL,KAAKqnC,iBAAiB6I,EAAKh3C,OA/gEL,+CAmhE1B,SAAkC7E,EAAMqB,GAKtC,OAJIsK,KAAKpB,MAAM6B,EAAQqB,SACrBzN,EAAK8yC,WAAannC,KAAKs5C,yBAGzB,qEAA+CjlD,EAAMqB,KAxhE7B,8BA2hE1B,WAA0B,QACpBm9C,EAAME,EAAOmS,EAAWlS,EAAOmS,EAAYC,EAAOC,EAElD9wD,EACAsvC,EACAyhB,EAiBkE,EAIlExjB,EA1BoB,0BAAN/mC,EAAM,yBAANA,EAAM,gBAOxB,GAAIiF,KAAKgJ,UAAU,SAAWhJ,KAAKpB,MAAM6B,EAAQo7B,cAAgB77B,KAAK0jB,aAAa,MAAO,CAGxF,GAFAnvB,EAAQyL,KAAKzL,MAAMmwB,UACnBmf,EAAM7jC,KAAK8yC,UAAS,0FAAgC/3C,MAAOxG,IAClDgH,MAAO,OAAOsoC,EAAIxvC,KAC3B,IACE2gB,EACEhV,KAAKzL,MADPygB,QAGEA,EAAQA,EAAQjkB,OAAS,KAAOuI,EAAMkiC,OACxCxmB,EAAQjkB,QAAU,EACTikB,EAAQA,EAAQjkB,OAAS,KAAOuI,EAAMoiC,SAC/C1mB,EAAQjkB,QAAU,GAItB,IAAsB,OAAf8hD,EAAOhP,KAAgBgP,EAAKt3C,SAAWyE,KAAK0jB,aAAa,KAC9D,+EAAiC3oB,IAInCxG,EAAQA,GAASyL,KAAKzL,MAAMmwB,QAC5B,IAAMviB,EAAQnC,KAAK8yC,UAAS,SAAAG,GAAS,MAC/B/B,EAAaqU,EAEjBzjB,EAAiB,EAAK+X,wBACtB,IAAMnL,GAAI,kEAA6B3zC,IAWvC,OATkB,4BAAd2zC,EAAK95C,MAAoE,OAA7Bs8C,EAAcxC,EAAKlrB,QAAkB0tB,EAAY9P,gBAC/F6R,IAG4F,KAAnD,OAArCsS,EAAkBzjB,QAA0B,EAASyjB,EAAgB58C,OAAO5X,SAChF,EAAKqiD,2BAA2B1E,EAAM5M,GAGxC4M,EAAK5M,eAAiBA,EACf4M,IACNn6C,GACH,IAAK4N,EAAM5G,QAAU4G,EAAM2iB,QAAS,OAAO3iB,EAAM9N,KAEjD,IAAKwvC,IACHpH,IAAQz8B,KAAKgJ,UAAU,UACvBs8C,EAAWtlD,KAAK8yC,UAAS,0FAAgC/3C,MAAOxG,IAClDgH,OAAO,OAAO+pD,EAASjxD,KAGvC,GAAqB,OAAhB0+C,EAAQlP,IAAgBkP,EAAM1+C,KAEjC,OADA2L,KAAKzL,MAAQsvC,EAAIjf,UACVif,EAAIxvC,KAGb,GAAI8N,EAAM9N,KAER,OADA2L,KAAKzL,MAAQ4N,EAAMyiB,UACZziB,EAAM9N,KAGf,GAA8B,OAAzB6wD,EAAYI,IAAqBJ,EAAU7wD,KAE9C,OADA2L,KAAKzL,MAAQ+wD,EAAS1gC,UACf0gC,EAASjxD,KAGlB,GAAqB,OAAhB2+C,EAAQnP,IAAgBmP,EAAMnuB,OAAQ,MAAMgf,EAAItoC,MACrD,GAAI4G,EAAM0iB,OAAQ,MAAM1iB,EAAM5G,MAC9B,GAA+B,OAA1B4pD,EAAaG,IAAqBH,EAAWtgC,OAAQ,MAAMygC,EAAS/pD,MACzE,MAAwB,OAAhB6pD,EAAQvhB,QAAe,EAASuhB,EAAM7pD,QAAU4G,EAAM5G,QAAqC,OAA1B8pD,EAAaC,QAAoB,EAASD,EAAW9pD,SAlmEtG,6BAqmE1B,SAAgBwpB,GACd,OAAK/kB,KAAKgJ,UAAU,QAAUhJ,KAAK0jB,aAAa,KACvC1jB,KAAKwlD,uBAEZ,mDAA6BzgC,KAzmEP,wBA6mE1B,SAAW1wB,GAAM,WACf,GAAI2L,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAM5C,EAASc,KAAK8yC,UAAS,SAAAG,GAC3B,IAAM9L,EAAa,EAAKoT,qCAAqC95C,EAAQqB,OAErE,OADI,EAAKsiB,sBAAyB,EAAKxlB,MAAM6B,EAAQ0B,QAAQ8wC,IACtD9L,KAET,GAAIjoC,EAAO4lB,QAAS,OAEf5lB,EAAO2lB,SACN3lB,EAAO3D,QAAOyE,KAAKzL,MAAQ2K,EAAO0lB,WACtCvwB,EAAK8yC,WAAajoC,EAAO7K,MAI7B,qDAAwBA,KA5nEA,0CA+nE1B,SAA6By5C,GACvB9tC,KAAKikB,IAAIxjB,EAAQwB,YACA,eAAf6rC,EAAMl5C,MAA0BoL,KAAKzL,MAAMglB,kBAAqBvZ,KAAKzL,MAAM4kB,QAC7EnZ,KAAKwX,MAAMs2B,EAAM/6C,MAAO2pC,GAAS1T,mBAGnC8kB,EAAM5K,UAAW,GAGnB,IAAMtuC,EAAOoL,KAAK66C,2BAGlB,OAFIjmD,IAAMk5C,EAAM1G,eAAiBxyC,GACjCoL,KAAKqnC,iBAAiByG,GACfA,IA3oEiB,0BA8oE1B,SAAaz5C,EAAMyuC,GACjB,OAAQzuC,EAAKO,MACX,IAAK,uBACH,OAAOoL,KAAK+iC,aAAa1uC,EAAKmC,WAAYssC,GAE5C,IAAK,sBACH,OAAO,EAET,QACE,uDAA0BzuC,EAAMyuC,MAvpEZ,0BA2pE1B,SAAazuC,GAAqB,IAAf2uC,EAAe,wDAChC,OAAQ3uC,EAAKO,MACX,IAAK,uBACH,uDAA0BoL,KAAK8wC,oBAAoBz8C,GAAO2uC,GAE5D,IAAK,sBACH,uDAA0B3uC,EAAM2uC,GAElC,IAAK,0BACH,OAAOhjC,KAAKylD,oCAAoCpxD,EAAM2uC,GAExD,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADA3uC,EAAKmC,WAAawJ,KAAKijC,aAAa5uC,EAAKmC,WAAYwsC,GAC9C3uC,EAET,QACE,uDAA0BA,EAAM2uC,MA7qEZ,iDAirE1B,SAAoC3uC,EAAM2uC,GACxC,OAAQ3uC,EAAKmC,WAAW5B,MACtB,IAAK,iBACL,IAAK,sBACL,IAAK,kBACL,IAAK,0BAEH,OADAP,EAAKmC,WAAawJ,KAAKijC,aAAa5uC,EAAKmC,WAAYwsC,GAC9C3uC,EAET,QACE,uDAA0BA,EAAM2uC,MA3rEZ,uBA+rE1B,SAAU0L,EAAMoD,GAA6B,UACvC4T,EADuC,mBAAN3qD,EAAM,iCAANA,EAAM,kBAG3C,OAAQ2zC,EAAK95C,MACX,IAAK,uBACH,OAEF,IAAK,sBAEH,YADAoL,KAAKgyC,UAAL,MAAAhyC,KAAA,CAAe0uC,EAAKoU,UAAW,sBAA/B,OAAwD/nD,IAG1D,IAAK,iBACL,IAAK,kBACH,IAAKA,EAAK,IAA6B,6BAAvB+2C,IAAsF,OAA9B4T,EAAehX,EAAKlrB,SAAkBkiC,EAAatkB,eAAgB,CACzIphC,KAAKwX,MAAMk3B,EAAK37C,MAAOsW,EAAcuD,WAAYklC,GACjD,MAIF,YADA9xC,KAAKgyC,UAAL,MAAAhyC,KAAA,CAAe0uC,EAAKl4C,WAAY,4BAAhC,OAA+DuE,IAGjE,IAAK,sBAEH,YADAiF,KAAKgyC,UAAL,MAAAhyC,KAAA,CAAe0uC,EAAKl4C,WAAYs7C,GAAhC,OAAuD/2C,IAGzD,QAEE,YADA,yDAAgB2zC,EAAMoD,GAAtB,OAA6C/2C,OAztEzB,8BA8tE1B,WACE,OAAQiF,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQ2E,MACX,OAAOpF,KAAK2mC,iBAAgB,GAE9B,QACE,+DApuEoB,0CAwuE1B,SAA6B+H,GAC3B,GAAI1uC,KAAK0jB,aAAa,KAAM,CAC1B,IAAMowB,EAAgB9zC,KAAKi5C,uBAE3B,GAAIj5C,KAAKpB,MAAM6B,EAAQiB,QAAS,CAC9B,IAAMhM,EAAO,EAAH,8DAAsCg5C,GAEhD,OADAh5C,EAAKosC,eAAiBgS,EACfp+C,EAGTsK,KAAK2jB,WAAW3jB,KAAKzL,MAAMxB,MAAO0N,EAAQiB,QAG5C,uEAA0CgtC,KArvElB,iCAwvE1B,SAAoByC,GACdnxC,KAAKzL,MAAMglB,kBAAoBvZ,KAAKpB,MAAM6B,EAAQmB,QAAU5B,KAAK2uC,sBAAwBwC,EAC3FnxC,KAAKuY,OAEL,uDAA0B44B,KA5vEJ,2BAgwE1B,WACE,OAAOnxC,KAAK0jB,aAAa,MAAlB,iCAAA1jB,MAAA,KAAAA,QAjwEiB,6BAowE1B,WACE,OAAOA,KAAKpB,MAAM6B,EAAQsC,OAAS/C,KAAKpB,MAAM6B,EAAQqB,QAA/C,mCAAA9B,MAAA,KAAAA,QArwEiB,+BAwwE1B,WAA2B,6BAANjF,EAAM,yBAANA,EAAM,gBACzB,IAAM1G,GAAI,yEAA8B0G,IAMxC,MAJkB,sBAAd1G,EAAKO,MAAgCP,EAAK+yC,gBAAkB/yC,EAAK81C,MAAMp3C,MAAQsB,EAAK+yC,eAAer0C,OACrGiN,KAAKwX,MAAMnjB,EAAK+yC,eAAer0C,MAAO2pC,GAASwC,2BAG1C7qC,IA/wEiB,8BAkxE1B,SAAiBtC,GACf,OAAIiO,KAAKzL,MAAM4kB,QAAoB,KAATpnB,GAAwB,KAATA,EAGvC,oDAA8BA,GAFvBiO,KAAKsd,SAAS7c,EAAQgD,WAAY,KApxEnB,0BA0xE1B,WACE,GAAIzD,KAAKpB,MAAM6B,EAAQgD,YAAa,CAClC,IAAM1R,EAAOiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMxB,OAEjC,KAAThB,GAAwB,KAATA,IACjBiO,KAAKzL,MAAMif,KAAO,EAClBxT,KAAKoe,gBAAgBrsB,OAhyED,8BAqyE1B,SAAiBg/C,GACf,IAAK,IAAIpgD,EAAI,EAAGA,EAAIogD,EAAShgD,OAAQJ,IAAK,CACxC,IAAM+9C,EAAOqC,EAASpgD,GACtB,GAAK+9C,EAEL,OAAQA,EAAK95C,MACX,IAAK,uBACHm8C,EAASpgD,GAAKqP,KAAK8wC,oBAAoBpC,GACvC,MAEF,IAAK,iBACL,IAAK,kBACE1uC,KAAKzL,MAAM2kB,uBAGdlZ,KAAKwX,MAAMk3B,EAAK37C,MAAO2pC,GAAS6C,+BAFhCwR,EAASpgD,GAAKqP,KAAK8wC,oBAAoBpC,IAS/C,4DAAiChmC,aA3zET,iCA8zE1B,SAAoBrU,GAGlB,OAFAA,EAAKmC,WAAW4wC,eAAiB/yC,EAAK+yC,eACtCpnC,KAAKqnC,iBAAiBhzC,EAAKmC,WAAYnC,EAAK+yC,eAAetgC,IAAKzS,EAAK+yC,eAAez0C,IAAImU,KACjFzS,EAAKmC,aAj0EY,8BAo0E1B,SAAiBmS,GAAQ,WACvB,OAAI3I,KAAKpB,MAAM6B,EAAQqB,OACd6G,EAAOinC,OAAM,SAAAlB,GAAI,OAAI,EAAK3L,aAAa2L,GAAM,MAGtD,oDAA8B/lC,KAz0EN,mCA40E1B,WACE,OAAO3I,KAAKpB,MAAM6B,EAAQqB,QAAnB,yCAAA9B,MAAA,KAAAA,QA70EiB,qCAg1E1B,WACE,OAAO,6DAAmCA,KAAKkkD,oBAj1EvB,6CAo1E1B,SAAgC7vD,GAAM,WACpC,GAAI2L,KAAK0jB,aAAa,KAAM,CAC1B,IAAMowB,EAAgB9zC,KAAKoiD,oBAAmB,kBAAM,EAAKnJ,0BACrDnF,IAAez/C,EAAKytC,eAAiBgS,GAG3C,0EAA6Cz/C,KA11ErB,+CA61E1B,SAAkC6sC,GAChC,IAAMykB,EAAY,EAAH,mEAA2CzkB,GAEpD0kB,EADS5lD,KAAK0xC,6BAA6BxQ,GACvB,GAE1B,OADwB0kB,GAAc5lD,KAAKuxC,YAAYqU,GAC9BD,EAAY,EAAIA,IAl2EjB,mCAq2E1B,WACE,IAAM7X,EAAQ,EAAH,wDACLl5C,EAAOoL,KAAK66C,2BAOlB,OALIjmD,IACFk5C,EAAM1G,eAAiBxyC,EACvBoL,KAAKqnC,iBAAiByG,IAGjBA,IA92EiB,gCAi3E1B,SAAmBkS,GACjB,IAAM6F,EAAsB7lD,KAAKzL,MAAMglB,iBACvCvZ,KAAKzL,MAAMglB,kBAAmB,EAE9B,IACE,OAAOymC,IADT,QAGEhgD,KAAKzL,MAAMglB,iBAAmBssC,KAx3ER,wBA43E1B,SAAWxxD,GACT,IAAMyxD,EAAqB9lD,KAAKzL,MAAMilB,gBACtCxZ,KAAKzL,MAAMilB,kBAAoBnlB,EAAKsoD,SAEpC,IAAI,6BAJc5hD,EAId,iCAJcA,EAId,kBACF,iEAAwB1G,GAAxB,OAAiC0G,IADnC,QAGEiF,KAAKzL,MAAMilB,gBAAkBssC,KAn4EP,wCAu4E1B,SAA2BzxD,GACzB,GAAI2L,KAAKpB,MAAM6B,EAAQ6E,QAErB,OADAjR,EAAKsoD,UAAW,EACT38C,KAAKuhD,WAAWltD,GAAM,GAAM,GAC9B,GAAI2L,KAAKgkB,aAAa,cAC3B,IAAKhkB,KAAKkiD,wBAIR,OAHA7tD,EAAKsoD,UAAW,EAChB38C,KAAKwX,MAAMnjB,EAAKtB,MAAO2pC,GAAS8B,0CAChCx+B,KAAKuY,OACEvY,KAAKgiD,4BAA4B3tD,QAG1C2L,KAAK2jB,WAAW,KAAMljB,EAAQ6E,UAn5ER,yBAu5E1B,WAAqB,6BAANvK,EAAM,yBAANA,EAAM,gBACnB,IAAMmmC,GAAM,mEAAwBnmC,IAEpC,GAAImmC,EAAOyb,SAAU,CACnB,IAAMoJ,EAAU/lD,KAAKgJ,UAAU,YAAck4B,EAAOxxC,MAAM2K,OAAS6mC,EAAO7mC,KAE1E,GAAI0rD,EAAS,CACX,IACEr1D,EACEwwC,EADFxwC,IAEFsP,KAAKwX,MAAM0pB,EAAOnuC,MAAO2pC,GAASC,gCAA8C,eAAbjsC,EAAIkE,MAA0BssC,EAAOqB,SAArC,WAA+DviC,KAAKuI,MAAMpW,MAAMzB,EAAIqC,MAAOrC,EAAIoW,KAA/F,KAAgDpW,EAAI+D,OAI3H,OAAOysC,IAr6EiB,sCAw6E1B,WAEE,OADiBlhC,KAAK2mC,kBACNlyC,OA16EQ,yCA66E1B,WACE,QAASuL,KAAKod,gBAAgB,aAAc,SA96EpB,mBAi7E1B,WAKE,OAJIpd,KAAKgmD,gCACPhmD,KAAKzL,MAAMglB,kBAAmB,GAGhC,4CAt7EwB,2BAy7E1B,WAKE,OAJIvZ,KAAKgmD,gCACPhmD,KAAKzL,MAAMglB,kBAAmB,GAGhC,sDA97EwB,GAAkB+mB,IA+yF5C2lB,YA5IiB,SAAA3lB,GAAU,qIAC3B,WACE,GAAItgC,KAAKpB,MAAM6B,EAAQmD,QAAS,CAC9B,IAAMsiD,EAAmBlmD,KAAKzL,MAAMxB,MAC9BsB,EAAO2L,KAAKqiC,YAGlB,GAFAriC,KAAKikB,IAAIxjB,EAAQmD,QAEb5D,KAAKpB,MAAM6B,EAAQhM,MAAO,CAC5B,IAAMA,EAAOuL,KAAKmmD,oBAAoBnmD,KAAKzL,MAAMxB,OAC3CkD,EAAa+J,KAAKk7C,iBAAiB7mD,EAAMI,GAG/C,GAFAwB,EAAWrB,KAAO,wBAEdoL,KAAKpB,MAAM6B,EAAQiB,QACrB,OAAOzL,EAIX+J,KAAK2jB,WAAWuiC,MAjBO,2BAqB3B,WACE,OAAOlmD,KAAKomD,oBAAL,iCAAApmD,MAAA,MAAAA,KAAkD0I,eAtBhC,GAAkB43B,IA6I7CntC,aAvWkB,SAAAmtC,GAAU,qIAC5B,SAAiBxrC,GACf,GAAIkL,KAAKpB,MAAM6B,EAAQlL,aAAc,CACnC,IAAMlB,EAAO2L,KAAKqiC,YAMlB,OALAriC,KAAKuY,OACLvY,KAAKqmD,cAAc,oCACnBhyD,EAAKI,KAAL,oDAAkC,GAClCuL,KAAKqmD,cAAc,oCACnBrmD,KAAKwkC,OAAO/jC,EAAQlL,aACbyK,KAAKsmD,kBAAkBjyD,EAAMS,MATZ,+BAa5B,SAAkBT,EAAMS,GACtB,IAAMyxD,KAAgBlyD,EAAKS,cAA8B,gBAAdT,EAAKO,MAEhD,OADAP,EAAKS,aAAeA,EACbyxD,EAAalyD,EAAO2L,KAAKwiC,WAAWnuC,EAAM,iBAhBvB,8BAmB5B,SAAiBtC,GACf,OAAa,KAATA,GAA6D,KAA9CiO,KAAKuI,MAAMC,WAAWxI,KAAKzL,MAAMif,IAAM,GACjDxT,KAAKsd,SAAS7c,EAAQlL,YAAa,GAG5C,qDAAiCmT,aAxBP,2BA2B5B,WACE,OAAO1I,KAAKwmD,iBAAiB,eAAtB,iCAAAxmD,MAAA,MAAAA,KAA8D0I,aA5B3C,6BA+B5B,WACE,OAAO1I,KAAKwmD,iBAAiB,eAAtB,mCAAAxmD,MAAA,MAAAA,KAAgE0I,aAhC7C,+BAmC5B,SAAkBwN,QACH7kB,IAAT6kB,GAAoB,sDAA2BxN,aApCzB,8BAuC5B,WACE,OAAO1I,KAAKwmD,iBAAiB,YAAtB,oCAAAxmD,MAAA,MAAAA,KAA8D0I,aAxC3C,uBA2C5B,SAAUgmC,GACU,gBAAdA,EAAK95C,MAAwB,8CAAmB8T,aA5C1B,0BA+C5B,SAAarU,GACX,OAAIA,GAAsB,gBAAdA,EAAKO,MAAgD,eAAtBP,EAAKS,cAC9CT,EAAKS,aAAe,UACbT,GAGT,iDAA6BqU,aArDH,mBAwD5B,SAAMsM,GACJ,iDAAgBA,MAIXhV,KAAKgkB,aAAa,UAInBhP,GACchV,KAAKorC,YAETx2C,OAAS6L,EAAQlL,eApEL,iCA2E5B,SAAoBlB,GACdA,EAAKyL,OAA6B,gBAApBzL,EAAKyL,MAAMlL,MAC7B,wDAA6B8T,aA7EH,sCAgF5B,SAAyBrU,EAAMq6C,GAC7B,GAAkB,gBAAdA,EAAK95C,MAA0B85C,EAAKlrB,OAASkrB,EAAKlrB,MAAM4d,cAC1D,oEAAyC14B,WAG3C,GAAI1I,KAAKpB,MAAM6B,EAAQqB,OAAQ,CAC7B,IAAMxH,EAAOjG,EAIb,OAHAiG,EAAKwF,MAAQE,KAAKsmD,kBAAkB5X,EAAM,cAC1C1uC,KAAKuY,OACLje,EAAKD,KAAO2F,KAAKymD,eAAe,SACzBzmD,KAAKwiC,WAAWloC,EAAM,oBAK/B,OAFA0F,KAAKsnC,YACLjzC,EAAKI,KAAOi6C,EAAKj6C,KACVuL,KAAKsmD,kBAAkBjyD,EAAM,eA/FV,wBAkG5B,WACE,OAAO2L,KAAKwmD,iBAAiB,mBAAtB,8BAAAxmD,MAAA,MAAAA,KAA+D0I,aAnG5C,6BAsG5B,WACE,OAAO1I,KAAKwmD,iBAAiB,eAAtB,mCAAAxmD,MAAA,MAAAA,KAAgE0I,aAvG7C,wBA0G5B,SAAWrU,EAAMH,EAAaq8C,GAC5B,IAAM37C,EAAOV,EAAc,mBAAqB,kBAChD8L,KAAKuY,OACLvY,KAAK0mD,eAAeryD,GACpB,IAAMsyD,EAAY3mD,KAAKzL,MAAMskB,OACvBtjB,EAAcyK,KAAKwmD,iBAAiB,cAE1C,GAAIjxD,EACF,GAAIyK,KAAKpB,MAAM6B,EAAQ8E,WAAavF,KAAKpB,MAAM6B,EAAQlL,cAAgByK,KAAKpB,MAAM6B,EAAQY,QACxFhN,EAAK6E,GAAK3D,MACL,IAAIg7C,IAAer8C,EAGxB,OAFAG,EAAK6E,GAAK,KACV7E,EAAKgG,KAAO2F,KAAKsmD,kBAAkB/wD,EAAa,aACzCyK,KAAKwiC,WAAWnuC,EAAMO,GAE7BoL,KAAK2jB,WAAW,KAAMkc,GAAkBC,0BAG1C9/B,KAAK4mD,aAAavyD,EAAMH,EAAaq8C,GAKvC,OAFAvwC,KAAK6mD,gBAAgBxyD,GACrBA,EAAKgG,KAAO2F,KAAKwmD,iBAAiB,cAAgBxmD,KAAK8mD,iBAAiBzyD,EAAKisC,WAAYqmB,GAClF3mD,KAAKwiC,WAAWnuC,EAAMO,KAjIH,yBAoI5B,SAAYP,GACV,IAAMkB,EAAcyK,KAAKwmD,iBAAiB,cAC1C,IAAKjxD,EAAa,OAAO,EAAP,8CAA4BmT,WAE9C,IAAK1I,KAAKgkB,aAAa,UAAYhkB,KAAKpB,MAAM6B,EAAQmB,OAIpD,OAHAvN,EAAKuU,WAAa,GAClBvU,EAAK7D,OAAS,KACd6D,EAAKq0C,YAAc1oC,KAAKsmD,kBAAkB/wD,EAAa,eAChDyK,KAAKwiC,WAAWnuC,EAAM,0BAG/B2L,KAAKmd,aAAa,qBAClB,IAAM00B,EAAY7xC,KAAKqiC,YAGvB,OAFAwP,EAAUxO,SAAW9tC,EACrBlB,EAAKuU,WAAa,CAAC5I,KAAKwiC,WAAWqP,EAAW,2BAC9C,+CAAyBx9C,KAnJC,sCAsJ5B,WACE,GAAI2L,KAAKpB,MAAM6B,EAAQ3J,UAAW,CAChC,IAAMyhB,EAAOvY,KAAK8b,iBAElB,GAAI9b,KAAK+jB,qBAAqBxL,EAAM,SAC9BvY,KAAKuI,MAAMw+C,WAAWtmD,EAAQlL,YAAYuK,MAAOE,KAAK6b,oBAAoBtD,EAAO,IACnF,OAAO,EAKb,sEAjK0B,8CAoK5B,SAAiClkB,GAC/B,SAAIA,EAAKuU,YAAcvU,EAAKuU,WAAW7X,OAAS,IAIhD,qEAAiD2X,aAzKvB,yBA4K5B,SAAYrU,GACV,IACEuU,EACEvU,EADFuU,WAGgB,MAAdA,GAAsBA,EAAW7X,SACnCsD,EAAKuU,WAAaA,EAAWnR,QAAO,SAAApD,GAAI,MAA2B,gBAAvBA,EAAKgvC,SAASzuC,SAG5D,+CAAkBP,GAClBA,EAAKuU,WAAaA,IAtLQ,yBAyL5B,SAAYvU,GACV,IAAMkB,EAAcyK,KAAKwmD,iBAAiB,cAC1C,IAAKjxD,EAAa,OAAO,EAAP,8CAA4BmT,WAG9C,GAFArU,EAAKuU,WAAa,IAEb5I,KAAKgkB,aAAa,UAAYhkB,KAAKpB,MAAM6B,EAAQmB,OAGpD,OAFAvN,EAAK7D,OAASwP,KAAKsmD,kBAAkB/wD,EAAa,iBAClDyK,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,qBAG/B,IAAMw9C,EAAY7xC,KAAK4jC,gBAAgBruC,GAKvC,GAJAs8C,EAAUE,MAAQx8C,EAClByK,KAAKwiC,WAAWqP,EAAW,0BAC3Bx9C,EAAKuU,WAAWxW,KAAKy/C,GAEjB7xC,KAAKikB,IAAIxjB,EAAQmB,OAAQ,CAC3B,IAAMolD,EAAgBhnD,KAAKinD,8BAA8B5yD,GACpD2yD,GAAehnD,KAAKknD,2BAA2B7yD,GAMtD,OAHA2L,KAAKumC,iBAAiB,QACtBlyC,EAAK7D,OAASwP,KAAKmnD,oBACnBnnD,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,uBAjNH,+BAoN5B,WACE,OAAO2L,KAAKwmD,iBAAiB,kBAAtB,qCAAAxmD,MAAA,MAAAA,KAAqE0I,eArNlD,GAAkB43B,KAyW1C8mB,GAAmB73D,OAAOuB,KAAKsvC,IAE/BinB,GAAiB,CACrB90D,WAAY,SACZ+0D,oBAAgBj2D,EAChBgpB,UAAW,EACXktC,2BAA2B,EAC3Bl1D,4BAA4B,EAC5Bm1D,6BAA6B,EAC7Bl1D,yBAAyB,EACzBm1D,wBAAwB,EACxBv1D,QAAS,GACTkoB,WAAY,KACZgM,QAAQ,EACRhL,QAAQ,EACRssC,gCAAgC,EAChCpzC,eAAe,EACfuI,eAAe,GAYjB,IAAM8qC,GAAgC,SAAhCA,EAAgCtzD,GACpC,MAAqB,4BAAdA,EAAKO,KAAqC+yD,EAA8BtzD,EAAKmC,YAAcnC,GAqY9FuzD,G,wHACJ,SAAWtvB,EAAMuvB,EAAUC,EAAU/iC,GACnC,KAAkB,kBAAduT,EAAK1jC,MAA4BoL,KAAK+nD,eAAezvB,IAASA,EAAKiK,UAAYjK,EAAKsK,WAAxF,CAIA,IAAMlyC,EAAM4nC,EAAK5nC,IAGjB,GAAa,eAFa,eAAbA,EAAIkE,KAAwBlE,EAAI+D,KAAO/D,EAAIhB,OAE9B,CACxB,GAAIm4D,EAEF,YADA7nD,KAAKwX,MAAM9mB,EAAIqC,MAAOsW,EAAc2G,eAIlC83C,EAASE,OACPjjC,GACuC,IAArCA,EAAoBG,cACtBH,EAAoBG,YAAcx0B,EAAIqC,OAGxCiN,KAAKwX,MAAM9mB,EAAIqC,MAAOsW,EAAc6B,iBAIxC48C,EAASE,MAAO,M,kCAIpB,SAAqBtZ,EAAM31B,GACzB,MAAqB,4BAAd21B,EAAK95C,MAAsC85C,EAAK37C,QAAUgmB,I,2BAGnE,WACE/Y,KAAKioD,qBACLjoD,KAAKwb,YACL,IAAMkzB,EAAO1uC,KAAKukC,kBAclB,OAZKvkC,KAAKpB,MAAM6B,EAAQM,MACtBf,KAAK2jB,aAGP3jB,KAAKkoD,4BACLxZ,EAAKxnC,SAAWlH,KAAKzL,MAAM2S,SAC3BwnC,EAAKn6B,OAASvU,KAAKzL,MAAMggB,OAErBvU,KAAKnI,QAAQujB,SACfszB,EAAKtzB,OAASpb,KAAKob,QAGdszB,I,6BAGT,SAAgByZ,EAAYpjC,GAAqB,WAC/C,OAAIojC,EACKnoD,KAAKooD,eAAc,kBAAM,EAAKC,oBAAoBtjC,MAGpD/kB,KAAKsoD,YAAW,kBAAM,EAAKD,oBAAoBtjC,Q,iCAGxD,SAAoBA,GAClB,IAAM8d,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBi7B,EAAO1uC,KAAKovC,iBAAiBrqB,GAEnC,GAAI/kB,KAAKpB,MAAM6B,EAAQmB,OAAQ,CAC7B,IAAMvN,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAGxC,IAFApf,EAAKk0D,YAAc,CAAC7Z,GAEb1uC,KAAKikB,IAAIxjB,EAAQmB,QACtBvN,EAAKk0D,YAAYn2D,KAAK4N,KAAKovC,iBAAiBrqB,IAI9C,OADA/kB,KAAKsxC,iBAAiBj9C,EAAKk0D,aACpBvoD,KAAKwiC,WAAWnuC,EAAM,sBAG/B,OAAOq6C,I,wCAGT,SAA2B3pB,EAAqB6tB,GAAgB,WAC9D,OAAO5yC,KAAKooD,eAAc,kBAAM,EAAKhZ,iBAAiBrqB,EAAqB6tB,Q,qCAG7E,SAAwB7tB,EAAqB6tB,GAAgB,WAC3D,OAAO5yC,KAAKsoD,YAAW,kBAAM,EAAKlZ,iBAAiBrqB,EAAqB6tB,Q,wCAG1E,SAA2B7tB,EAAqByjC,GAC9C,IAAIC,EAEJ1jC,EAAoBI,mBAA4F,OAAtEsjC,EAAkC,MAAfD,OAAsB,EAASA,EAAYh1C,KAAei1C,EAAmBzoD,KAAKzL,MAAMxB,Q,8BAGvJ,SAAiBgyB,EAAqB6tB,GACpC,IAeI8V,EAfE7lB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAE5B,GAAIzT,KAAKgkB,aAAa,UAChBhkB,KAAK6lB,UAAU8iC,SAAU,CAC3B,IAAI/W,EAAO5xC,KAAK4oD,aAMhB,OAJIhW,IACFhB,EAAOgB,EAAel9C,KAAKsK,KAAM4xC,EAAM/O,EAAUpvB,IAG5Cm+B,EAMP7sB,EACF2jC,GAAsB,GAEtB3jC,EAAsB,IAAImB,GAC1BwiC,GAAsB,IAGpB1oD,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAKpB,MAAM6B,EAAQhM,SACnDuL,KAAKzL,MAAMwkB,iBAAmB/Y,KAAKzL,MAAMxB,OAG3C,IAAI6+C,EAAO5xC,KAAK6oD,sBAAsB9jC,GAMtC,GAJI6tB,IACFhB,EAAOgB,EAAel9C,KAAKsK,KAAM4xC,EAAM/O,EAAUpvB,IAG/CzT,KAAKzL,MAAMK,KAAKgL,SAAU,CAC5B,IAAMvL,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAClCmqC,EAAW59C,KAAKzL,MAAM7E,MAI5B,GAHA2E,EAAKupD,SAAWA,EAC+B,qBAAdhM,EAAKh9C,MAAiD,OAAlBg9C,EAAKgM,UAA8E,SAAzD59C,KAAKod,gBAAgB,mBAAoB,YAGtI,MAAMpd,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc2F,kBAAmB4uC,GAiBtE,OAdI59C,KAAKpB,MAAM6B,EAAQkC,KACrBtO,EAAKu9C,KAAO5xC,KAAKijC,aAAa2O,GAAM,GACpC7sB,EAAoBG,aAAe,GAEnC7wB,EAAKu9C,KAAOA,EAGV7sB,EAAoBE,iBAAmB5wB,EAAKu9C,KAAK7+C,QACnDgyB,EAAoBE,iBAAmB,GAGzCjlB,KAAKgyC,UAAUJ,EAAM,yBACrB5xC,KAAKuY,OACLlkB,EAAK81C,MAAQnqC,KAAKovC,mBACXpvC,KAAKwiC,WAAWnuC,EAAM,wBAK/B,OAJWq0D,GACT1oD,KAAK8oD,sBAAsB/jC,GAAqB,GAG3C6sB,I,mCAGT,SAAsB7sB,GACpB,IAAM8d,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBsF,EAAmB/Y,KAAKzL,MAAMwkB,iBAC9B21B,EAAO1uC,KAAK+oD,aAAahkC,GAE/B,OAAI/kB,KAAKgpD,qBAAqBta,EAAM31B,GAC3B21B,EAGF1uC,KAAKipD,iBAAiBva,EAAM7L,EAAUpvB,EAAUsR,K,8BAGzD,SAAiB2pB,EAAM7L,EAAUpvB,EAAUsR,GACzC,GAAI/kB,KAAKikB,IAAIxjB,EAAQwB,UAAW,CAC9B,IAAM5N,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAKxC,OAJApf,EAAKK,KAAOg6C,EACZr6C,EAAK06C,WAAa/uC,KAAK2kC,0BACvB3kC,KAAKwkC,OAAO/jC,EAAQqB,OACpBzN,EAAK86C,UAAYnvC,KAAKovC,mBACfpvC,KAAKwiC,WAAWnuC,EAAM,yBAG/B,OAAOq6C,I,sCAGT,SAAyB3pB,GACvB,OAAO/kB,KAAKpB,MAAM6B,EAAQK,aAAed,KAAKkpD,mBAAqBlpD,KAAKk9C,gBAAgBn4B,K,0BAG1F,SAAaA,GACX,IAAM8d,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBsF,EAAmB/Y,KAAKzL,MAAMwkB,iBAC9B21B,EAAO1uC,KAAKmpD,yBAAyBpkC,GAE3C,OAAI/kB,KAAKgpD,qBAAqBta,EAAM31B,GAC3B21B,EAGF1uC,KAAK6jD,YAAYnV,EAAM7L,EAAUpvB,GAAW,K,yBAGrD,SAAYm+B,EAAM6R,EAAcC,EAAcC,GAC5C,GAAI3jD,KAAKolB,cAAcwsB,GAAO,CAC5B,IAAMliD,EAAQsQ,KAAKopD,iBAAiBxX,GAElC7+C,EACE6+C,EADF7+C,OAGE4wD,GAAWljD,EAAQoF,IAAI1F,QAAUH,KAAK6lB,UAAUwjC,QAAUrpD,KAAKpB,MAAM6B,EAAQoF,OAC/E7F,KAAKwX,MAAMzkB,EAAOsW,EAAcsG,oBAAqBjgB,GAGvDsQ,KAAKmiB,WAAWmnC,eAAe55D,EAAOqD,GAGxC,IAAIw2D,EAAOvpD,KAAKzL,MAAMK,KAAKuL,MAE3B,GAAY,MAARopD,IAAiBvpD,KAAK6lB,UAAUwjC,QAAUrpD,KAAKpB,MAAM6B,EAAQoF,OAC3D0jD,EAAO5F,EAAS,CAClB,IAAMlgC,EAAKzjB,KAAKzL,MAAMK,KAEtB,GAAI6uB,IAAOhjB,EAAQwC,SAAU,CAG3B,GAFAjD,KAAKmd,aAAa,oBAEdnd,KAAKzL,MAAMslB,2BACb,OAAO+3B,EAGT5xC,KAAKwpD,6BAA6B5X,EAAM6R,GAG1C,IAAMpvD,EAAO2L,KAAK+mB,YAAY08B,EAAcC,GAC5CrvD,EAAKu9C,KAAOA,EACZv9C,EAAKupD,SAAW59C,KAAKzL,MAAM7E,MAC3B,IAAM+5D,EAAUhmC,IAAOhjB,EAAQ0C,WAAasgB,IAAOhjB,EAAQ2C,WACrDsmD,EAAWjmC,IAAOhjB,EAAQyC,kBAQhC,GANIwmD,IACFH,EAAO9oD,EAAQ2C,WAAWjD,OAG5BH,KAAKuY,OAEDkL,IAAOhjB,EAAQwC,UAAqE,YAAzDjD,KAAKod,gBAAgB,mBAAoB,aAClEpd,KAAKpB,MAAM6B,EAAQhM,OAA8B,UAArBuL,KAAKzL,MAAM7E,OAAqBsQ,KAAK6lB,UAAU8jC,SAC7E,MAAM3pD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc6H,kCAIrD7c,EAAK81C,MAAQnqC,KAAK4pD,qBAAqBnmC,EAAI8lC,GAC3CvpD,KAAKwiC,WAAWnuC,EAAMo1D,GAAWC,EAAW,oBAAsB,oBAClE,IAAMG,EAAS7pD,KAAKzL,MAAMK,KAE1B,GAAI80D,IAAaG,IAAWppD,EAAQ0C,WAAa0mD,IAAWppD,EAAQ2C,aAAeqmD,GAAWI,IAAWppD,EAAQyC,kBAC/G,MAAMlD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcyE,2BAGnD,OAAO9N,KAAK6jD,YAAYxvD,EAAMovD,EAAcC,EAAcC,GAI9D,OAAO/R,I,kCAGT,SAAqBnuB,EAAI8lC,GAAM,WACvB1mB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAE5B,OAAQgQ,GACN,KAAKhjB,EAAQwC,SACX,OAAQjD,KAAKod,gBAAgB,mBAAoB,aAC/C,IAAK,OACH,OAAOpd,KAAK8pD,yBAAwB,WAClC,IAAMC,EAAW,EAAKC,kBAAkBvmC,EAAI8lC,GAE5C,OADA,EAAKU,6BAA6BpnB,GAC3BknB,KAGX,IAAK,QACH,OAAO/pD,KAAK8pD,yBAAwB,WAClC,IAAMI,EAAY,EAAKF,kBAAkBvmC,EAAI8lC,GAC7C,OAAO,EAAKY,8BAA8BD,EAAWrnB,EAAUpvB,MAGnE,IAAK,SACH,OAAOzT,KAAKoqD,gCAA+B,WACzC,OAAO,EAAKC,wBAAwBd,MAI5C,QACE,OAAOvpD,KAAKsqD,yBAAyB7mC,EAAI8lC,M,sCAI/C,SAAyB9lC,EAAI8lC,GAC3B,IAAM1mB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAC5B,OAAOzT,KAAK6jD,YAAY7jD,KAAKmpD,2BAA4BtmB,EAAUpvB,EAAUgQ,EAAGxjB,iBAAmBspD,EAAO,EAAIA,K,+BAGhH,SAAkB9lC,EAAI8lC,GAIpB,GAHiCvpD,KAAK6lB,UAAU8iC,UACU3oD,KAAKgkB,aAAa,SAG1E,MAAMhkB,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc2F,kBAAmBhP,KAAKzL,MAAM7E,OAE/E,OAAOsQ,KAAKsqD,yBAAyB7mC,EAAI8lC,K,wCAI7C,SAA2Bl1D,GACrB2L,KAAKpB,MAAM6B,EAAQsD,WACrB/D,KAAKwX,MAAMnjB,EAAKqwC,SAAS3xC,MAAOsW,EAAcyI,sC,6BAIlD,SAAgBiT,EAAqBwlC,GACnC,IAAM1nB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtB+2C,EAAUxqD,KAAKgkB,aAAa,SAElC,GAAIwmC,GAAWxqD,KAAKyqD,iBAAkB,CACpCzqD,KAAKuY,OACL,IAAMm2B,EAAO1uC,KAAK0qD,WAAW7nB,EAAUpvB,GAEvC,OADK82C,GAAUvqD,KAAK2qD,2BAA2Bjc,GACxCA,EAGT,IAAMkc,EAAS5qD,KAAKpB,MAAM6B,EAAQqC,QAC5BzO,EAAO2L,KAAKqiC,YAElB,GAAIriC,KAAKzL,MAAMK,KAAKqK,OAAQ,CAC1B5K,EAAKupD,SAAW59C,KAAKzL,MAAM7E,MAC3B2E,EAAK4K,QAAS,EAEVe,KAAKpB,MAAM6B,EAAQoE,SACrB7E,KAAKmd,aAAa,oBAGpB,IAAM0tC,EAAW7qD,KAAKpB,MAAM6B,EAAQwF,SAKpC,GAJAjG,KAAKuY,OACLlkB,EAAKqwC,SAAW1kC,KAAKk9C,gBAAgB,MAAM,GAC3Cl9C,KAAK8oD,sBAAsB/jC,GAAqB,GAE5C/kB,KAAKzL,MAAMskB,QAAUgyC,EAAU,CACjC,IAAMlvD,EAAMtH,EAAKqwC,SAEA,eAAb/oC,EAAI/G,KACNoL,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAc+G,cAC5BpQ,KAAK8qD,yBAAyBnvD,IACvCqE,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAcwB,oBAIzC,IAAK+/C,EAEH,OADKL,GAAUvqD,KAAK2qD,2BAA2Bt2D,GACxC2L,KAAKwiC,WAAWnuC,EAAM,mBAIjC,IAAMq6C,EAAO1uC,KAAK+qD,YAAY12D,EAAMu2D,EAAQ7lC,GAE5C,GAAIylC,KACiBxqD,KAAKgJ,UAAU,eAAiBhJ,KAAKzL,MAAMK,KAAK8K,WAAaM,KAAKzL,MAAMK,KAAK8K,aAAeM,KAAKpB,MAAM6B,EAAQmD,WAE/G5D,KAAKgrD,oBAEtB,OADAhrD,KAAKirD,eAAepoB,EAAUx5B,EAAcQ,wBACrC7J,KAAK0qD,WAAW7nB,EAAUpvB,GAIrC,OAAOi7B,I,yBAGT,SAAYr6C,EAAMu2D,EAAQ7lC,GACxB,GAAI6lC,EAEF,OADA5qD,KAAKgyC,UAAU39C,EAAKqwC,SAAU,oBACvB1kC,KAAKwiC,WAAWnuC,EAAM,oBAG/B,IAAMwuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACxBi7B,EAAO1uC,KAAKkrD,oBAAoBnmC,GACpC,GAAI/kB,KAAK8oD,sBAAsB/jC,GAAqB,GAAQ,OAAO2pB,EAEnE,KAAO1uC,KAAKzL,MAAMK,KAAKsL,UAAYF,KAAKokB,sBAAsB,CAC5D,IAAM/vB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxCpf,EAAKupD,SAAW59C,KAAKzL,MAAM7E,MAC3B2E,EAAK4K,QAAS,EACd5K,EAAKqwC,SAAWgK,EAChB1uC,KAAKgyC,UAAUtD,EAAM,qBACrB1uC,KAAKuY,OACLm2B,EAAO1uC,KAAKwiC,WAAWnuC,EAAM,oBAG/B,OAAOq6C,I,iCAGT,SAAoB3pB,GAClB,IAAM8d,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SACtBsF,EAAmB/Y,KAAKzL,MAAMwkB,iBAC9B21B,EAAO1uC,KAAKskC,cAAcvf,GAEhC,OAAI/kB,KAAKgpD,qBAAqBta,EAAM31B,GAC3B21B,EAGF1uC,KAAKmrD,gBAAgBzc,EAAM7L,EAAUpvB,K,6BAG9C,SAAgB6vB,EAAMT,EAAUpvB,EAAU8vB,GACxC,IAAMhvC,EAAQ,CACZivC,qBAAqB,EACrB4nB,gBAAiBprD,KAAKqjD,qBAAqB/f,GAC3CI,MAAM,GAGR,GACEJ,EAAOtjC,KAAKqrD,eAAe/nB,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAC9DA,EAAM62D,iBAAkB,SAChB72D,EAAMmvC,MAEhB,OAAOJ,I,4BAGT,SAAeA,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAChD,IAAKgvC,GAAWvjC,KAAKikB,IAAIxjB,EAAQsB,aAC/B,OAAO/B,KAAKsrD,UAAUhoB,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GACpD,GAAIyL,KAAKpB,MAAM6B,EAAQ6B,WAC5B,OAAOtC,KAAKwjD,8BAA8BlgB,EAAMT,EAAUpvB,EAAUlf,GAGtE,IAAI2uC,GAAW,EAEf,GAAIljC,KAAKpB,MAAM6B,EAAQyB,aAAc,CACnC,GAAIqhC,GAAwC,KAA7BvjC,KAAK2uC,oBAElB,OADAp6C,EAAMmvC,MAAO,EACNJ,EAGT/uC,EAAMivC,oBAAsBN,GAAW,EACvCljC,KAAKuY,OAGP,IAAKgrB,GAAWvjC,KAAKpB,MAAM6B,EAAQiB,QACjC,OAAO1B,KAAKurD,gCAAgCjoB,EAAMT,EAAUpvB,EAAUlf,EAAO2uC,GAE7E,IAAMX,EAAWviC,KAAKikB,IAAIxjB,EAAQO,UAElC,OAAIuhC,GAAYW,GAAYljC,KAAKikB,IAAIxjB,EAAQuB,KACpChC,KAAKwrD,YAAYloB,EAAMT,EAAUpvB,EAAUlf,EAAOguC,EAAUW,IAEnE3uC,EAAMmvC,MAAO,EACNJ,K,yBAKb,SAAYA,EAAMT,EAAUpvB,EAAUlf,EAAOguC,EAAUW,GACrD,IAAM7uC,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxCpf,EAAKgnC,OAASiI,EACdjvC,EAAKkuC,SAAWA,EAChB,IAAMzhC,GAAeyhC,GAAYviC,KAAKpB,MAAM6B,EAAQK,cAAgBd,KAAKzL,MAAM7E,MACzE21B,EAAWkd,EAAWviC,KAAKukC,kBAAoBzjC,EAAcd,KAAKkpD,mBAAqBlpD,KAAK2mC,iBAAgB,GAgBlH,OAdoB,IAAhB7lC,IACuB,UAArBzM,EAAKgnC,OAAOzmC,MACdoL,KAAKwX,MAAMqrB,EAAUx5B,EAAcuH,mBAGrC5Q,KAAKmiB,WAAWmnC,eAAexoD,EAAaukB,EAAStyB,QAGvDsB,EAAKgxB,SAAWA,EAEZkd,GACFviC,KAAKwkC,OAAO/jC,EAAQU,UAGlB5M,EAAMivC,qBACRnvC,EAAK6uC,SAAWA,EACTljC,KAAKwiC,WAAWnuC,EAAM,6BAEtB2L,KAAKwiC,WAAWnuC,EAAM,sB,uBAIjC,SAAUivC,EAAMT,EAAUpvB,EAAU8vB,EAAShvC,GAC3C,IAAMF,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAIxC,OAHApf,EAAKgnC,OAASiI,EACdjvC,EAAKwF,OAASmG,KAAKyrD,kBACnBl3D,EAAMmvC,MAAO,EACN1jC,KAAKmrD,gBAAgBnrD,KAAKwiC,WAAWnuC,EAAM,kBAAmBwuC,EAAUpvB,EAAU8vB,K,6CAG3F,SAAgCD,EAAMT,EAAUpvB,EAAUlf,EAAO2uC,GAC/D,IAAMif,EAA4BniD,KAAKzL,MAAM2kB,uBACzC6L,EAAsB,KAC1B/kB,KAAKzL,MAAM2kB,wBAAyB,EACpClZ,KAAKuY,OACL,IAAIlkB,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAmCtC,OAlCApf,EAAKwF,OAASypC,EAEV/uC,EAAM62D,kBACRprD,KAAK+lB,gBAAgBE,MAr6PlB,IAAIzD,GAlIgC,IAwiQvCuC,EAAsB,IAAImB,IAGxB3xB,EAAMivC,sBACRnvC,EAAK6uC,SAAWA,GAIhB7uC,EAAKqU,UADHw6B,EACeljC,KAAK0zC,6BAA6BjzC,EAAQkB,QAE1C3B,KAAK0zC,6BAA6BjzC,EAAQkB,OAAsB,WAAd2hC,EAAK1uC,KAAiC,UAAd0uC,EAAK1uC,KAAkBP,EAAM0wB,GAG1H/kB,KAAK+zC,qBAAqB1/C,EAAME,EAAMivC,qBAElCjvC,EAAM62D,iBAAmBprD,KAAK0rD,0BAA4BxoB,GAC5D3uC,EAAMmvC,MAAO,EACb1jC,KAAK+lB,gBAAgB4lC,oBACrB3rD,KAAK+lB,gBAAgBwiB,OACrBl0C,EAAO2L,KAAK4rD,kCAAkC5rD,KAAK+mB,YAAY8b,EAAUpvB,GAAWpf,KAEhFE,EAAM62D,kBACRprD,KAAK8oD,sBAAsB/jC,GAAqB,GAChD/kB,KAAK+lB,gBAAgBwiB,QAGvBvoC,KAAK6rD,sBAAsBx3D,IAG7B2L,KAAKzL,MAAM2kB,uBAAyBipC,EAC7B9tD,I,mCAGT,SAAsBA,EAAM48C,GAC1BjxC,KAAK8rD,qBAAqBz3D,EAAKqU,UAAWuoC,K,2CAG5C,SAA8B3N,EAAMT,EAAUpvB,EAAUlf,GACtD,IAAMF,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAQxC,OAPApf,EAAK03D,IAAMzoB,EACXjvC,EAAK23D,MAAQhsD,KAAK48C,eAAc,GAE5BroD,EAAMivC,qBACRxjC,KAAKwX,MAAMqrB,EAAUx5B,EAAcsF,4BAG9B3O,KAAKwiC,WAAWnuC,EAAM,8B,kCAG/B,SAAqBivC,GACnB,MAAqB,eAAdA,EAAK1uC,MAAuC,UAAd0uC,EAAK7uC,MAAoBuL,KAAKzL,MAAMsf,aAAeyvB,EAAKx8B,MAAQ9G,KAAKokB,sBAAwBkf,EAAKx8B,IAAMw8B,EAAKvwC,QAAU,GAAKuwC,EAAKvwC,QAAUiN,KAAKzL,MAAMwkB,mB,kCAG7L,SAAqB1kB,EAAM6uC,GACzB,GAAyB,WAArB7uC,EAAKwF,OAAOjF,KASd,GAR8B,IAA1BP,EAAKqU,UAAU3X,SAEViP,KAAKgJ,UAAU,qBAClBhJ,KAAKmd,aAAa,qBAKM,IAA1B9oB,EAAKqU,UAAU3X,QAAgBsD,EAAKqU,UAAU3X,OAAS,EACzDiP,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAc4C,gBAAiBjM,KAAKgJ,UAAU,qBAAuBhJ,KAAKgJ,UAAU,oBAAsB,uBAAyB,oBACrJ,WACa3U,EAAKqU,WADlB,IACL,2BAAkC,KAAvB/M,EAAuB,QACf,kBAAbA,EAAI/G,MACNoL,KAAKwX,MAAM7b,EAAI5I,MAAOsW,EAAc8C,2BAHnC,+BAST,OAAOnM,KAAKwiC,WAAWnuC,EAAM6uC,EAAW,yBAA2B,oB,0CAGrE,SAA6BiO,EAAO8a,EAAeC,EAAkBC,EAAcpnC,GACjF,IAAMqnC,EAAO,GACTvf,GAAQ,EACNwf,EAAgCrsD,KAAKzL,MAAMslB,2BAGjD,IAFA7Z,KAAKzL,MAAMslB,4BAA6B,GAEhC7Z,KAAKikB,IAAIktB,IAAQ,CACvB,GAAItE,EACFA,GAAQ,OAIR,GAFA7sC,KAAKwkC,OAAO/jC,EAAQmB,OAEhB5B,KAAKpB,MAAMuyC,GAAQ,EACjB8a,GAAkBjsD,KAAKgJ,UAAU,qBAAwBhJ,KAAKgJ,UAAU,qBAC1EhJ,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAcrK,EAAc2C,iCAGhDmgD,GACFnsD,KAAKqhC,SAAS8qB,EAAc,gBAAiBnsD,KAAKzL,MAAMmf,cAG1D1T,KAAKuY,OACL,MAIJ6zC,EAAKh6D,KAAK4N,KAAKssD,mBAAkB,EAAOvnC,EAAqBmnC,IAI/D,OADAlsD,KAAKzL,MAAMslB,2BAA6BwyC,EACjCD,I,mCAGT,WACE,OAAOpsD,KAAKpB,MAAM6B,EAAQ0B,SAAWnC,KAAKokB,uB,+CAG5C,SAAkC/vB,EAAMqB,GACtC,IAAI62D,EAOJ,OALAvsD,KAAKwsD,kCAAkC92D,GACvCsK,KAAKwkC,OAAO/jC,EAAQ0B,OACpBnC,KAAKq0C,qBAAqBhgD,EAAMqB,EAAKgT,WAAW,EAAoC,OAA7B6jD,EAAc72D,EAAK8tB,YAAiB,EAAS+oC,EAAYxc,eAChH1oC,EAAiBhT,EAAMqB,EAAK4R,eAC5BD,EAAiBhT,EAAMqB,EAAKmE,OAAOsN,kBAC5B9S,I,6BAGT,WACE,IAAMwuC,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAC5B,OAAOzT,KAAKmrD,gBAAgBnrD,KAAKskC,gBAAiBzB,EAAUpvB,GAAU,K,2BAGxE,SAAcsR,GACZ,IAAI1wB,EAEJ,OAAQ2L,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQ4E,OACX,OAAOrF,KAAKysD,aAEd,KAAKhsD,EAAQgF,QAIX,OAHApR,EAAO2L,KAAKqiC,YACZriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQuB,KACdhC,KAAK0sD,wBAAwBr4D,IAGjC2L,KAAKpB,MAAM6B,EAAQiB,SACtB1B,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAcrK,EAAc6I,mBAG7ClS,KAAKwiC,WAAWnuC,EAAM,WAE/B,KAAKoM,EAAQ2E,MAGX,OAFA/Q,EAAO2L,KAAKqiC,YACZriC,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,kBAE/B,KAAKoM,EAAQhM,KAET,GAAIuL,KAAKgkB,aAAa,WAA0C,MAA7BhkB,KAAK2uC,sBAAgC3uC,KAAKkiD,wBAC3E,OAAOliD,KAAK2sD,wBAGd,IAAMlZ,EAAazzC,KAAKzL,MAAMwkB,mBAAqB/Y,KAAKzL,MAAMxB,MACxDknB,EAAcja,KAAKzL,MAAM0lB,YACzB/gB,EAAK8G,KAAK2mC,kBAEhB,IAAK1sB,GAA2B,UAAZ/gB,EAAGzE,OAAqBuL,KAAKokB,qBAAsB,CACrE,GAAIpkB,KAAKpB,MAAM6B,EAAQgE,WAGrB,OAFAzE,KAAKwsD,kCAAkCtzD,GACvC8G,KAAKuY,OACEvY,KAAK4sD,cAAc5sD,KAAK4jC,gBAAgB1qC,QAAK7H,GAAW,GAC1D,GAAI2O,KAAKpB,MAAM6B,EAAQhM,MAC5B,OAAiC,KAA7BuL,KAAK2uC,oBACA3uC,KAAK6sD,6BAA6B7sD,KAAK4jC,gBAAgB1qC,IAEvDA,EAEJ,GAAI8G,KAAKpB,MAAM6B,EAAQ4D,KAE5B,OADArE,KAAKwsD,kCAAkCtzD,GAChC8G,KAAK8sD,QAAQ9sD,KAAK4jC,gBAAgB1qC,IAAK,GAIlD,OAAIu6C,GAAczzC,KAAKpB,MAAM6B,EAAQ0B,SAAWnC,KAAKokB,sBACnDpkB,KAAKuY,OACEvY,KAAKq0C,qBAAqBr0C,KAAK4jC,gBAAgB1qC,GAAK,CAACA,IAAK,IAG5DA,EAGX,KAAKuH,EAAQ4D,IAET,OAAOrE,KAAK8sD,QAAQ9sD,KAAKqiC,aAAa,GAG1C,KAAK5hC,EAAQqD,MACb,KAAKrD,EAAQmC,YAGT,OADA5C,KAAK+sD,aACE/sD,KAAKgtD,mBAAmBhtD,KAAKzL,MAAM7E,OAG9C,KAAK+Q,EAAQC,IACX,OAAOV,KAAKm1C,oBAAoBn1C,KAAKzL,MAAM7E,OAE7C,KAAK+Q,EAAQE,OACX,OAAOX,KAAKitD,mBAAmBjtD,KAAKzL,MAAM7E,OAE5C,KAAK+Q,EAAQG,QACX,OAAOZ,KAAKktD,oBAAoBltD,KAAKzL,MAAM7E,OAE7C,KAAK+Q,EAAQzD,OACX,OAAOgD,KAAKo1C,mBAAmBp1C,KAAKzL,MAAM7E,OAE5C,KAAK+Q,EAAQiF,MACX,OAAO1F,KAAKmtD,mBAEd,KAAK1sD,EAAQkF,MACX,OAAO3F,KAAKq1C,qBAAoB,GAElC,KAAK50C,EAAQmF,OACX,OAAO5F,KAAKq1C,qBAAoB,GAElC,KAAK50C,EAAQiB,OAET,IAAM+xC,EAAazzC,KAAKzL,MAAMwkB,mBAAqB/Y,KAAKzL,MAAMxB,MAC9D,OAAOiN,KAAKotD,mCAAmC3Z,GAGnD,KAAKhzC,EAAQS,YACb,KAAKT,EAAQQ,aAET,OAAOjB,KAAKqtD,eAAertD,KAAKzL,MAAMK,OAAS6L,EAAQS,YAAcT,EAAQW,YAAcX,EAAQU,UAAU,GAAO,EAAM4jB,GAG9H,KAAKtkB,EAAQO,SAET,OAAOhB,KAAKqtD,eAAe5sD,EAAQU,UAAU,GAAM,EAAO4jB,GAG9D,KAAKtkB,EAAQa,UACb,KAAKb,EAAQc,WAET,OAAOvB,KAAKstD,gBAAgBttD,KAAKzL,MAAMK,OAAS6L,EAAQa,UAAYb,EAAQgB,UAAYhB,EAAQe,QAAQ,GAAO,EAAMujB,GAGzH,KAAKtkB,EAAQY,OAET,OAAOrB,KAAKstD,gBAAgB7sD,EAAQe,QAAQ,GAAO,EAAOujB,GAG9D,KAAKtkB,EAAQgE,UACX,OAAOzE,KAAKutD,8BAEd,KAAK9sD,EAAQ+B,GACXxC,KAAKwtD,kBAEP,KAAK/sD,EAAQ6E,OAGX,OAFAjR,EAAO2L,KAAKqiC,YACZriC,KAAK0mD,eAAeryD,GACb2L,KAAKuhD,WAAWltD,GAAM,GAE/B,KAAKoM,EAAQ0E,KACX,OAAOnF,KAAKytD,sBAEd,KAAKhtD,EAAQ6B,UACX,OAAOtC,KAAK48C,eAAc,GAE5B,KAAKn8C,EAAQsB,YAET1N,EAAO2L,KAAKqiC,YACZriC,KAAKuY,OACLlkB,EAAKgnC,OAAS,KACd,IAAMxhC,EAASxF,EAAKwF,OAASmG,KAAKyrD,kBAElC,GAAoB,qBAAhB5xD,EAAOjF,KACT,OAAOoL,KAAKwiC,WAAWnuC,EAAM,kBAE7B,MAAM2L,KAAKwX,MAAM3d,EAAO9G,MAAOsW,EAAc0I,iBAInD,KAAKtR,EAAQK,YAGT,OADAd,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcsG,oBAAqB3P,KAAKzL,MAAM7E,OACpEsQ,KAAKkpD,mBAGhB,KAAKzoD,EAAQoC,aACX,GAA6D,SAAzD7C,KAAKod,gBAAgB,mBAAoB,aAAqF,MAA3Dpd,KAAKod,gBAAgB,mBAAoB,cAO9G,MAAMpd,KAAK2jB,aANX3jB,KAAKzL,MAAM7E,MAAQ,IACnBsQ,KAAKzL,MAAMK,KAAO6L,EAAQmD,OAC1B5D,KAAKzL,MAAMif,MACXxT,KAAKzL,MAAMuS,MACX9G,KAAKzL,MAAMqf,OAAOhN,SAKtB,KAAKnG,EAAQmD,OACb,KAAKnD,EAAQgC,KAET,IAAMirD,EAAe1tD,KAAKod,gBAAgB,mBAAoB,YAE9D,GAAIswC,EAAc,CAChBr5D,EAAO2L,KAAKqiC,YACZ,IAAMtvC,EAAQiN,KAAKzL,MAAMxB,MACnB46D,EAAY3tD,KAAKzL,MAAMK,KAE7B,OADAoL,KAAKuY,OACEvY,KAAK4tD,qBAAqBv5D,EAAMtB,EAAO26D,EAAcC,GAIlE,KAAKltD,EAAQgD,WAET,GAAyB,MAArBzD,KAAKzL,MAAM7E,MAAe,CAC5B,IAAMm+D,EAAc7tD,KAAKuI,MAAMulD,YAAY9tD,KAAK8b,mBAE5CrG,EAAkBo4C,IAAgC,KAAhBA,IACpC7tD,KAAK+tD,gBAAgB,CAAC,MAAO,OAAQ,eAK7C,QACE,MAAM/tD,KAAK2jB,gB,kCAIjB,SAAqBtvB,EAAMtB,EAAO26D,EAAcC,GAE5C,IAAIK,EADN,GAAIhuD,KAAKiuD,gCAAgCP,EAAc36D,EAAO46D,GAkB5D,OAdEK,EADmB,UAAjBN,EACS,gCAEA,iBAGR1tD,KAAKkuD,4CACa,UAAjBR,EACF1tD,KAAKwX,MAAMzkB,EAAOsW,EAAcoG,wBAEhCzP,KAAKwX,MAAMzkB,EAAOsW,EAAc6F,mBAIpClP,KAAKmuD,yBACEnuD,KAAKwiC,WAAWnuC,EAAM25D,GAE7B,MAAMhuD,KAAKwX,MAAMzkB,EAAOsW,EAAc8F,2BAA4Bw+C,EAAU7tD,S,6CAIhF,SAAgC4tD,EAAc36D,EAAO46D,GACnD,OAAQD,GACN,IAAK,OAED,IAAMU,EAAmBpuD,KAAKod,gBAAgB,mBAAoB,cAClE,OAAOuwC,EAAU7tD,QAAUsuD,EAG/B,IAAK,QACH,OAAOT,IAAcltD,EAAQgC,KAE/B,QACE,MAAMzC,KAAKwX,MAAMzkB,EAAOsW,EAAc4F,+B,0CAI5C,SAA6B5a,GAC3B2L,KAAK6lB,UAAUI,MAAM7C,IAAc,EAAMpjB,KAAK6lB,UAAU8iC,WACxD,IAAMhgD,EAAS,CAAC3I,KAAK2mC,mBASrB,OARA3mC,KAAK6lB,UAAU0iB,OAEXvoC,KAAKmkB,yBACPnkB,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcmE,2BAG3CxN,KAAKwkC,OAAO/jC,EAAQ0B,OACpBnC,KAAKq0C,qBAAqBhgD,EAAMsU,GAAQ,GACjCtU,I,qBAGT,SAAQA,EAAMgvB,GACZrjB,KAAKmd,aAAa,iBAEdkG,GACFrjB,KAAKmd,aAAa,sBAGpB9oB,EAAKi/C,MAAQjwB,EACbrjB,KAAKuY,OACL,IAAM+M,EAAYtlB,KAAKzL,MAAMulB,OAY7B,OAXA9Z,KAAKzL,MAAMulB,OAAS,GAEhBuJ,GACFrjB,KAAK6lB,UAAUI,MA7yQD,GA8yQd5xB,EAAKgG,KAAO2F,KAAKquD,aACjBruD,KAAK6lB,UAAU0iB,QAEfl0C,EAAKgG,KAAO2F,KAAKquD,aAGnBruD,KAAKzL,MAAMulB,OAASwL,EACbtlB,KAAKwiC,WAAWnuC,EAAM,kB,wBAG/B,WACE,IAAMA,EAAO2L,KAAKqiC,YAalB,OAZAriC,KAAKuY,QAEDvY,KAAKpB,MAAM6B,EAAQiB,SAAY1B,KAAK7G,MAAM+oC,kBAAqBliC,KAAKnI,QAAQvF,wBAEpE0N,KAAK7G,MAAMm1D,YAAetuD,KAAKnI,QAAQvF,yBACjD0N,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAcuI,iBAFrC5R,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAcsH,iBAKlC3Q,KAAKpB,MAAM6B,EAAQiB,SAAY1B,KAAKpB,MAAM6B,EAAQO,WAAchB,KAAKpB,MAAM6B,EAAQuB,MACtFhC,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAciJ,kBAGhCtS,KAAKwiC,WAAWnuC,EAAM,W,mCAG/B,SAAsBs9C,GAGpB,OAFkB3xC,KAAKpB,MAAM6B,EAAQK,cAG9B6wC,GACH3xC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAQ,EAAGsW,EAAcqI,wBAG1C1R,KAAKkpD,oBAELlpD,KAAK2mC,iBAAgB,K,8BAIhC,WACE,IAAMtyC,EAAO2L,KAAKqiC,YACZnpC,EAAK8G,KAAK+mB,YAAY/mB,KAAKzL,MAAMxB,MAAQ,EAAG,IAAI0T,EAASzG,KAAKzL,MAAMukB,QAAS9Y,KAAKzL,MAAMxB,MAAQ,EAAIiN,KAAKzL,MAAMwf,YAC/Gtf,EAAOuL,KAAKzL,MAAM7E,MAGxB,OAFAsQ,KAAKuY,OACLlkB,EAAK6E,GAAK8G,KAAKk7C,iBAAiBhiD,EAAIzE,GAC7BuL,KAAKwiC,WAAWnuC,EAAM,iB,yCAG/B,WACE,IAAMA,EAAO2L,KAAKqiC,YAGlB,GAFAriC,KAAKuY,OAEDvY,KAAK6lB,UAAU8iC,UAAY3oD,KAAKpB,MAAM6B,EAAQuB,KAAM,CACtD,IAAMusD,EAAOvuD,KAAKk7C,iBAAiBl7C,KAAK4jC,gBAAgBvvC,GAAO,YAE/D,OADA2L,KAAKuY,OACEvY,KAAKwuD,kBAAkBn6D,EAAMk6D,EAAM,QAG5C,OAAOvuD,KAAK4sD,cAAcv4D,K,+BAG5B,SAAkBA,EAAMk6D,EAAME,GAC5Bp6D,EAAKk6D,KAAOA,EAEM,aAAdA,EAAK95D,MAAwC,SAAjBg6D,IAC1BzuD,KAAKgkB,aAAayqC,GACpBzuD,KAAKmd,aAAa,gBACRnd,KAAKgJ,UAAU,iBACzBhJ,KAAK2jB,cAIT,IAAM1J,EAAcja,KAAKzL,MAAM0lB,YAO/B,OANA5lB,EAAKgxB,SAAWrlB,KAAK2mC,iBAAgB,IAEjCtyC,EAAKgxB,SAAS5wB,OAASg6D,GAAgBx0C,IACzCja,KAAKwX,MAAMnjB,EAAKgxB,SAAStyB,MAAOsW,EAAc8I,wBAAyBo8C,EAAK95D,KAAMg6D,GAG7EzuD,KAAKwiC,WAAWnuC,EAAM,kB,qCAG/B,SAAwBA,GACtB,IAAM6E,EAAK8G,KAAKk7C,iBAAiBl7C,KAAK4jC,gBAAgBvvC,GAAO,UAW7D,OAVA2L,KAAKuY,OAEDvY,KAAKgkB,aAAa,UACfhkB,KAAKmW,UACRnW,KAAKwX,MAAMte,EAAGnG,MAAOggB,EAA8BC,yBAGrDhT,KAAK6I,mBAAoB,GAGpB7I,KAAKwuD,kBAAkBn6D,EAAM6E,EAAI,U,gCAG1C,SAAmBxJ,EAAOkF,EAAMP,GAK9B,OAJA2L,KAAKqhC,SAAShtC,EAAM,WAAY3E,GAChCsQ,KAAKqhC,SAAShtC,EAAM,MAAO2L,KAAKuI,MAAMpW,MAAMkC,EAAKtB,MAAOiN,KAAKzL,MAAMuS,MACnEzS,EAAK3E,MAAQA,EACbsQ,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAMO,K,0BAG/B,SAAalF,EAAOkF,GAClB,IAAMP,EAAO2L,KAAKqiC,YAClB,OAAOriC,KAAKutC,mBAAmB79C,EAAOkF,EAAMP,K,gCAG9C,SAAmB3E,GACjB,OAAOsQ,KAAK2gC,aAAajxC,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAOsQ,KAAK2gC,aAAajxC,EAAO,oB,gCAGlC,SAAmBA,GACjB,OAAOsQ,KAAK2gC,aAAajxC,EAAO,mB,iCAGlC,SAAoBA,GAClB,OAAOsQ,KAAK2gC,aAAajxC,EAAO,oB,gCAGlC,SAAmBA,GACjB,IAAM2E,EAAO2L,KAAK2gC,aAAajxC,EAAMA,MAAO,iBAG5C,OAFA2E,EAAK0qB,QAAUrvB,EAAMqvB,QACrB1qB,EAAK8iB,MAAQznB,EAAMynB,MACZ9iB,I,iCAGT,SAAoB3E,GAClB,IAAM2E,EAAO2L,KAAKqiC,YAGlB,OAFAhuC,EAAK3E,MAAQA,EACbsQ,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,oB,8BAG/B,WACE,IAAMA,EAAO2L,KAAKqiC,YAElB,OADAriC,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,iB,gDAG/B,SAAmCo/C,GACjC,IAEIj5B,EAFEqoB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAE5BzT,KAAKuY,OACLvY,KAAK+lB,gBAAgBE,MAl9QhB,IAAIzD,GAhI2B,IAmlRpC,IAAM2/B,EAA4BniD,KAAKzL,MAAM2kB,uBACvCmzC,EAAgCrsD,KAAKzL,MAAMslB,2BACjD7Z,KAAKzL,MAAM2kB,wBAAyB,EACpClZ,KAAKzL,MAAMslB,4BAA6B,EASxC,IARA,IAKI60C,EACAC,EANEC,EAAgB5uD,KAAKzL,MAAMxB,MAC3B87D,EAAgB7uD,KAAKzL,MAAMkf,SAC3Bs9B,EAAW,GACXhsB,EAAsB,IAAImB,GAC5B2mB,GAAQ,GAIJ7sC,KAAKpB,MAAM6B,EAAQkB,SAAS,CAClC,GAAIkrC,EACFA,GAAQ,OAIR,GAFA7sC,KAAKwkC,OAAO/jC,EAAQmB,OAAmD,IAA5CmjB,EAAoBI,mBAA4B,KAAOJ,EAAoBI,oBAElGnlB,KAAKpB,MAAM6B,EAAQkB,QAAS,CAC9BgtD,EAAqB3uD,KAAKzL,MAAMxB,MAChC,MAIJ,GAAIiN,KAAKpB,MAAM6B,EAAQ4B,UAAW,CAChC,IAAMysD,EAAqB9uD,KAAKzL,MAAMxB,MAChCg8D,EAAqB/uD,KAAKzL,MAAMkf,SACtCi7C,EAAc1uD,KAAKzL,MAAMxB,MACzBg+C,EAAS3+C,KAAK4N,KAAKgvD,eAAehvD,KAAKivD,mBAAoBH,EAAoBC,IAC/E/uD,KAAKkvD,oBAAoB,IACzB,MAEAne,EAAS3+C,KAAK4N,KAAK2kC,wBAAwB5f,EAAqB/kB,KAAKgvD,iBAIzE,IAAMG,EAAcnvD,KAAKzL,MAAMsf,WACzBu7C,EAAcpvD,KAAKzL,MAAMuf,cAC/B9T,KAAKwkC,OAAO/jC,EAAQkB,QACpB3B,KAAKzL,MAAM2kB,uBAAyBipC,EACpCniD,KAAKzL,MAAMslB,2BAA6BwyC,EACxC,IAAIgD,EAAYrvD,KAAK+mB,YAAY8b,EAAUpvB,GAE3C,GAAIggC,GAAczzC,KAAKsvD,iBAAiBve,KAAcse,EAAYrvD,KAAKo0C,WAAWib,IAIhF,OAHArvD,KAAK+lB,gBAAgB4lC,oBACrB3rD,KAAK+lB,gBAAgBwiB,OACrBvoC,KAAKq0C,qBAAqBgb,EAAWte,GAAU,GACxCse,EAwBT,GArBArvD,KAAK+lB,gBAAgBwiB,OAEhBwI,EAAShgD,QACZiP,KAAK2jB,WAAW3jB,KAAKzL,MAAMmf,cAGzBi7C,GAAoB3uD,KAAK2jB,WAAWgrC,GACpCD,GAAa1uD,KAAK2jB,WAAW+qC,GACjC1uD,KAAK8oD,sBAAsB/jC,GAAqB,GAChD/kB,KAAK8rD,qBAAqB/a,GAAU,GAEhCA,EAAShgD,OAAS,IACpBypB,EAAMxa,KAAK+mB,YAAY6nC,EAAeC,IAClCtG,YAAcxX,EAClB/wC,KAAKwiC,WAAWhoB,EAAK,sBACrBA,EAAI1T,IAAMqoD,EACV30C,EAAI7nB,IAAImU,IAAMsoD,GAEd50C,EAAMu2B,EAAS,IAGZ/wC,KAAKnI,QAAQ6vD,+BAGhB,OAFA1nD,KAAKqhC,SAAS7mB,EAAK,iBAAiB,GACpCxa,KAAKqhC,SAAS7mB,EAAK,aAAcqoB,GAC1BroB,EAGT,IAAM+0C,EAAkBvvD,KAAK+mB,YAAY8b,EAAUpvB,GAGnD,OAFA87C,EAAgB/4D,WAAagkB,EAC7Bxa,KAAKwiC,WAAW+sB,EAAiB,2BAC1BA,I,8BAGT,SAAiB5mD,GACf,OAAQ3I,KAAKokB,uB,wBAGf,SAAW/vB,GACT,GAAI2L,KAAKikB,IAAIxjB,EAAQ0B,OACnB,OAAO9N,I,4BAIX,SAAeA,EAAMwuC,EAAUpvB,GAC7B,OAAOpf,I,iCAGT,WACE,IAAMA,EAAO2L,KAAKqiC,YAGlB,GAFAriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQuB,KAAM,CAC3B,IAAMusD,EAAOvuD,KAAKk7C,iBAAiBl7C,KAAK4jC,gBAAgBvvC,GAAO,OAC/D2L,KAAKuY,OACL,IAAMi3C,EAAWxvD,KAAKwuD,kBAAkBn6D,EAAMk6D,EAAM,UAMpD,OAJKvuD,KAAK7G,MAAMs2D,oBAAuBzvD,KAAK7G,MAAMulB,SAChD1e,KAAKwX,MAAMg4C,EAASz8D,MAAOsW,EAAcmI,qBAGpCg+C,EAGT,OAAOxvD,KAAK0vD,SAASr7D,K,sBAGvB,SAASA,GAYP,OAXAA,EAAKwF,OAASmG,KAAKyrD,kBAEM,WAArBp3D,EAAKwF,OAAOjF,KACdoL,KAAKwX,MAAMnjB,EAAKwF,OAAO9G,MAAOsW,EAAc6C,4BACnClM,KAAK2vD,gBAAgBt7D,EAAKwF,QACnCmG,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAYxK,EAAcqF,uBACvC1O,KAAKikB,IAAIxjB,EAAQyB,cAC1BlC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcqF,uBAG7C1O,KAAK4vD,kBAAkBv7D,GAChB2L,KAAKwiC,WAAWnuC,EAAM,mB,+BAG/B,SAAkBA,GAChB,GAAI2L,KAAKikB,IAAIxjB,EAAQiB,QAAS,CAC5B,IAAM3G,EAAOiF,KAAK6vD,cAAcpvD,EAAQkB,QACxC3B,KAAKsxC,iBAAiBv2C,GACtB1G,EAAKqU,UAAY3N,OAEjB1G,EAAKqU,UAAY,K,kCAIrB,SAAqBonD,GACnB,IAAMC,EAAO/vD,KAAKqiC,YAclB,OAZyB,OAArBriC,KAAKzL,MAAM7E,QACRogE,GACH9vD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAQ,EAAGsW,EAAcoD,gCAInDsjD,EAAKrgE,MAAQ,CACXqxC,IAAK/gC,KAAKuI,MAAMpW,MAAM6N,KAAKzL,MAAMxB,MAAOiN,KAAKzL,MAAMuS,KAAKsN,QAAQ,SAAU,MAC1E47C,OAAQhwD,KAAKzL,MAAM7E,OAErBsQ,KAAKuY,OACLw3C,EAAKE,KAAOjwD,KAAKpB,MAAM6B,EAAQ6B,WACxBtC,KAAKwiC,WAAWutB,EAAM,qB,2BAG/B,SAAcD,GACZ,IAAMz7D,EAAO2L,KAAKqiC,YAClBriC,KAAKuY,OACLlkB,EAAKk0D,YAAc,GACnB,IAAI2H,EAASlwD,KAAKmwD,qBAAqBL,GAGvC,IAFAz7D,EAAK+7D,OAAS,CAACF,IAEPA,EAAOD,MACbjwD,KAAKwkC,OAAO/jC,EAAQ8B,cACpBlO,EAAKk0D,YAAYn2D,KAAK4N,KAAKqwD,6BAC3BrwD,KAAKwkC,OAAO/jC,EAAQe,QACpBnN,EAAK+7D,OAAOh+D,KAAK89D,EAASlwD,KAAKmwD,qBAAqBL,IAItD,OADA9vD,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,qB,uCAG/B,WACE,OAAO2L,KAAKukC,oB,6BAGd,SAAgB4M,EAAOzO,EAAWmlB,EAAU9iC,GACtC8iC,GACF7nD,KAAKmd,aAAa,kBAGpB,IAAMkvC,EAAgCrsD,KAAKzL,MAAMslB,2BACjD7Z,KAAKzL,MAAMslB,4BAA6B,EACxC,IAAMy2C,EAAW/gE,OAAOk3B,OAAO,MAC3BomB,GAAQ,EACNx4C,EAAO2L,KAAKqiC,YAIlB,IAHAhuC,EAAKoU,WAAa,GAClBzI,KAAKuY,QAEGvY,KAAKpB,MAAMuyC,IAAQ,CACzB,GAAItE,EACFA,GAAQ,OAIR,GAFA7sC,KAAKwkC,OAAO/jC,EAAQmB,OAEhB5B,KAAKpB,MAAMuyC,GAAQ,CACrBnxC,KAAKqhC,SAAShtC,EAAM,gBAAiB2L,KAAKzL,MAAMmf,cAChD,MAIJ,IAAM4kB,EAAOt4B,KAAKuwD,wBAAwB7tB,EAAW3d,GAEhD2d,GACH1iC,KAAKwwD,WAAWl4B,EAAMuvB,EAAUyI,EAAUvrC,GAGxC8iC,IAAa7nD,KAAKghC,iBAAiB1I,IAAuB,kBAAdA,EAAK1jC,MACnDoL,KAAKwX,MAAM8gB,EAAKvlC,MAAOsW,EAAc+D,uBAGnCkrB,EAAKsK,WACP5iC,KAAKqhC,SAAS/I,EAAM,aAAa,GAGnCjkC,EAAKoU,WAAWrW,KAAKkmC,GAGvBt4B,KAAKuY,OACLvY,KAAKzL,MAAMslB,2BAA6BwyC,EACxC,IAAIz3D,EAAO,mBAQX,OANI8tC,EACF9tC,EAAO,gBACEizD,IACTjzD,EAAO,oBAGFoL,KAAKwiC,WAAWnuC,EAAMO,K,sCAG/B,SAAyB0jC,GACvB,OAAQA,EAAKiK,UAA8B,eAAlBjK,EAAK5nC,IAAIkE,OAA0BoL,KAAKs3C,yBAA2Bt3C,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAKpB,MAAM6B,EAAQoD,S,qCAGjJ,SAAwB6+B,EAAW3d,GACjC,IAAIy9B,EAAa,GAEjB,GAAIxiD,KAAKpB,MAAM6B,EAAQ+B,IAKrB,IAJIxC,KAAKgJ,UAAU,eACjBhJ,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcgJ,8BAGtCrS,KAAKpB,MAAM6B,EAAQ+B,KACxBggD,EAAWpwD,KAAK4N,KAAKywD,kBAIzB,IAII5tB,EACApvB,EALE6kB,EAAOt4B,KAAKqiC,YACd/e,GAAc,EACdD,GAAU,EACVsf,GAAa,EAIjB,GAAI3iC,KAAKpB,MAAM6B,EAAQ4B,UAGrB,OAFImgD,EAAWzxD,QAAQiP,KAAK2jB,aAExB+e,GACF1iC,KAAKuY,OACL+f,EAAKoM,SAAW1kC,KAAK2mC,kBACrB3mC,KAAKkvD,oBAAoB,KAClBlvD,KAAKwiC,WAAWlK,EAAM,gBAGxBt4B,KAAK0wD,cAGVlO,EAAWzxD,SACbunC,EAAKkqB,WAAaA,EAClBA,EAAa,IAGflqB,EAAK4I,QAAS,GAEVwB,GAAa3d,KACf8d,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,UAGnBivB,IACHpf,EAActjB,KAAKikB,IAAIxjB,EAAQoD,OAGjC,IAAMoW,EAAcja,KAAKzL,MAAM0lB,YACzBvpB,EAAMsP,KAAKu7C,kBAAkBjjB,GAAM,GAEzC,IAAKoK,IAAcpf,IAAgBrJ,GAAeja,KAAK2wD,yBAAyBr4B,GAAO,CACrF,IAAMs4B,EAAUlgE,EAAI+D,KAEJ,UAAZm8D,GAAwB5wD,KAAKmkB,0BAC/Bd,GAAU,EACVrjB,KAAKwsD,kCAAkC97D,GACvC4yB,EAActjB,KAAKikB,IAAIxjB,EAAQoD,MAC/B7D,KAAKu7C,kBAAkBjjB,GAAM,IAGf,QAAZs4B,GAAiC,QAAZA,IACvBjuB,GAAa,EACb3iC,KAAKwsD,kCAAkC97D,GACvC4nC,EAAKgK,KAAOsuB,EAER5wD,KAAKpB,MAAM6B,EAAQoD,QACrByf,GAAc,EACdtjB,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcE,oBAAqBqnD,GAC9D5wD,KAAKuY,QAGPvY,KAAKu7C,kBAAkBjjB,GAAM,IAKjC,OADAt4B,KAAK6wD,kBAAkBv4B,EAAMuK,EAAUpvB,EAAU6P,EAAaD,EAASqf,EAAWC,EAAY5d,GACvFuT,I,+CAGT,SAAkC4I,GAChC,MAAuB,QAAhBA,EAAOoB,KAAiB,EAAI,I,0CAGrC,SAA6BpB,GAC3B,OAAOA,EAAOv4B,S,qCAGhB,SAAwBu4B,GACtB,IAAI4vB,EAEErkB,EAAazsC,KAAK+wD,kCAAkC7vB,GACpDv4B,EAAS3I,KAAK0xC,6BAA6BxQ,GAC3CnuC,EAAQmuC,EAAOnuC,MAEjB4V,EAAO5X,SAAW07C,IACA,QAAhBvL,EAAOoB,KACTtiC,KAAKwX,MAAMzkB,EAAOsW,EAAcU,gBAEhC/J,KAAKwX,MAAMzkB,EAAOsW,EAAcW,iBAIhB,QAAhBk3B,EAAOoB,MAA8F,iBAAlC,OAAxCwuB,EAAUnoD,EAAOA,EAAO5X,OAAS,SAAc,EAAS+/D,EAAQl8D,OAC7FoL,KAAKwX,MAAMzkB,EAAOsW,EAAcY,0B,+BAIpC,SAAkBquB,EAAMhV,EAAaD,EAASqf,EAAWC,GACvD,OAAIA,GACF3iC,KAAK6hC,YAAYvJ,EAAMhV,GAAa,GAAO,GAAO,EAAO,gBACzDtjB,KAAKgxD,wBAAwB14B,GACtBA,GAGLjV,GAAWC,GAAetjB,KAAKpB,MAAM6B,EAAQiB,SAC3CghC,GAAW1iC,KAAK2jB,aACpB2U,EAAKgK,KAAO,SACZhK,EAAK4I,QAAS,EACPlhC,KAAK6hC,YAAYvJ,EAAMhV,EAAaD,GAAS,GAAO,EAAO,sBAJpE,I,iCAQF,SAAoBiV,EAAMuK,EAAUpvB,EAAUivB,EAAW3d,GAGvD,OAFAuT,EAAKsK,WAAY,EAEb5iC,KAAKikB,IAAIxjB,EAAQqB,QACnBw2B,EAAK5oC,MAAQgzC,EAAY1iC,KAAK0iD,kBAAkB1iD,KAAKzL,MAAMxB,MAAOiN,KAAKzL,MAAMkf,UAAYzT,KAAK2kC,wBAAwB5f,GAC/G/kB,KAAKwiC,WAAWlK,EAAM,mBAG1BA,EAAKiK,UAA8B,eAAlBjK,EAAK5nC,IAAIkE,UAA/B,GACEoL,KAAK0yC,kBAAkBpa,EAAK5nC,IAAI+D,KAAM6jC,EAAK5nC,IAAIqC,OAAO,GAAM,GAExD2vC,EACFpK,EAAK5oC,MAAQsQ,KAAK0iD,kBAAkB7f,EAAUpvB,EAAU8S,GAAgB+R,EAAK5nC,MACpEsP,KAAKpB,MAAM6B,EAAQkC,KAAOoiB,IACU,IAAzCA,EAAoBE,kBACtBF,EAAoBE,gBAAkBjlB,KAAKzL,MAAMxB,OAGnDulC,EAAK5oC,MAAQsQ,KAAK0iD,kBAAkB7f,EAAUpvB,EAAU8S,GAAgB+R,EAAK5nC,OAE7E4nC,EAAK5oC,MAAQ62B,GAAgB+R,EAAK5nC,KAGpC4nC,EAAKsK,WAAY,EACV5iC,KAAKwiC,WAAWlK,EAAM,qB,+BAIjC,SAAkBA,EAAMuK,EAAUpvB,EAAU6P,EAAaD,EAASqf,EAAWC,EAAY5d,GACvF,IAAM1wB,EAAO2L,KAAKixD,kBAAkB34B,EAAMhV,EAAaD,EAASqf,EAAWC,IAAe3iC,KAAKkxD,oBAAoB54B,EAAMuK,EAAUpvB,EAAUivB,EAAW3d,GAExJ,OADK1wB,GAAM2L,KAAK2jB,aACTtvB,I,+BAGT,SAAkBikC,EAAMqZ,GACtB,GAAI3xC,KAAKikB,IAAIxjB,EAAQO,UACnBs3B,EAAKiK,UAAW,EAChBjK,EAAK5nC,IAAMsP,KAAK2kC,0BAChB3kC,KAAKwkC,OAAO/jC,EAAQU,cACf,CACL,IAAMgwD,EAAoBnxD,KAAKzL,MAAM8kB,eACrCrZ,KAAKzL,MAAM8kB,gBAAiB,EAC5B,IAAMzkB,EAAOoL,KAAKzL,MAAMK,KACxB0jC,EAAK5nC,IAAMkE,IAAS6L,EAAQC,KAAO9L,IAAS6L,EAAQzD,QAAUpI,IAAS6L,EAAQE,QAAU/L,IAAS6L,EAAQG,QAAUZ,KAAKskC,gBAAkBtkC,KAAKoxD,sBAAsBzf,GAElK/8C,IAAS6L,EAAQK,cACnBw3B,EAAKiK,UAAW,GAGlBviC,KAAKzL,MAAM8kB,eAAiB83C,EAG9B,OAAO74B,EAAK5nC,M,0BAGd,SAAa2D,EAAMgvB,GACjBhvB,EAAK6E,GAAK,KACV7E,EAAKg9D,WAAY,EACjBh9D,EAAKi/C,QAAUjwB,I,yBAGjB,SAAYhvB,EAAMivB,EAAaD,EAASse,EAAeO,EAAkBttC,GAA4B,IAAtButC,EAAsB,wDACnGniC,KAAKsxD,aAAaj9D,EAAMgvB,GACxBhvB,EAAKg9D,YAAc/tC,EACnB,IAAMqvB,EAAiBhR,EAOvB,OANA3hC,KAAK7G,MAAM8sB,MAAM+pB,IAAgC7N,EAAe5rB,GAAc,IAAM2rB,EA9qV7D,GA8qVqG,IAC5HliC,KAAK6lB,UAAUI,MAAM7C,GAAcC,EAAShvB,EAAKg9D,YACjDrxD,KAAKm0C,oBAAoB9/C,EAAMs+C,GAC/B3yC,KAAKuxD,2BAA2Bl9D,EAAMO,GAAM,GAC5CoL,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,OACJl0C,I,4BAGT,SAAe88C,EAAOC,EAAcC,EAAStsB,GACvCssB,GACFrxC,KAAKmd,aAAa,kBAGpB,IAAMkvC,EAAgCrsD,KAAKzL,MAAMslB,2BACjD7Z,KAAKzL,MAAMslB,4BAA6B,EACxC,IAAMxlB,EAAO2L,KAAKqiC,YAIlB,OAHAriC,KAAKuY,OACLlkB,EAAKmT,SAAWxH,KAAK6vD,cAAc1e,GAAQE,EAAStsB,EAAqB1wB,GACzE2L,KAAKzL,MAAMslB,2BAA6BwyC,EACjCrsD,KAAKwiC,WAAWnuC,EAAMg9C,EAAU,kBAAoB,qB,kCAG7D,SAAqBh9C,EAAMsU,EAAQ0a,EAAS2tB,GAC1ChxC,KAAK7G,MAAM8sB,MAAM+pB,GACjB,IAAI74B,EAAQiM,GAAcC,GAAS,IAE9BrjB,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAK6lB,UAAUwjC,QAClDlyC,GA/4RW,GAk5RbnX,KAAK6lB,UAAUI,MAAM9O,GACrBnX,KAAKsxD,aAAaj9D,EAAMgvB,GACxB,IAAM8+B,EAA4BniD,KAAKzL,MAAM2kB,uBAY7C,OAVIvQ,IACF3I,KAAKzL,MAAM2kB,wBAAyB,EACpClZ,KAAKwxD,2BAA2Bn9D,EAAMsU,EAAQqoC,IAGhDhxC,KAAKzL,MAAM2kB,wBAAyB,EACpClZ,KAAKyxD,kBAAkBp9D,GAAM,GAC7B2L,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,OACXvoC,KAAKzL,MAAM2kB,uBAAyBipC,EAC7BniD,KAAKwiC,WAAWnuC,EAAM,6B,wCAG/B,SAA2BA,EAAMsU,EAAQqoC,GACvC38C,EAAKsU,OAAS3I,KAAK8vC,iBAAiBnnC,EAAQqoC,GAAkB,K,wCAGhE,SAA2B38C,EAAMO,GAAwB,IAAlBqtC,EAAkB,wDACvDjiC,KAAKyxD,kBAAkBp9D,GAAM,EAAO4tC,GACpCjiC,KAAKwiC,WAAWnuC,EAAMO,K,+BAGxB,SAAkBP,EAAM2tC,GAAmC,WAAlBC,EAAkB,wDACnDyvB,EAAe1vB,IAAoBhiC,KAAKpB,MAAM6B,EAAQY,QAG5D,GAFArB,KAAK+lB,gBAAgBE,MAAMjD,MAEvB0uC,EACFr9D,EAAKgG,KAAO2F,KAAKovC,mBACjBpvC,KAAK2xD,YAAYt9D,GAAM,EAAO2tC,GAAiB,OAC1C,CACL,IAAM2kB,EAAY3mD,KAAKzL,MAAMskB,OACvByM,EAAYtlB,KAAKzL,MAAMulB,OAC7B9Z,KAAKzL,MAAMulB,OAAS,GACpB9Z,KAAK6lB,UAAUI,MAx7RA,EAw7RMjmB,KAAK6lB,UAAU1C,gBACpC9uB,EAAKgG,KAAO2F,KAAKquD,YAAW,GAAM,GAAO,SAAAuD,GACvC,IAAMC,GAAa,EAAKC,kBAAkBz9D,EAAKsU,QAE/C,GAAIipD,GAA0BC,EAAW,CACvC,IAAME,EAA0B,WAAd19D,EAAKiuC,MAAmC,gBAAdjuC,EAAKiuC,OAA6BjuC,EAAK3D,IAAqB2D,EAAKtB,MAApBsB,EAAK3D,IAAIoW,IAClG,EAAK0Q,MAAMu6C,EAAU1oD,EAAcwC,8BAGrC,IAAMmmD,GAAqBrL,GAAa,EAAKpyD,MAAMskB,OACnD,EAAK84C,YAAYt9D,GAAO,EAAKE,MAAMskB,SAAWmpB,IAAoBC,IAAa4vB,EAAW7vB,EAAiBgwB,GAEvG,EAAKz9D,MAAMskB,QAAUxkB,EAAK6E,IAC5B,EAAK84C,UAAU39C,EAAK6E,GAAI,gBAtuVbivC,QAsuV4C92C,OAAWA,EAAW2gE,MAGjFhyD,KAAK6lB,UAAU0iB,OACfvoC,KAAK+lB,gBAAgBwiB,OACrBvoC,KAAKzL,MAAMulB,OAASwL,K,+BAIxB,SAAkB3c,GAChB,IAAK,IAAIhY,EAAI,EAAGsuB,EAAMtW,EAAO5X,OAAQJ,EAAIsuB,EAAKtuB,IAC5C,GAAuB,eAAnBgY,EAAOhY,GAAGiE,KAAuB,OAAO,EAG9C,OAAO,I,yBAGT,SAAYP,EAAMk/C,EAAiBC,GAA2C,MAA1Bwe,IAA0B,yDACtEC,EAAe,IAAI9gE,IADmD,IAGxDkD,EAAKsU,QAHmD,IAG5E,2BAAiC,KAAtBmlC,EAAsB,QAC/B9tC,KAAKgyC,UAAUlE,EAAO,0BAlwVX3F,EAkwVgDoL,EAAkB,KAAO0e,OAAc5gE,EAAW2gE,IAJnC,iC,2BAQ9E,SAAc7gB,EAAO+gB,EAAYntC,EAAqBonC,GAIpD,IAHA,IAAMC,EAAO,GACTvf,GAAQ,GAEJ7sC,KAAKikB,IAAIktB,IAAQ,CACvB,GAAItE,EACFA,GAAQ,OAIR,GAFA7sC,KAAKwkC,OAAO/jC,EAAQmB,OAEhB5B,KAAKpB,MAAMuyC,GAAQ,CACjBgb,GACFnsD,KAAKqhC,SAAS8qB,EAAc,gBAAiBnsD,KAAKzL,MAAMmf,cAG1D1T,KAAKuY,OACL,MAIJ6zC,EAAKh6D,KAAK4N,KAAKssD,kBAAkB4F,EAAYntC,IAG/C,OAAOqnC,I,+BAGT,SAAkB8F,EAAYntC,EAAqBmnC,GACjD,IAAItJ,EAEJ,GAAI5iD,KAAKpB,MAAM6B,EAAQmB,OAChBswD,GACHlyD,KAAKwX,MAAMxX,KAAKzL,MAAMif,IAAKnK,EAAcwI,gBAAiB,KAG5D+wC,EAAM,UACD,GAAI5iD,KAAKpB,MAAM6B,EAAQ4B,UAAW,CACvC,IAAMysD,EAAqB9uD,KAAKzL,MAAMxB,MAChCg8D,EAAqB/uD,KAAKzL,MAAMkf,SACtCmvC,EAAM5iD,KAAKgvD,eAAehvD,KAAK0wD,YAAY3rC,GAAsB+pC,EAAoBC,QAChF,GAAI/uD,KAAKpB,MAAM6B,EAAQwB,UAAW,CACvCjC,KAAKmd,aAAa,sBAEb+uC,GACHlsD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc4H,+BAG7C,IAAM5c,EAAO2L,KAAKqiC,YAClBriC,KAAKuY,OACLqqC,EAAM5iD,KAAKwiC,WAAWnuC,EAAM,4BAE5BuuD,EAAM5iD,KAAK2kC,wBAAwB5f,EAAqB/kB,KAAKgvD,gBAG/D,OAAOpM,I,6BAGT,SAAgB3Y,GACd,IAAM51C,EAAO2L,KAAKqiC,YACZ5tC,EAAOuL,KAAKmmD,oBAAoB9xD,EAAKtB,MAAOk3C,GAClD,OAAOjqC,KAAKk7C,iBAAiB7mD,EAAMI,K,8BAGrC,SAAiBJ,EAAMI,GAGrB,OAFAJ,EAAKI,KAAOA,EACZJ,EAAK1B,IAAIqU,eAAiBvS,EACnBuL,KAAKwiC,WAAWnuC,EAAM,gB,iCAG/B,SAAoBmf,EAAKy2B,GACvB,IAAIx1C,EACJ,EAGIuL,KAAKzL,MAFPxB,EADF,EACEA,MACA6B,EAFF,EAEEA,KAGF,GAAIA,IAAS6L,EAAQhM,KACnBA,EAAOuL,KAAKzL,MAAM7E,UACb,KAAIkF,EAAK4H,QAGd,MAAMwD,KAAK2jB,aAFXlvB,EAAOG,EAAK4H,QAYd,OAPIytC,EACFjqC,KAAKzL,MAAMK,KAAO6L,EAAQhM,KAE1BuL,KAAK0yC,kBAAkBj+C,EAAM1B,IAAS6B,EAAK4H,SAAS,GAGtDwD,KAAKuY,OACE9jB,I,+BAGT,SAAkByhB,EAAMzC,EAAUqwC,EAAehhB,GAC/C,KAAI5sB,EAAKnlB,OAAS,KAh4VtB,SAA2BmlB,GACzB,OAAOI,GAAoB3hB,IAAIuhB,GAm4VxBi8C,CAAkBj8C,GAAvB,CAIA,GAAa,UAATA,GACF,GAAIlW,KAAK6lB,UAAU8iC,SAEjB,YADA3oD,KAAKwX,MAAM/D,EAAUpK,EAAcuJ,6BAGhC,GAAa,UAATsD,EAAkB,CAC3B,GAAIlW,KAAK6lB,UAAU8jC,SAEjB,YADA3pD,KAAKwX,MAAM/D,EAAUpK,EAAcK,wBAE9B,GAAI1J,KAAK7G,MAAMi5D,cAEpB,YADApyD,KAAKwX,MAAM/D,EAAUpK,EAAcM,qCAGnC3J,KAAK+lB,gBAAgBssC,gCAAgC5+C,EAAUpK,EAAcK,6BAE1E,GAAa,cAATwM,GACLlW,KAAK7G,MAAMm5D,gCAEb,YADAtyD,KAAKwX,MAAM/D,EAAUpK,EAAcG,kBAKvC,GAAIs6C,GAAiB7lD,GAAUiY,GAC7BlW,KAAKwX,MAAM/D,EAAUpK,EAAcgI,kBAAmB6E,QAIlClW,KAAKzL,MAAMskB,OAA0BiqB,EAAYzsB,GAA2BnY,GAAxD+X,IAEzBC,EAAMlW,KAAKmW,WAC1BnW,KAAKwX,MAAM/D,EAAUpK,EAAcsI,uBAAwBuE,M,4BAI/D,WACE,QAAIlW,KAAK6lB,UAAU8jC,aAEf3pD,KAAKnI,QAAQ0vD,2BAA8BvnD,KAAK7G,MAAMo5D,c,wBAO5D,SAAW1vB,EAAUpvB,GACnB,IAAMpf,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAmBxC,OAlBAzT,KAAK+lB,gBAAgBysC,gCAAgCn+D,EAAKtB,MAAOsW,EAAcO,gCAE3E5J,KAAKikB,IAAIxjB,EAAQoD,OACnB7D,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAcoF,mBAGlCzO,KAAK7G,MAAMo5D,YAAevyD,KAAKnI,QAAQ0vD,4BACtCvnD,KAAKgrD,mBACPhrD,KAAK8I,6BAA8B,EAEnC9I,KAAK6I,mBAAoB,GAIxB7I,KAAKzL,MAAMqlB,YACdvlB,EAAKqwC,SAAW1kC,KAAKk9C,gBAAgB,MAAM,IAGtCl9C,KAAKwiC,WAAWnuC,EAAM,qB,8BAG/B,WACE,OAAO2L,KAAKmkB,yBAA2BnkB,KAAKpB,MAAM6B,EAAQkD,UAAY3D,KAAKpB,MAAM6B,EAAQiB,SAAW1B,KAAKpB,MAAM6B,EAAQO,WAAahB,KAAKpB,MAAM6B,EAAQ6B,YAActC,KAAKpB,MAAM6B,EAAQI,SAAWb,KAAKpB,MAAM6B,EAAQqD,QAAU9D,KAAKgJ,UAAU,gBAAkBhJ,KAAKpB,MAAM6B,EAAQmD,U,wBAGtR,WACE,IAAMvP,EAAO2L,KAAKqiC,YAClBriC,KAAK+lB,gBAAgBysC,gCAAgCn+D,EAAKtB,MAAOsW,EAAcwJ,kBAC/E7S,KAAKuY,OACL,IAAIk6C,GAAa,EACb/tB,EAAW,KAEf,IAAK1kC,KAAKmkB,wBAGR,OAFAsuC,EAAazyD,KAAKikB,IAAIxjB,EAAQoD,MAEtB7D,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQoB,KACb,KAAKpB,EAAQM,IACb,KAAKN,EAAQe,OACb,KAAKf,EAAQkB,OACb,KAAKlB,EAAQU,SACb,KAAKV,EAAQgB,UACb,KAAKhB,EAAQqB,MACb,KAAKrB,EAAQmB,MACX,IAAK6wD,EAAY,MAEnB,QACE/tB,EAAW1kC,KAAKovC,mBAMtB,OAFA/6C,EAAKq+D,SAAWD,EAChBp+D,EAAKqwC,SAAWA,EACT1kC,KAAKwiC,WAAWnuC,EAAM,qB,0CAG/B,SAA6Bu9C,EAAM6R,GAC4B,UAAzDzjD,KAAKod,gBAAgB,mBAAoB,aACzB,uBAAdw0B,EAAKh9C,MACPoL,KAAKwX,MAAMisC,EAAcp6C,EAAckG,kC,0CAK7C,SAA6BszB,GAC3B,GAAI7iC,KAAKpB,MAAM6B,EAAQ0B,OACrB,MAAMnC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc2F,kBAAmBvO,EAAQ0B,MAAMrC,OACxEE,KAAK2yD,yCACf3yD,KAAKwX,MAAMqrB,EAAUx5B,EAAc+F,mB,2CAIvC,SAA8B86C,EAAWrnB,EAAUpvB,GACjD,IAAM20B,EAAWpoC,KAAK+mB,YAAY8b,EAAUpvB,GAE5C,OAAIzT,KAAK4yD,kBAAkB1I,IACzB9hB,EAASvuC,OAASqwD,EACXlqD,KAAKwiC,WAAW4F,EAAU,0BAEjCpoC,KAAK6yD,mCAAmChwB,GACxCuF,EAAS5xC,WAAa0zD,EACflqD,KAAKwiC,WAAW4F,EAAU,8B,+BAIrC,SAAkB5xC,GAChB,OAAQA,EAAW5B,MACjB,IAAK,mBACH,OAAQ4B,EAAW+rC,UAAYviC,KAAK4yD,kBAAkBp8D,EAAW6kC,QAEnE,IAAK,aACH,OAAO,EAET,QACE,OAAO,K,gDAIb,SAAmCwH,GACjC,GAAI7iC,KAAKpB,MAAM6B,EAAQ0B,OACrB,MAAMnC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcgG,qBACvCrP,KAAK2yD,yCACf3yD,KAAKwX,MAAMqrB,EAAUx5B,EAAcmG,uB,qCAIvC,SAAwBsjD,GACtB,IAAMC,EAAyB/yD,KAAKzL,MAAMklB,aAC1CzZ,KAAKzL,MAAMklB,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOm5C,IADT,QAGE9yD,KAAKzL,MAAMklB,aAAes5C,K,gDAI9B,SAAmCD,GAGjC,GAAiB,UAFA9yD,KAAKod,gBAAgB,mBAAoB,YAexD,OAAO01C,IAZP,IAAMC,EAAyB/yD,KAAKzL,MAAMklB,aAC1CzZ,KAAKzL,MAAMklB,aAAe,CACxBC,yBAA0B,EAC1BC,cAAe,MAGjB,IACE,OAAOm5C,IADT,QAGE9yD,KAAKzL,MAAMklB,aAAes5C,K,4CAOhC,SAA+BD,GAC7B,IAAME,EAA6BhzD,KAAKzL,MAAMqlB,UAC9C5Z,KAAKzL,MAAMqlB,WAAY,EAEvB,IACE,OAAOk5C,IADT,QAGE9yD,KAAKzL,MAAMqlB,UAAYo5C,K,wBAI3B,SAAWF,GACT,IAAM37C,EAAQnX,KAAK6lB,UAAU1C,eAG7B,GA5wSa,GA0wSsBhM,EAEf,CAClBnX,KAAK6lB,UAAUI,MA7wSJ,EA6wSU9O,GAErB,IACE,OAAO27C,IADT,QAGE9yD,KAAK6lB,UAAU0iB,QAInB,OAAOuqB,M,2BAGT,SAAcA,GACZ,IAAM37C,EAAQnX,KAAK6lB,UAAU1C,eAG7B,GA7xSa,EA2xSuBhM,EAEd,CACpBnX,KAAK6lB,UAAUI,OAAc,EAAR9O,GAErB,IACE,OAAO27C,IADT,QAGE9yD,KAAK6lB,UAAU0iB,QAInB,OAAOuqB,M,oCAGT,WACE9yD,KAAKzL,MAAMklB,aAAaE,cAAgB,I,qDAG1C,WACE,OAAO3Z,KAAKzL,MAAMklB,aAAaC,0BAA4B,I,mDAG7D,WACE,OAAgD,MAAzC1Z,KAAKzL,MAAMklB,aAAaE,eAAyB3Z,KAAKzL,MAAMklB,aAAaE,eAAiB,I,qCAGnG,SAAwB4vC,GACtB,IAAM1mB,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAC5BzT,KAAKzL,MAAMwkB,iBAAmB/Y,KAAKzL,MAAMxB,MACzC,IAAMs5D,EAAgCrsD,KAAKzL,MAAMslB,2BACjD7Z,KAAKzL,MAAMslB,4BAA6B,EACxC,IAAMo5C,EAAMjzD,KAAK6jD,YAAY7jD,KAAKmpD,2BAA4BtmB,EAAUpvB,EAAU81C,GAElF,OADAvpD,KAAKzL,MAAMslB,2BAA6BwyC,EACjC4G,I,mCAGT,WACEjzD,KAAKmd,aAAa,gBAClB,IAAM9oB,EAAO2L,KAAKqiC,YAClBriC,KAAKuY,OACLvY,KAAKikB,IAAIxjB,EAAQY,QACjB,IAAM6xD,EAAelzD,KAAKmzD,kBAAiB,GAC3CnzD,KAAKioD,qBACL,IAAM1xD,EAAUyJ,KAAKqiC,YAErB,IACEhuC,EAAKgG,KAAO2F,KAAKozD,aAAa78D,EAASkK,EAAQe,OAAQ,UADzD,QAGE0xD,IAIF,OADAlzD,KAAKikB,IAAIxjB,EAAQe,QACVxB,KAAKwiC,WAAWnuC,EAAM,wB,6HAtzE/B,SAAaA,GAAqB,IAC5Bw7C,EAAawjB,EADArwB,EAAe,wDAG5B5B,OAAgB/vC,EAgBpB,QAdkB,4BAAdgD,EAAKO,MAAoE,OAA7Bi7C,EAAcx7C,EAAKmvB,QAAkBqsB,EAAYzO,iBAC/FA,EAAgBumB,GAA8BtzD,GAE1C2uC,EACyB,eAAvB5B,EAAcxsC,KAChBoL,KAAK+lB,gBAAgButC,mCAAmCj/D,EAAKtB,MAAOsW,EAAc4D,gCAClD,qBAAvBm0B,EAAcxsC,MACvBoL,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAc4D,gCAGvCjN,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAc4D,iCAIjC5Y,EAAKO,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,MAEF,IAAK,mBACHP,EAAKO,KAAO,gBAEZ,IAAK,IAAIjE,EAAI,EAAGI,EAASsD,EAAKoU,WAAW1X,OAAQwiE,EAAOxiE,EAAS,EAAGJ,EAAII,EAAQJ,IAAK,CACnF,IAAI6iE,EAEEl7B,EAAOjkC,EAAKoU,WAAW9X,GACvB8iE,EAAS9iE,IAAM4iE,EACrBvzD,KAAK0zD,iCAAiCp7B,EAAMm7B,EAAQzwB,GAEhDywB,GAAwB,gBAAdn7B,EAAK1jC,MAAyD,OAA9B4+D,EAAen/D,EAAKmvB,QAAkBgwC,EAAazjB,eAC/F/vC,KAAK2zD,iBAAiBt/D,EAAKmvB,MAAMusB,eAIrC,MAEF,IAAK,iBACH/vC,KAAKijC,aAAa5uC,EAAK3E,MAAOszC,GAC9B,MAEF,IAAK,gBAEDhjC,KAAK4zD,sBAAsBv/D,GAC3BA,EAAKO,KAAO,cACZ,IAAM+G,EAAMtH,EAAKqwC,SACjB1kC,KAAKijC,aAAatnC,EAAKqnC,GACvB,MAGJ,IAAK,kBACH3uC,EAAKO,KAAO,eACZoL,KAAK8vC,iBAAiBz7C,EAAKmT,SAAyC,OAA9B6rD,EAAeh/D,EAAKmvB,YAAiB,EAAS6vC,EAAatjB,cAAe/M,GAChH,MAEF,IAAK,uBACmB,MAAlB3uC,EAAKupD,UACP59C,KAAKwX,MAAMnjB,EAAKu9C,KAAK9qC,IAAKuC,EAAcsE,uBAG1CtZ,EAAKO,KAAO,2BACLP,EAAKupD,SACZ59C,KAAKijC,aAAa5uC,EAAKu9C,KAAM5O,GAC7B,MAEF,IAAK,0BACHhjC,KAAKijC,aAAa7B,EAAe4B,GAIrC,OAAO3uC,I,8CAGT,SAAiCikC,EAAMm7B,EAAQzwB,GAC7C,GAAkB,iBAAd1K,EAAK1jC,KAAyB,CAChC,IAAM2G,EAAsB,QAAd+8B,EAAKgK,MAAgC,QAAdhK,EAAKgK,KAAiBj5B,EAAcyF,mBAAqBzF,EAAc0F,iBAC5G/O,KAAKwX,MAAM8gB,EAAK5nC,IAAIqC,MAAOwI,OACJ,kBAAd+8B,EAAK1jC,MAA6B6+D,EAG3CzzD,KAAKijC,aAAa3K,EAAM0K,GAFxBhjC,KAAK2zD,iBAAiBr7B,EAAKvlC,S,8BAM/B,SAAiBg+C,EAAUC,EAAkBhO,GAC3C,IAAIl8B,EAAMiqC,EAAShgD,OAEnB,GAAI+V,EAAK,CACP,IAAMysD,EAAOxiB,EAASjqC,EAAM,GAE5B,GAA4C,iBAA/B,MAARysD,OAAe,EAASA,EAAK3+D,QAC9BkS,OACG,GAA4C,mBAA/B,MAARysD,OAAe,EAASA,EAAK3+D,MAA2B,CAClE2+D,EAAK3+D,KAAO,cACZ,IAAI+G,EAAM43D,EAAK7uB,SACf1kC,KAAKijC,aAAatnC,EAAKqnC,GAGN,gBAFjBrnC,EAAMgsD,GAA8BhsD,IAE5B/G,MAAsC,qBAAb+G,EAAI/G,MAA4C,iBAAb+G,EAAI/G,MAAwC,kBAAb+G,EAAI/G,MACrGoL,KAAK2jB,WAAWhoB,EAAI5I,OAGlBi+C,GACFhxC,KAAK6zD,4BAA4B7iB,KAGjClqC,GAIN,IAAK,IAAInW,EAAI,EAAGA,EAAImW,EAAKnW,IAAK,CAC5B,IAAMiyD,EAAM7R,EAASpgD,GAEjBiyD,IACF5iD,KAAKijC,aAAa2f,EAAK5f,GAEN,gBAAb4f,EAAIhuD,MACNoL,KAAK2zD,iBAAiB/Q,EAAI7vD,QAKhC,OAAOg+C,I,0BAGT,SAAa18C,EAAMyuC,GAAW,WAC5B,OAAQzuC,EAAKO,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACL,IAAK,cACH,OAAO,EAET,IAAK,mBAED,IAAM2+D,EAAOl/D,EAAKoU,WAAW1X,OAAS,EACtC,OAAOsD,EAAKoU,WAAWmnC,OAAM,SAACtX,EAAM3nC,GAClC,MAAqB,iBAAd2nC,EAAK1jC,OAA4BjE,IAAM4iE,GAAsB,kBAAdj7B,EAAK1jC,OAA6B,EAAKmuC,aAAazK,MAIhH,IAAK,iBACH,OAAOt4B,KAAK+iC,aAAa1uC,EAAK3E,OAEhC,IAAK,gBACH,OAAOsQ,KAAK+iC,aAAa1uC,EAAKqwC,UAEhC,IAAK,kBACH,OAAOrwC,EAAKmT,SAASooC,OAAM,SAAA+I,GAAO,OAAgB,OAAZA,GAAoB,EAAK5V,aAAa4V,MAE9E,IAAK,uBACH,MAAyB,MAAlBtkD,EAAKupD,SAEd,IAAK,0BACH,OAAO59C,KAAK+iC,aAAa1uC,EAAKmC,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQssC,EAEV,QACE,OAAO,K,8BAIb,SAAiBiO,EAAUE,GACzB,OAAOF,I,kCAGT,SAAqBA,EAAUE,GAC7BjxC,KAAKsxC,iBAAiBP,EAAUE,GADkB,UAG/BF,GAH+B,IAGlD,2BAA6B,KAAlBrC,EAAkB,QACiB,qBAA/B,MAARA,OAAe,EAASA,EAAK95C,OAChCoL,KAAK8rD,qBAAqBpd,EAAKlnC,WALe,iC,yBAUpD,SAAYud,EAAqB+uC,GAC/B,IAAMz/D,EAAO2L,KAAKqiC,YAGlB,OAFAriC,KAAKuY,OACLlkB,EAAKqwC,SAAW1kC,KAAK2kC,wBAAwB5f,OAAqB1zB,EAAWyiE,GACtE9zD,KAAKwiC,WAAWnuC,EAAM,mB,8BAG/B,WACE,IAAMA,EAAO2L,KAAKqiC,YAGlB,OAFAriC,KAAKuY,OACLlkB,EAAKqwC,SAAW1kC,KAAK+zD,mBACd/zD,KAAKwiC,WAAWnuC,EAAM,iB,8BAG/B,WACE,OAAQ2L,KAAKzL,MAAMK,MACjB,KAAK6L,EAAQO,SAET,IAAM3M,EAAO2L,KAAKqiC,YAGlB,OAFAriC,KAAKuY,OACLlkB,EAAKmT,SAAWxH,KAAKw6C,iBAAiB/5C,EAAQU,SAAU,IAAI,GACrDnB,KAAKwiC,WAAWnuC,EAAM,gBAGjC,KAAKoM,EAAQY,OACX,OAAOrB,KAAKstD,gBAAgB7sD,EAAQe,QAAQ,GAGhD,OAAOxB,KAAK2mC,oB,8BAGd,SAAiBwK,EAAO6iB,EAAe9B,EAAYvf,GAIjD,IAHA,IAAMyZ,EAAO,GACTvf,GAAQ,GAEJ7sC,KAAKikB,IAAIktB,IAOf,GANItE,EACFA,GAAQ,EAER7sC,KAAKwkC,OAAO/jC,EAAQmB,OAGlBswD,GAAclyD,KAAKpB,MAAM6B,EAAQmB,OACnCwqD,EAAKh6D,KAAK,UACL,IAAI4N,KAAKikB,IAAIktB,GAClB,MACK,GAAInxC,KAAKpB,MAAM6B,EAAQ4B,UAAW,CACvC+pD,EAAKh6D,KAAK4N,KAAK2iD,6BAA6B3iD,KAAKivD,qBACjDjvD,KAAKkvD,oBAAoB8E,GACzBh0D,KAAKwkC,OAAO2M,GACZ,MAEA,IAAMqR,EAAa,GAMnB,IAJIxiD,KAAKpB,MAAM6B,EAAQ+B,KAAOxC,KAAKgJ,UAAU,eAC3ChJ,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc+I,+BAGtCpS,KAAKpB,MAAM6B,EAAQ+B,KACxBggD,EAAWpwD,KAAK4N,KAAKywD,kBAGvBrE,EAAKh6D,KAAK4N,KAAKi0D,wBAAwBthB,EAAgB6P,IAI3D,OAAO4J,I,qCAGT,SAAwBzZ,EAAgB6P,GACtC,IAAM5Q,EAAO5xC,KAAK0iD,oBAClB1iD,KAAK2iD,6BAA6B/Q,GAClC,IAAMgR,EAAM5iD,KAAK0iD,kBAAkB9Q,EAAK7+C,MAAO6+C,EAAKj/C,IAAII,MAAO6+C,GAM/D,OAJI4Q,EAAWzxD,SACb6gD,EAAK4Q,WAAaA,GAGbI,I,0CAGT,SAA6B9U,GAC3B,OAAOA,I,+BAGT,SAAkBjL,EAAUpvB,EAAUm+B,GACpC,IAAIsiB,EAAWC,EAAWC,EAK1B,GAHA3gD,EAAqC,OAAzBygD,EAAYzgD,GAAoBygD,EAAYl0D,KAAKzL,MAAMkf,SACnEovB,EAAqC,OAAzBsxB,EAAYtxB,GAAoBsxB,EAAYn0D,KAAKzL,MAAMxB,MACnE6+C,EAAyB,OAAjBwiB,EAAQxiB,GAAgBwiB,EAAQp0D,KAAK+zD,oBACxC/zD,KAAKikB,IAAIxjB,EAAQkC,IAAK,OAAOivC,EAClC,IAAMv9C,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GAGxC,OAFApf,EAAKu9C,KAAOA,EACZv9C,EAAK81C,MAAQnqC,KAAK2kC,0BACX3kC,KAAKwiC,WAAWnuC,EAAM,uB,uBAG/B,SAAUq6C,EAAMoD,GAA0G,IAAtF75B,EAAsF,uDAAxEhB,GAAWg7C,EAA6D,uCAA/CoC,EAA+C,uCAA3BrC,EAA2B,wDACxH,OAAQtjB,EAAK95C,MACX,IAAK,aAED,IACEH,EACEi6C,EADFj6C,KAGEuL,KAAKzL,MAAMskB,SAAWm5C,EAAoB37C,GAAyB5hB,EAAMuL,KAAKmW,UAAYC,GAA6B3hB,KACzHuL,KAAKwX,MAAMk3B,EAAK37C,MAAOklB,IAAgBhB,GAAY5N,EAAcgH,oBAAsBhH,EAAciH,2BAA4B7b,GAG/Hw9D,IACEA,EAAat9D,IAAIF,GACnBuL,KAAKwX,MAAMk3B,EAAK37C,MAAOsW,EAAcwF,WAErCojD,EAAa98D,IAAIV,IAIjB4/D,GAA+B,QAAT5/D,GACxBuL,KAAKwX,MAAMk3B,EAAK37C,MAAOsW,EAAckE,qBAGjC0K,EAAchB,IAClBjX,KAAK7G,MAAMouC,YAAY9yC,EAAMwjB,EAAay2B,EAAK37C,OAGjD,MAGJ,IAAK,mBACCklB,IAAgBhB,IAClBjX,KAAKwX,MAAMk3B,EAAK37C,MAAOsW,EAAc8D,+BAGvC,MAEF,IAAK,gBAAL,UACmBuhC,EAAKjmC,YADxB,IACE,2BAAkC,KAAzB6vB,EAAyB,QAChC,GAAIt4B,KAAKghC,iBAAiB1I,GAAOA,EAAOA,EAAK5oC,WAAW,GAAIsQ,KAAK+nD,eAAezvB,GAAO,SACvFt4B,KAAKgyC,UAAU1Z,EAAM,+BAAgCrgB,EAAag6C,EAAcoC,IAHpF,8BAME,MAEF,IAAK,eAAL,UACqB3lB,EAAKlnC,UAD1B,IACE,2BAAkC,KAAvBuoD,EAAuB,QAC5BA,GACF/vD,KAAKgyC,UAAU+d,EAAM,8BAA+B93C,EAAag6C,EAAcoC,IAHrF,8BAOE,MAEF,IAAK,oBACHr0D,KAAKgyC,UAAUtD,EAAKkD,KAAM,qBAAsB35B,EAAag6C,GAC7D,MAEF,IAAK,cACHjyD,KAAKgyC,UAAUtD,EAAKhK,SAAU,eAAgBzsB,EAAag6C,GAC3D,MAEF,IAAK,0BACHjyD,KAAKgyC,UAAUtD,EAAKl4C,WAAY,2BAA4ByhB,EAAag6C,GACzE,MAEF,QAEIjyD,KAAKwX,MAAMk3B,EAAK37C,MAAOklB,IAAgBhB,GAAY5N,EAAcuD,WAAavD,EAAcwD,kBAAmBilC,M,mCAKvH,SAAsBz9C,GACO,eAAvBA,EAAKqwC,SAAS9vC,MAAgD,qBAAvBP,EAAKqwC,SAAS9vC,MACvDoL,KAAKwX,MAAMnjB,EAAKqwC,SAAS3xC,MAAOsW,EAAcgE,gC,iCAIlD,SAAoB8jC,GACdnxC,KAAKpB,MAAM6B,EAAQmB,SACjB5B,KAAK2uC,sBAAwBwC,EAC/BnxC,KAAK6zD,4BAA4B7zD,KAAKzL,MAAMxB,OAE5CiN,KAAK2zD,iBAAiB3zD,KAAKzL,MAAMxB,U,8BAKvC,SAAiBygB,GACf,MAAMxT,KAAKwX,MAAMhE,EAAKnK,EAAc+B,oB,yCAGtC,SAA4BoI,GAC1BxT,KAAKwX,MAAMhE,EAAKnK,EAAc4G,uB,GA7XT6W,KA4zEnBwtC,GAAY,CAChBhyB,KAAM,QAEFiyB,GAAc,CAClBjyB,KAAM,UAMFkyB,GAAgB,+EAChBC,GAA4B,IAAH,8B,IA+tDzBC,G,8BACJ,WAAY78D,EAAS0Q,GAAO,uBAC1B1Q,EAtjIJ,SAAoBxH,GAGlB,IAFA,IAAMwH,EAAU,GAEhB,MAAkBtI,OAAOuB,KAAKu2D,IAA9B,eAA+C,CAA1C,IAAM32D,EAAG,KACZmH,EAAQnH,GAAOL,GAAqB,MAAbA,EAAKK,GAAeL,EAAKK,GAAO22D,GAAe32D,GAGxE,OAAOmH,EA+iIK88D,CAAW98D,IACrB,cAAMA,EAAS0Q,IACV1Q,QAAUA,EACf,EAAKs7D,mBACL,EAAKjhE,QAqBT,SAAoBA,GAClB,IAD2B,EACrB0iE,EAAY,IAAIt0D,IADK,IAGNpO,GAHM,IAG3B,2BAA8B,KAAnB6W,EAAmB,QAC5B,EAAwBvX,MAAMC,QAAQsX,GAAUA,EAAS,CAACA,EAAQ,IAAlE,SAAOtU,EAAP,KAAaoD,EAAb,KACK+8D,EAAUjgE,IAAIF,IAAOmgE,EAAUx5D,IAAI3G,EAAMoD,GAAW,KALhC,8BAQ3B,OAAO+8D,EA7BUC,CAAW,EAAKh9D,QAAQ3F,SACvC,EAAK6U,SAAWlP,EAAQyvD,eANE,E,yCAS5B,WACE,OAAO/vC,K,mBAGT,WACEvX,KAAKioD,qBACL,IAAMruD,EAAOoG,KAAKqiC,YACZ9rC,EAAUyJ,KAAKqiC,YAKrB,OAJAriC,KAAKwb,YACL5hB,EAAK2a,OAAS,KACdvU,KAAK80D,cAAcl7D,EAAMrD,GACzBqD,EAAK2a,OAASvU,KAAKzL,MAAMggB,OAClB3a,M,8HA/sDT,SAAcA,EAAMrD,GAIlB,OAHAqD,EAAKrD,QAAUyJ,KAAKozD,aAAa78D,GACjCqD,EAAKsN,SAAWlH,KAAKzL,MAAM2S,SACvBlH,KAAKnI,QAAQujB,SAAQxhB,EAAKwhB,OAvClC,SAA4BA,GAExB,IAAK,IAAIzqB,EAAI,EAAGA,EAAIyqB,EAAOrqB,OAAQJ,IAAK,CACtC,IAAMmN,EAAQsd,EAAOzqB,GAErB,GAAImN,EAAMlJ,OAAS6L,EAAQK,YAAa,CACtC,IACEnO,EAIEmL,EAJFnL,IACAI,EAGE+K,EAHF/K,MACArD,EAEEoO,EAFFpO,MACAoX,EACEhJ,EADFgJ,IAEIiuD,EAAahiE,EAAQ,EACrBiiE,EAAa,IAAIvuD,EAAS9T,EAAII,MAAM2T,KAAM/T,EAAII,MAAM6T,OAAS,GACnEwU,EAAOhlB,OAAOzF,EAAG,EAAG,IAAIuqB,GAAM,CAC5BtmB,KAAM6L,EAAQgC,KACd/S,MAAO,IACPqD,MAAOA,EACP+T,IAAKiuD,EACLthD,SAAU9gB,EAAII,MACd6gB,OAAQohD,IACN,IAAI95C,GAAM,CACZtmB,KAAM6L,EAAQhM,KACd/E,MAAOA,EACPqD,MAAOgiE,EACPjuD,IAAKA,EACL2M,SAAUuhD,EACVphD,OAAQjhB,EAAImU,QAKpB,OAAOsU,EAOkC65C,CAAmBj1D,KAAKob,SACxDpb,KAAKwiC,WAAW5oC,EAAM,U,0BAG/B,SAAarD,GAAkE,IAAzDuQ,EAAyD,uDAAnDrG,EAAQM,IAAKxO,EAAsC,uDAAzByN,KAAKnI,QAAQtF,WAKjE,GAJAgE,EAAQhE,WAAaA,EACrBgE,EAAQ2+D,YAAcl1D,KAAKm1D,4BAC3Bn1D,KAAKo1D,eAAe7+D,GAAS,GAAM,EAAMuQ,GAErC9G,KAAKmW,WAAanW,KAAKnI,QAAQ4vD,wBAA0BznD,KAAK7G,MAAMue,iBAAiB+F,KAAO,EAC9F,cAAqBjsB,MAAM6N,KAAKW,KAAK7G,MAAMue,kBAA3C,eAA8D,CAAzD,gBAAOjjB,EAAP,KACG+e,EAAMxT,KAAK7G,MAAMue,iBAAiB5e,IAAIrE,GAC5CuL,KAAKwX,MAAMhE,EAAKnK,EAAc8E,sBAAuB1Z,GAIzD,OAAOuL,KAAKwiC,WAAWjsC,EAAS,a,6BAGlC,SAAgB+D,GACd,IAAMsmC,EAAYtmC,EAClBsmC,EAAUhsC,KAAO,YACjBgsC,EAAUlxC,MAAQkxC,EAAUpqC,kBACrBoqC,EAAUpqC,WACjB,IAAMqqC,EAAmBD,EAAUlxC,MAC7BqxC,EAAM/gC,KAAKuI,MAAMpW,MAAM0uC,EAAiB9tC,MAAO8tC,EAAiB/5B,KAChE0T,EAAMqmB,EAAiBnxC,MAAQqxC,EAAI5uC,MAAM,GAAI,GAInD,OAHA6N,KAAKqhC,SAASR,EAAkB,MAAOE,GACvC/gC,KAAKqhC,SAASR,EAAkB,WAAYrmB,GAC5CqmB,EAAiBjsC,KAAO,mBACjBgsC,I,uCAGT,WACE,IAAK5gC,KAAKpB,MAAM6B,EAAQiC,sBACtB,OAAO,KAGT,IAAMrO,EAAO2L,KAAKqiC,YAGlB,OAFAhuC,EAAK3E,MAAQsQ,KAAKzL,MAAM7E,MACxBsQ,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,0B,mBAG/B,SAAM2gB,GACJ,QAAKhV,KAAKgkB,aAAa,QAIhBhkB,KAAKq1D,aAAargD,K,0BAG3B,SAAaA,GACX,IAAMuD,EAAOvY,KAAK8b,iBACZgI,EAAS9jB,KAAKsc,eAAe/D,GAEnC,GAAe,KAAXuL,GAA4B,KAAXA,EACnB,OAAO,EAGT,GAAI9O,EAAS,OAAO,EACpB,GAAe,MAAX8O,EAAgB,OAAO,EAE3B,GAAIrO,EAAkBqO,GAAS,CAG7B,GAFA2wC,GAA0BzgD,UAAYuE,EAElCk8C,GAA0B//D,KAAKsL,KAAKuI,OAAQ,CAC9C,IAAM+sD,EAAQt1D,KAAKsc,eAAem4C,GAA0BzgD,WAE5D,IAAK4B,EAAiB0/C,IAAoB,KAAVA,EAC9B,OAAO,EAIX,OAAO,EAGT,OAAO,I,4BAGT,SAAetgD,EAASq5B,GAKtB,OAJIruC,KAAKpB,MAAM6B,EAAQ+B,KACrBxC,KAAKwtD,iBAAgB,GAGhBxtD,KAAKu1D,sBAAsBvgD,EAASq5B,K,mCAG7C,SAAsBr5B,EAASq5B,GAC7B,IAEI/L,EAFA8e,EAAYphD,KAAKzL,MAAMK,KACrBP,EAAO2L,KAAKqiC,YAQlB,OALIriC,KAAK4oC,MAAM5zB,KACbosC,EAAY3gD,EAAQsE,KACpBu9B,EAAO,OAGD8e,GACN,KAAK3gD,EAAQuD,OACb,KAAKvD,EAAQ0D,UACX,OAAOnE,KAAKw1D,4BAA4BnhE,EAAM+sD,EAAU5kD,SAE1D,KAAKiE,EAAQ2D,UACX,OAAOpE,KAAKy1D,uBAAuBphE,GAErC,KAAKoM,EAAQ4D,IACX,OAAOrE,KAAK01D,iBAAiBrhE,GAE/B,KAAKoM,EAAQ+D,KACX,OAAOxE,KAAK21D,kBAAkBthE,GAEhC,KAAKoM,EAAQgE,UACX,GAAiC,KAA7BzE,KAAK2uC,oBAA4B,MAUrC,OARI35B,IACEhV,KAAKzL,MAAMskB,OACb7Y,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAckH,gBACtB,OAAZyE,GAAgC,UAAZA,GAC7BhV,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc6G,iBAIxClQ,KAAKshD,uBAAuBjtD,GAAM,GAAQ2gB,GAEnD,KAAKvU,EAAQ6E,OAEX,OADI0P,GAAShV,KAAK2jB,aACX3jB,KAAKuhD,WAAWltD,GAAM,GAE/B,KAAKoM,EAAQiE,IACX,OAAO1E,KAAK41D,iBAAiBvhE,GAE/B,KAAKoM,EAAQkE,QACX,OAAO3E,KAAK61D,qBAAqBxhE,GAEnC,KAAKoM,EAAQmE,QACX,OAAO5E,KAAK81D,qBAAqBzhE,GAEnC,KAAKoM,EAAQoE,OACX,OAAO7E,KAAK+1D,oBAAoB1hE,GAElC,KAAKoM,EAAQqE,KACX,OAAO9E,KAAKg2D,kBAAkB3hE,GAEhC,KAAKoM,EAAQuE,OACb,KAAKvE,EAAQsE,KAOX,OANAu9B,EAAOA,GAAQtiC,KAAKzL,MAAM7E,MAEtBslB,GAAoB,QAATstB,GACbtiC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAckI,8BAGtCvR,KAAKyhD,kBAAkBptD,EAAMiuC,GAEtC,KAAK7hC,EAAQwE,OACX,OAAOjF,KAAKi2D,oBAAoB5hE,GAElC,KAAKoM,EAAQyE,MACX,OAAOlF,KAAKk2D,mBAAmB7hE,GAEjC,KAAKoM,EAAQY,OACX,OAAOrB,KAAKquD,aAEd,KAAK5tD,EAAQoB,KACX,OAAO7B,KAAKm2D,oBAAoB9hE,GAElC,KAAKoM,EAAQgF,QAET,IAAM2wD,EAAoBp2D,KAAK2uC,oBAE/B,GAA0B,KAAtBynB,GAAkD,KAAtBA,EAC9B,MAIN,KAAK31D,EAAQ+E,QAOT,IAAItG,EAiBJ,OAtBKc,KAAKnI,QAAQ2vD,6BAAgCnZ,GAChDruC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc+H,wBAG7CpR,KAAKuY,OAGD6oC,IAAc3gD,EAAQgF,QAGJ,uBAFpBvG,EAASc,KAAKqoC,YAAYh0C,IAEfO,MAAkCsK,EAAOorB,YAAoC,UAAtBprB,EAAOorB,aACvEtqB,KAAK6I,mBAAoB,IAKP,4BAFpB3J,EAASc,KAAK8oC,YAAYz0C,IAEfO,MAAuCsK,EAAO6pC,YAAoC,UAAtB7pC,EAAO6pC,cAA2C,yBAAhB7pC,EAAOtK,MAAqCsK,EAAO6pC,YAAoC,UAAtB7pC,EAAO6pC,aAA2C,6BAAhB7pC,EAAOtK,OACjNoL,KAAK6I,mBAAoB,GAI7B7I,KAAKq2D,wBAAwBhiE,GACtB6K,EAGX,QAEI,GAAIc,KAAKs2D,kBAMP,OALIthD,GACFhV,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcI,uCAG7CzJ,KAAKuY,OACEvY,KAAKshD,uBAAuBjtD,GAAM,GAAO2gB,GAKxD,IAAMuhD,EAAYv2D,KAAKzL,MAAM7E,MACvBg/C,EAAO1uC,KAAKukC,kBAElB,OAAI6c,IAAc3gD,EAAQhM,MAAsB,eAAdi6C,EAAK95C,MAAyBoL,KAAKikB,IAAIxjB,EAAQqB,OACxE9B,KAAKw2D,sBAAsBniE,EAAMkiE,EAAW7nB,EAAM15B,GAElDhV,KAAKy2D,yBAAyBpiE,EAAMq6C,K,qCAI/C,SAAwBr6C,GACjB2L,KAAKnI,QAAQ2vD,6BAAgCxnD,KAAKmW,UACrDnW,KAAKwX,MAAMnjB,EAAKtB,MAAOggB,EAA8BE,uB,4BAIzD,SAAe5e,GACb,IAAMmuD,EAAaxiD,KAAKzL,MAAMwlB,eAAe/Z,KAAKzL,MAAMwlB,eAAehpB,OAAS,GAE5EyxD,EAAWzxD,SACbsD,EAAKmuD,WAAaA,EAClBxiD,KAAKozC,2BAA2B/+C,EAAMmuD,EAAW,IACjDxiD,KAAKzL,MAAMwlB,eAAe/Z,KAAKzL,MAAMwlB,eAAehpB,OAAS,GAAK,M,qCAItE,WACE,OAAOiP,KAAKpB,MAAM6B,EAAQ6E,U,6BAG5B,SAAgBoxD,GAGd,IAFA,IAAMC,EAA2B32D,KAAKzL,MAAMwlB,eAAe/Z,KAAKzL,MAAMwlB,eAAehpB,OAAS,GAEvFiP,KAAKpB,MAAM6B,EAAQ+B,KAAK,CAC7B,IAAMo0D,EAAY52D,KAAKywD,iBACvBkG,EAAyBvkE,KAAKwkE,GAGhC,GAAI52D,KAAKpB,MAAM6B,EAAQ+E,SAChBkxD,GACH12D,KAAK2jB,aAGH3jB,KAAKgJ,UAAU,gBAAkBhJ,KAAKod,gBAAgB,aAAc,2BACtEpd,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcqB,2BAExC,IAAK1K,KAAK62D,0BACf,MAAM72D,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAciI,8B,4BAIrD,WACEtR,KAAK+tD,gBAAgB,CAAC,oBAAqB,eAC3C,IAAM15D,EAAO2L,KAAKqiC,YAGlB,GAFAriC,KAAKuY,OAEDvY,KAAKgJ,UAAU,cAAe,CAChChJ,KAAKzL,MAAMwlB,eAAe3nB,KAAK,IAC/B,IAEIs8C,EAFE7L,EAAW7iC,KAAKzL,MAAMxB,MACtB0gB,EAAWzT,KAAKzL,MAAMkf,SAG5B,GAAIzT,KAAKikB,IAAIxjB,EAAQiB,QACnBgtC,EAAO1uC,KAAKukC,kBACZvkC,KAAKwkC,OAAO/jC,EAAQkB,aAIpB,IAFA+sC,EAAO1uC,KAAK2mC,iBAAgB,GAErB3mC,KAAKikB,IAAIxjB,EAAQuB,MAAM,CAC5B,IAAM3N,EAAO2L,KAAK+mB,YAAY8b,EAAUpvB,GACxCpf,EAAKgnC,OAASqT,EACdr6C,EAAKgxB,SAAWrlB,KAAK2mC,iBAAgB,GACrCtyC,EAAKkuC,UAAW,EAChBmM,EAAO1uC,KAAKwiC,WAAWnuC,EAAM,oBAIjCA,EAAKmC,WAAawJ,KAAK82D,6BAA6BpoB,GACpD1uC,KAAKzL,MAAMwlB,eAAe9E,WAE1B5gB,EAAKmC,WAAawJ,KAAKkrD,sBAGzB,OAAOlrD,KAAKwiC,WAAWnuC,EAAM,e,0CAG/B,SAA6Bq6C,GAC3B,GAAI1uC,KAAKikB,IAAIxjB,EAAQiB,QAAS,CAC5B,IAAMrN,EAAO2L,KAAK4jC,gBAAgB8K,GAIlC,OAHAr6C,EAAKwF,OAAS60C,EACdr6C,EAAKqU,UAAY1I,KAAK0zC,6BAA6BjzC,EAAQkB,QAAQ,GACnE3B,KAAKsxC,iBAAiBj9C,EAAKqU,WACpB1I,KAAKwiC,WAAWnuC,EAAM,kBAG/B,OAAOq6C,I,yCAGT,SAA4Br6C,EAAMmI,GAChC,IAAMu6D,EAAsB,UAAZv6D,EAWhB,OAVAwD,KAAKuY,OAEDvY,KAAKskB,mBACPjwB,EAAKyL,MAAQ,MAEbzL,EAAKyL,MAAQE,KAAK2mC,kBAClB3mC,KAAKsnC,aAGPtnC,KAAKg3D,oBAAoB3iE,EAAMmI,GACxBwD,KAAKwiC,WAAWnuC,EAAM0iE,EAAU,iBAAmB,uB,iCAG5D,SAAoB1iE,EAAMmI,GACxB,IACI7L,EADEomE,EAAsB,UAAZv6D,EAGhB,IAAK7L,EAAI,EAAGA,EAAIqP,KAAKzL,MAAMulB,OAAO/oB,SAAUJ,EAAG,CAC7C,IAAMsmE,EAAMj3D,KAAKzL,MAAMulB,OAAOnpB,GAE9B,GAAkB,MAAd0D,EAAKyL,OAAiBm3D,EAAIxiE,OAASJ,EAAKyL,MAAMrL,KAAM,CACtD,GAAgB,MAAZwiE,EAAI30B,OAAiBy0B,GAAwB,SAAbE,EAAI30B,MAAkB,MAC1D,GAAIjuC,EAAKyL,OAASi3D,EAAS,OAI3BpmE,IAAMqP,KAAKzL,MAAMulB,OAAO/oB,QAC1BiP,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAcuC,qBAAsBpP,K,oCAI/D,SAAuBnI,GAGrB,OAFA2L,KAAKuY,OACLvY,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,uB,mCAG/B,WACE2L,KAAKwkC,OAAO/jC,EAAQiB,QACpB,IAAM8Y,EAAMxa,KAAKukC,kBAEjB,OADAvkC,KAAKwkC,OAAO/jC,EAAQkB,QACb6Y,I,8BAGT,SAAiBnmB,GAAM,WAQrB,OAPA2L,KAAKuY,OACLvY,KAAKzL,MAAMulB,OAAO1nB,KAAKkiE,IACvBjgE,EAAKgG,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAKzQ,eAAe,SAC9EzmD,KAAKzL,MAAMulB,OAAO7E,MAClBjV,KAAKwkC,OAAO/jC,EAAQwE,QACpB5Q,EAAKK,KAAOsL,KAAKm3D,wBACjBn3D,KAAKikB,IAAIxjB,EAAQoB,MACV7B,KAAKwiC,WAAWnuC,EAAM,sB,+BAG/B,SAAkBA,GAChB2L,KAAKuY,OACLvY,KAAKzL,MAAMulB,OAAO1nB,KAAKkiE,IACvB,IAAI8C,GAAW,EASf,GAPIp3D,KAAKyqD,kBAAoBzqD,KAAKkkB,cAAc,WAC9CkzC,EAAUp3D,KAAKzL,MAAMmf,cAGvB1T,KAAK7G,MAAM8sB,MAtkXK,GAukXhBjmB,KAAKwkC,OAAO/jC,EAAQiB,QAEhB1B,KAAKpB,MAAM6B,EAAQoB,MAKrB,OAJIu1D,GAAW,GACbp3D,KAAK2jB,WAAWyzC,GAGXp3D,KAAKq3D,SAAShjE,EAAM,MAG7B,IAAMijE,EAAgBt3D,KAAKgkB,aAAa,OAClC4kB,EAAQ0uB,GAAiBt3D,KAAKq1D,eAEpC,GAAIr1D,KAAKpB,MAAM6B,EAAQsE,OAAS/E,KAAKpB,MAAM6B,EAAQuE,SAAW4jC,EAAO,CACnE,IAAMvtB,EAAOrb,KAAKqiC,YACZC,EAAOsG,EAAQ,MAAQ5oC,KAAKzL,MAAM7E,MAKxC,OAJAsQ,KAAKuY,OACLvY,KAAKu3D,SAASl8C,GAAM,EAAMinB,GAC1BtiC,KAAKwiC,WAAWnnB,EAAM,wBAEjBrb,KAAKpB,MAAM6B,EAAQoF,MAAQ7F,KAAKgkB,aAAa,QAAuC,IAA7B3I,EAAKm8C,aAAazmE,OACrEiP,KAAKy3D,WAAWpjE,EAAMgnB,EAAM+7C,IAGjCA,GAAW,GACbp3D,KAAK2jB,WAAWyzC,GAGXp3D,KAAKq3D,SAAShjE,EAAMgnB,IAG7B,IAAMq8C,EAA0B13D,KAAKpB,MAAM6B,EAAQhM,QAAUuL,KAAKzL,MAAM0lB,YAClE8K,EAAsB,IAAImB,GAC1B7K,EAAOrb,KAAKukC,iBAAgB,EAAMxf,GAClC4yC,EAAU33D,KAAKgkB,aAAa,MAUlC,GARI2zC,IACEL,EACFt3D,KAAKwX,MAAM6D,EAAKtoB,MAAOsW,EAAcqC,WACf,IAAb0rD,GAAkBM,GAAyC,eAAdr8C,EAAKzmB,MAAuC,UAAdymB,EAAK5mB,MACzFuL,KAAKwX,MAAM6D,EAAKtoB,MAAOsW,EAAcoC,aAIrCksD,GAAW33D,KAAKpB,MAAM6B,EAAQoF,KAAM,CACtC7F,KAAKijC,aAAa5nB,GAAM,GACxB,IAAMu8C,EAAcD,EAAU,mBAAqB,mBAEnD,OADA33D,KAAKgyC,UAAU32B,EAAMu8C,GACd53D,KAAKy3D,WAAWpjE,EAAMgnB,EAAM+7C,GASrC,OAPEp3D,KAAK8oD,sBAAsB/jC,GAAqB,GAG9CqyC,GAAW,GACbp3D,KAAK2jB,WAAWyzC,GAGXp3D,KAAKq3D,SAAShjE,EAAMgnB,K,oCAG7B,SAAuBhnB,EAAMgvB,EAASw0C,GAEpC,OADA73D,KAAKuY,OACEvY,KAAK4sD,cAAcv4D,EAveP,GAue+BwjE,EAAsB,EAte7C,GAse0Ex0C,K,8BAGvG,SAAiBhvB,GAKf,OAJA2L,KAAKuY,OACLlkB,EAAKK,KAAOsL,KAAKm3D,wBACjB9iE,EAAK06C,WAAa/uC,KAAKymD,eAAe,MACtCpyD,EAAK86C,UAAYnvC,KAAKikB,IAAIxjB,EAAQ6D,OAAStE,KAAKymD,eAAe,MAAQ,KAChEzmD,KAAKwiC,WAAWnuC,EAAM,iB,kCAG/B,SAAqBA,GAcnB,OAbK2L,KAAK6lB,UAAUiyC,WAAc93D,KAAKnI,QAAQxF,4BAC7C2N,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcyC,eAG7C9L,KAAKuY,OAEDvY,KAAKskB,mBACPjwB,EAAKqwC,SAAW,MAEhBrwC,EAAKqwC,SAAW1kC,KAAKukC,kBACrBvkC,KAAKsnC,aAGAtnC,KAAKwiC,WAAWnuC,EAAM,qB,kCAG/B,SAAqBA,GACnB2L,KAAKuY,OACLlkB,EAAK0jE,aAAe/3D,KAAKm3D,wBACzB,IAIIa,EAEKC,EANHC,EAAQ7jE,EAAK6jE,MAAQ,GAM3B,IALAl4D,KAAKwkC,OAAO/jC,EAAQY,QACpBrB,KAAKzL,MAAMulB,OAAO1nB,KAAKmiE,IACvBv0D,KAAK7G,MAAM8sB,MAvqXK,IA0qXMjmB,KAAKpB,MAAM6B,EAAQe,SACvC,GAAIxB,KAAKpB,MAAM6B,EAAQwD,QAAUjE,KAAKpB,MAAM6B,EAAQ3J,UAAW,CAC7D,IAAMqhE,EAASn4D,KAAKpB,MAAM6B,EAAQwD,OAC9B+zD,GAAKh4D,KAAKwiC,WAAWw1B,EAAK,cAC9BE,EAAM9lE,KAAK4lE,EAAMh4D,KAAKqiC,aACtB21B,EAAIjpB,WAAa,GACjB/uC,KAAKuY,OAED4/C,EACFH,EAAItjE,KAAOsL,KAAKukC,mBAEZ0zB,GACFj4D,KAAKwX,MAAMxX,KAAKzL,MAAMmf,aAAcrK,EAAc+E,0BAGpD6pD,GAAa,EACbD,EAAItjE,KAAO,MAGbsL,KAAKwkC,OAAO/jC,EAAQqB,YAEhBk2D,EACFA,EAAIjpB,WAAW38C,KAAK4N,KAAKymD,eAAe,OAExCzmD,KAAK2jB,aASX,OAJA3jB,KAAK7G,MAAMovC,OACPyvB,GAAKh4D,KAAKwiC,WAAWw1B,EAAK,cAC9Bh4D,KAAKuY,OACLvY,KAAKzL,MAAMulB,OAAO7E,MACXjV,KAAKwiC,WAAWnuC,EAAM,qB,iCAG/B,SAAoBA,GASlB,OARA2L,KAAKuY,OAEDvY,KAAKmkB,yBACPnkB,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAYxK,EAAcgF,mBAGlDha,EAAKqwC,SAAW1kC,KAAKukC,kBACrBvkC,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,oB,mCAG/B,WACE,IAAMy5C,EAAQ9tC,KAAK+zD,mBACbqE,EAAwB,eAAftqB,EAAMl5C,KAGrB,OAFAoL,KAAK7G,MAAM8sB,MAAMmyC,EAztXM,EAytXwB,GAC/Cp4D,KAAKgyC,UAAUlE,EAAO,eAvsXL3F,GAwsXV2F,I,+BAGT,SAAkBz5C,GAAM,WAKtB,GAJA2L,KAAKuY,OACLlkB,EAAKgkE,MAAQr4D,KAAKquD,aAClBh6D,EAAKikE,QAAU,KAEXt4D,KAAKpB,MAAM6B,EAAQyD,QAAS,CAC9B,IAAMq0D,EAASv4D,KAAKqiC,YACpBriC,KAAKuY,OAEDvY,KAAKpB,MAAM6B,EAAQiB,SACrB1B,KAAKwkC,OAAO/jC,EAAQiB,QACpB62D,EAAOzqB,MAAQ9tC,KAAKw4D,wBACpBx4D,KAAKwkC,OAAO/jC,EAAQkB,UAEpB42D,EAAOzqB,MAAQ,KACf9tC,KAAK7G,MAAM8sB,MAjvXC,IAovXdsyC,EAAOl+D,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAK7I,YAAW,GAAO,MACnFruD,KAAK7G,MAAMovC,OACXl0C,EAAKikE,QAAUt4D,KAAKwiC,WAAW+1B,EAAQ,eASzC,OANAlkE,EAAKokE,UAAYz4D,KAAKikB,IAAIxjB,EAAQ8D,UAAYvE,KAAKquD,aAAe,KAE7Dh6D,EAAKikE,SAAYjkE,EAAKokE,WACzBz4D,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAciF,kBAGhCtO,KAAKwiC,WAAWnuC,EAAM,kB,+BAG/B,SAAkBA,EAAMiuC,GAItB,OAHAtiC,KAAKuY,OACLvY,KAAKu3D,SAASljE,GAAM,EAAOiuC,GAC3BtiC,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,yB,iCAG/B,SAAoBA,GAAM,WAMxB,OALA2L,KAAKuY,OACLlkB,EAAKK,KAAOsL,KAAKm3D,wBACjBn3D,KAAKzL,MAAMulB,OAAO1nB,KAAKkiE,IACvBjgE,EAAKgG,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAKzQ,eAAe,YAC9EzmD,KAAKzL,MAAMulB,OAAO7E,MACXjV,KAAKwiC,WAAWnuC,EAAM,oB,gCAG/B,SAAmBA,GAAM,WAQvB,OAPI2L,KAAKzL,MAAMskB,QACb7Y,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcqH,YAG7C1Q,KAAKuY,OACLlkB,EAAKgnC,OAASr7B,KAAKm3D,wBACnB9iE,EAAKgG,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAKzQ,eAAe,WACvEzmD,KAAKwiC,WAAWnuC,EAAM,mB,iCAG/B,SAAoBA,GAElB,OADA2L,KAAKuY,OACEvY,KAAKwiC,WAAWnuC,EAAM,oB,mCAG/B,SAAsBA,EAAMkiE,EAAW7nB,EAAM15B,GAAS,UAChChV,KAAKzL,MAAMulB,QADqB,IACpD,2BAAuC,SAC3BrlB,OAAS8hE,GACjBv2D,KAAKwX,MAAMk3B,EAAK37C,MAAOsW,EAAciE,mBAAoBipD,IAHT,8BASpD,IAFA,IAAMj0B,EAAOtiC,KAAKzL,MAAMK,KAAK+K,OAAS,OAASK,KAAKpB,MAAM6B,EAAQmE,SAAW,SAAW,KAE/EjU,EAAIqP,KAAKzL,MAAMulB,OAAO/oB,OAAS,EAAGJ,GAAK,EAAGA,IAAK,CACtD,IAAMmP,EAAQE,KAAKzL,MAAMulB,OAAOnpB,GAEhC,GAAImP,EAAM44D,iBAAmBrkE,EAAKtB,MAIhC,MAHA+M,EAAM44D,eAAiB14D,KAAKzL,MAAMxB,MAClC+M,EAAMwiC,KAAOA,EAcjB,OARAtiC,KAAKzL,MAAMulB,OAAO1nB,KAAK,CACrBqC,KAAM8hE,EACNj0B,KAAMA,EACNo2B,eAAgB14D,KAAKzL,MAAMxB,QAE7BsB,EAAKgG,KAAO2F,KAAKymD,eAAezxC,GAAwC,IAA9BA,EAAQhkB,QAAQ,SAAkBgkB,EAAU,QAAUA,EAAU,SAC1GhV,KAAKzL,MAAMulB,OAAO7E,MAClB5gB,EAAKyL,MAAQ4uC,EACN1uC,KAAKwiC,WAAWnuC,EAAM,sB,sCAG/B,SAAyBA,EAAMq6C,GAG7B,OAFAr6C,EAAKmC,WAAak4C,EAClB1uC,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,yB,wBAG/B,WAAmF,IAAxEskE,EAAwE,wDAA/CC,IAA+C,yDAAjBC,EAAiB,uCAC3ExkE,EAAO2L,KAAKqiC,YAkBlB,OAhBIs2B,GACF34D,KAAKzL,MAAM2lB,aAAa+B,QAG1Bjc,KAAKwkC,OAAO/jC,EAAQY,QAEhBu3D,GACF54D,KAAK7G,MAAM8sB,MAj1XG,GAo1XhBjmB,KAAKo1D,eAAe/gE,EAAMskE,GAAiB,EAAOl4D,EAAQe,OAAQq3D,GAE9DD,GACF54D,KAAK7G,MAAMovC,OAGNvoC,KAAKwiC,WAAWnuC,EAAM,oB,8BAG/B,SAAiBiG,GACf,MAAqB,wBAAdA,EAAK1F,MAA2D,kBAAzB0F,EAAK9D,WAAW5B,OAA6B0F,EAAK9D,WAAWgtB,MAAM4d,gB,4BAGnH,SAAe/sC,EAAMskE,EAAiBtqB,EAAUvnC,EAAK+xD,GACnD,IAAMx+D,EAAOhG,EAAKgG,KAAO,GACnBknC,EAAaltC,EAAKktC,WAAa,GACrCvhC,KAAKsgD,4BAA4BjmD,EAAMs+D,EAAkBp3B,OAAalwC,EAAWg9C,EAAUvnC,EAAK+xD,K,yCAGlG,SAA4Bx+D,EAAMknC,EAAY8M,EAAUvnC,EAAK+xD,GAK3D,IAJA,IAAMlS,EAAY3mD,KAAKzL,MAAMskB,OACzB+4C,GAAyB,EACzBkH,GAAqB,GAEjB94D,KAAKpB,MAAMkI,IAAM,CACvB,IAAMxM,EAAO0F,KAAKymD,eAAe,KAAMpY,GAEvC,GAAI9M,IAAeu3B,EAAoB,CACrC,GAAI94D,KAAKyuC,iBAAiBn0C,GAAO,CAC/B,IAAMsmC,EAAY5gC,KAAK+4D,gBAAgBz+D,GACvCinC,EAAWnvC,KAAKwuC,GAEXgxB,GAAoD,eAA1BhxB,EAAUlxC,MAAMA,QAC7CkiE,GAAyB,EACzB5xD,KAAKg5D,WAAU,IAGjB,SAGFF,GAAqB,EACrB94D,KAAKzL,MAAM2lB,aAAa+B,QAG1B5hB,EAAKjI,KAAKkI,GAGRu+D,GACFA,EAAgBnjE,KAAKsK,KAAM4xD,GAGxBjL,GACH3mD,KAAKg5D,WAAU,GAGjBh5D,KAAKuY,S,sBAGP,SAASlkB,EAAMgnB,GAAM,WAUnB,OATAhnB,EAAKgnB,KAAOA,EACZrb,KAAKsnC,WAAU,GACfjzC,EAAKK,KAAOsL,KAAKpB,MAAM6B,EAAQoB,MAAQ,KAAO7B,KAAKukC,kBACnDvkC,KAAKsnC,WAAU,GACfjzC,EAAKu2D,OAAS5qD,KAAKpB,MAAM6B,EAAQkB,QAAU,KAAO3B,KAAKukC,kBACvDvkC,KAAKwkC,OAAO/jC,EAAQkB,QACpBtN,EAAKgG,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAKzQ,eAAe,UAC9EzmD,KAAK7G,MAAMovC,OACXvoC,KAAKzL,MAAMulB,OAAO7E,MACXjV,KAAKwiC,WAAWnuC,EAAM,kB,wBAG/B,SAAWA,EAAMgnB,EAAM+7C,GAAS,WACxB6B,EAAUj5D,KAAKpB,MAAM6B,EAAQoF,KAqBnC,OApBA7F,KAAKuY,OAED0gD,EACE7B,GAAW,GAAGp3D,KAAK2jB,WAAWyzC,GAElC/iE,EAAK6kE,MAAQ9B,GAAW,EAGR,wBAAd/7C,EAAKzmB,MAA+D,MAA7BymB,EAAKm8C,aAAa,GAAGn8C,MAAkB49C,IAAWj5D,KAAKzL,MAAMskB,QAAwB,QAAdwC,EAAKinB,MAAmD,eAAjCjnB,EAAKm8C,aAAa,GAAGt+D,GAAGtE,KAExI,sBAAdymB,EAAKzmB,MACdoL,KAAKwX,MAAM6D,EAAKtoB,MAAOsW,EAAcuD,WAAY,YAFjD5M,KAAKwX,MAAM6D,EAAKtoB,MAAOsW,EAAcmC,uBAAwBytD,EAAU,SAAW,UAKpF5kE,EAAKu9C,KAAOv2B,EACZhnB,EAAK81C,MAAQ8uB,EAAUj5D,KAAKukC,kBAAoBvkC,KAAK2kC,0BACrD3kC,KAAKwkC,OAAO/jC,EAAQkB,QACpBtN,EAAKgG,KAAO2F,KAAKk3D,oCAAmC,kBAAM,EAAKzQ,eAAe,UAC9EzmD,KAAK7G,MAAMovC,OACXvoC,KAAKzL,MAAMulB,OAAO7E,MACXjV,KAAKwiC,WAAWnuC,EAAM4kE,EAAU,iBAAmB,oB,sBAG5D,SAAS5kE,EAAM8kE,EAAO72B,GACpB,IAAMk1B,EAAenjE,EAAKmjE,aAAe,GACnC4B,EAAep5D,KAAKgJ,UAAU,cAGpC,IAFA3U,EAAKiuC,KAAOA,IAEH,CACP,IAAM4N,EAAOlwC,KAAKqiC,YAkBlB,GAjBAriC,KAAKq5D,WAAWnpB,EAAM5N,GAElBtiC,KAAKikB,IAAIxjB,EAAQkC,IACnButC,EAAK70B,KAAO89C,EAAQn5D,KAAKs5D,6BAA+Bt5D,KAAK2kC,2BAEhD,UAATrC,GAAsBtiC,KAAKpB,MAAM6B,EAAQoF,MAAQ7F,KAAKgkB,aAAa,MAI3C,eAAjBksB,EAAKh3C,GAAGtE,MAA2BukE,IAAUn5D,KAAKpB,MAAM6B,EAAQoF,MAAQ7F,KAAKgkB,aAAa,QACnGhkB,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAYxK,EAAckB,8BAA+B,4BAJ1E6uD,GACHp5D,KAAKwX,MAAMxX,KAAKzL,MAAMsf,WAAYxK,EAAckB,8BAA+B,sBAMnF2lC,EAAK70B,KAAO,MAGdm8C,EAAaplE,KAAK4N,KAAKwiC,WAAW0N,EAAM,wBACnClwC,KAAKikB,IAAIxjB,EAAQmB,OAAQ,MAGhC,OAAOvN,I,wBAGT,SAAW67C,EAAM5N,GACf4N,EAAKh3C,GAAK8G,KAAK+zD,mBACf/zD,KAAKgyC,UAAU9B,EAAKh3C,GAAI,uBAAiC,QAATopC,EA57XnC6F,EADIA,OA67XyE92C,EAAoB,QAATixC,K,2BAGvG,SAAcjuC,GAAkD,WAA5CqC,EAA4C,uDA1zB5C,EA0zB2B2sB,EAAiB,wDACxDnvB,EA1zBa,EA0zBCwC,EACd6iE,EA1zBqB,EA0zBA7iE,EACrB8iE,IAActlE,KA1zBC,EA0zBgBwC,GACrCsJ,KAAKsxD,aAAaj9D,EAAMgvB,GAEpBrjB,KAAKpB,MAAM6B,EAAQoD,OAAS01D,GAC9Bv5D,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcsC,mCAG7CtX,EAAKg9D,UAAYrxD,KAAKikB,IAAIxjB,EAAQoD,MAE9B3P,IACFG,EAAK6E,GAAK8G,KAAKy5D,gBAAgBD,IAGjC,IAAMrX,EAA4BniD,KAAKzL,MAAM2kB,uBAqB7C,OApBAlZ,KAAKzL,MAAM2kB,wBAAyB,EACpClZ,KAAK7G,MAAM8sB,MAv+XQ,GAw+XnBjmB,KAAK6lB,UAAUI,MAAM7C,GAAcC,EAAShvB,EAAKg9D,YAE5Cn9D,IACHG,EAAK6E,GAAK8G,KAAKy5D,mBAGjBz5D,KAAKm0C,oBAAoB9/C,GAAM,GAC/B2L,KAAKk3D,oCAAmC,WACtC,EAAK3F,2BAA2Bl9D,EAAMH,EAAc,sBAAwB,yBAE9E8L,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,OAEPr0C,IAAgBqlE,GAClBv5D,KAAK05D,4BAA4BrlE,GAGnC2L,KAAKzL,MAAM2kB,uBAAyBipC,EAC7B9tD,I,6BAGT,SAAgBmlE,GACd,OAAOA,GAAax5D,KAAKpB,MAAM6B,EAAQhM,MAAQuL,KAAK2mC,kBAAoB,O,iCAG1E,SAAoBtyC,EAAMs+C,GACxB3yC,KAAKwkC,OAAO/jC,EAAQiB,QACpB1B,KAAK+lB,gBAAgBE,MAptUhB,IAAI1D,GA3HiB,IAg1U1BluB,EAAKsU,OAAS3I,KAAKw6C,iBAAiB/5C,EAAQkB,OAAQ,IAAI,EAAOgxC,GAC/D3yC,KAAK+lB,gBAAgBwiB,S,yCAGvB,SAA4Bl0C,GACrBA,EAAK6E,IACV8G,KAAK7G,MAAMouC,YAAYlzC,EAAK6E,GAAGzE,KAAMuL,KAAKzL,MAAMskB,QAAUxkB,EAAKg9D,WAAah9D,EAAKi/C,MAAQtzC,KAAK7G,MAAMwgE,oBAp/XvFxxB,EADIA,EAECA,GAm/XiJ9zC,EAAK6E,GAAGnG,S,wBAG7K,SAAWsB,EAAMH,EAAaq8C,GAC5BvwC,KAAKuY,OACLvY,KAAK0mD,eAAeryD,GACpB,IAAMsyD,EAAY3mD,KAAKzL,MAAMskB,OAK7B,OAJA7Y,KAAKzL,MAAMskB,QAAS,EACpB7Y,KAAK4mD,aAAavyD,EAAMH,EAAaq8C,GACrCvwC,KAAK6mD,gBAAgBxyD,GACrBA,EAAKgG,KAAO2F,KAAK8mD,iBAAiBzyD,EAAKisC,WAAYqmB,GAC5C3mD,KAAKwiC,WAAWnuC,EAAMH,EAAc,mBAAqB,qB,6BAGlE,WACE,OAAO8L,KAAKpB,MAAM6B,EAAQkC,KAAO3C,KAAKpB,MAAM6B,EAAQoB,OAAS7B,KAAKpB,MAAM6B,EAAQe,U,2BAGlF,WACE,OAAOxB,KAAKpB,MAAM6B,EAAQiB,U,oCAG5B,SAAuBw/B,GACrB,OAAQA,EAAOqB,WAAarB,EAAOiK,SAA+B,gBAApBjK,EAAOxwC,IAAI+D,MAA+C,gBAArBysC,EAAOxwC,IAAIhB,S,4BAGhG,SAAeg1D,EAAeiC,GAAW,WACvC3mD,KAAKmiB,WAAW8D,QAChB,IAAM1xB,EAAQ,CACZqlE,gBAAgB,EAChBlV,iBAEElC,EAAa,GACX9gB,EAAY1hC,KAAKqiC,YAoCvB,GAnCAX,EAAUrnC,KAAO,GACjB2F,KAAKwkC,OAAO/jC,EAAQY,QACpBrB,KAAKk3D,oCAAmC,WACtC,MAAQ,EAAKt4D,MAAM6B,EAAQe,SACzB,GAAI,EAAKyiB,IAAIxjB,EAAQoB,OACnB,GAAI2gD,EAAWzxD,OAAS,EACtB,MAAM,EAAKymB,MAAM,EAAKjjB,MAAMsf,WAAYxK,EAAcsB,yBAM1D,GAAI,EAAK/L,MAAM6B,EAAQ+B,IACrBggD,EAAWpwD,KAAK,EAAKq+D,sBADvB,CAKA,IAAMjgB,EAAS,EAAKnO,YAEhBmgB,EAAWzxD,SACby/C,EAAOgS,WAAaA,EACpB,EAAKpP,2BAA2B5C,EAAQgS,EAAW,IACnDA,EAAa,IAGf,EAAKqX,iBAAiBn4B,EAAW8O,EAAQj8C,GAErB,gBAAhBi8C,EAAOlO,MAA0BkO,EAAOgS,YAAchS,EAAOgS,WAAWzxD,OAAS,GACnF,EAAKymB,MAAMg5B,EAAOz9C,MAAOsW,EAAcoB,0BAI7CzK,KAAKzL,MAAMskB,OAAS8tC,EACpB3mD,KAAKuY,OAEDiqC,EAAWzxD,OACb,MAAMiP,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcwH,mBAInD,OADA7Q,KAAKmiB,WAAWomB,OACTvoC,KAAKwiC,WAAWd,EAAW,e,0CAGpC,SAA6BA,EAAW8O,GACtC,IAAM9/C,EAAMsP,KAAK2mC,iBAAgB,GAEjC,GAAI3mC,KAAK85D,gBAAiB,CACxB,IAAM54B,EAASsP,EAMf,OALAtP,EAAOoB,KAAO,SACdpB,EAAOqB,UAAW,EAClBrB,EAAOxwC,IAAMA,EACbwwC,EAAOiK,QAAS,EAChBnrC,KAAK+5D,gBAAgBr4B,EAAWR,GAAQ,GAAO,GAAO,GAAO,IACtD,EACF,GAAIlhC,KAAKg6D,kBAAmB,CACjC,IAAM1hC,EAAOkY,EAKb,OAJAlY,EAAKiK,UAAW,EAChBjK,EAAK5nC,IAAMA,EACX4nC,EAAK6S,QAAS,EACdzJ,EAAUrnC,KAAKjI,KAAK4N,KAAKi6D,mBAAmB3hC,KACrC,EAIT,OADAt4B,KAAKwsD,kCAAkC97D,IAChC,I,8BAGT,SAAiBgxC,EAAW8O,EAAQj8C,GAClC,IAAM22C,EAAWlrC,KAAKgkB,aAAa,UAEnC,GAAIknB,EAAU,CACZ,GAAIlrC,KAAKywC,6BAA6B/O,EAAW8O,GAC/C,OAGF,GAAIxwC,KAAKikB,IAAIxjB,EAAQY,QAEnB,YADArB,KAAKwkD,sBAAsB9iB,EAAW8O,GAK1CxwC,KAAKykD,6BAA6B/iB,EAAW8O,EAAQj8C,EAAO22C,K,0CAG9D,SAA6BxJ,EAAW8O,EAAQj8C,EAAO22C,GACrD,IAAMgvB,EAAe1pB,EACf2pB,EAAgB3pB,EAChB4pB,EAAa5pB,EACb6pB,EAAc7pB,EACdtP,EAASg5B,EACTI,EAAeJ,EAGrB,GAFA1pB,EAAOrF,OAASD,EAEZlrC,KAAKikB,IAAIxjB,EAAQoD,MAAO,CAC1Bq9B,EAAOoB,KAAO,SACd,IAAMld,EAAgBplB,KAAKpB,MAAM6B,EAAQK,aAGzC,OAFAd,KAAKu6D,sBAAsBr5B,GAEvB9b,OACFplB,KAAKw6D,uBAAuB94B,EAAWy4B,GAAe,GAAM,IAI1Dn6D,KAAKy6D,uBAAuBP,IAC9Bl6D,KAAKwX,MAAM0iD,EAAaxpE,IAAIqC,MAAOsW,EAAciB,6BAGnDtK,KAAK+5D,gBAAgBr4B,EAAWw4B,GAAc,GAAM,GAAO,GAAO,IAIpE,IAAMl2C,EAAehkB,KAAKpB,MAAM6B,EAAQhM,QAAUuL,KAAKzL,MAAM0lB,YACvDygD,EAAY16D,KAAKpB,MAAM6B,EAAQK,aAC/BpQ,EAAMsP,KAAKu6D,sBAAsB/pB,GACjCmqB,EAA0B36D,KAAKzL,MAAMxB,MAG3C,GAFAiN,KAAK46D,6BAA6BN,GAE9Bt6D,KAAK85D,gBAAiB,CAGxB,GAFA54B,EAAOoB,KAAO,SAEVo4B,EAEF,YADA16D,KAAKw6D,uBAAuB94B,EAAWy4B,GAAe,GAAO,GAI/D,IAAMx4B,EAAgB3hC,KAAKy6D,uBAAuBP,GAC9Ct4B,GAAoB,EAEpBD,IACFu4B,EAAa53B,KAAO,cAEhB/tC,EAAMqlE,iBAAmB55D,KAAKgJ,UAAU,eAC1ChJ,KAAKwX,MAAM9mB,EAAIqC,MAAOsW,EAAc0B,sBAGlC42B,GAAiB3hC,KAAKgJ,UAAU,eAAiBwnC,EAAOiS,UAC1DziD,KAAKwX,MAAM9mB,EAAIqC,MAAOsW,EAAcuF,uBAGtCra,EAAMqlE,gBAAiB,EACvBh4B,EAAoBrtC,EAAMmwD,eAG5B1kD,KAAK+5D,gBAAgBr4B,EAAWw4B,GAAc,GAAO,EAAOv4B,EAAeC,QACtE,GAAI5hC,KAAKg6D,kBACVU,EACF16D,KAAK66D,yBAAyBn5B,EAAW24B,GAEzCr6D,KAAK86D,kBAAkBp5B,EAAW04B,QAE/B,GAAIp2C,GAA6B,UAAbtzB,EAAI+D,OAAqBuL,KAAKskB,mBAAoB,CAC3EtkB,KAAKwsD,kCAAkC97D,GACvC,IAAM4yB,EAActjB,KAAKikB,IAAIxjB,EAAQoD,MAEjCy2D,EAAap3B,UACfljC,KAAK2jB,WAAWg3C,GAGlBz5B,EAAOoB,KAAO,SACd,IAAMo4B,EAAY16D,KAAKpB,MAAM6B,EAAQK,aACrCd,KAAKu6D,sBAAsBr5B,GAC3BlhC,KAAK46D,6BAA6BN,GAE9BI,EACF16D,KAAKw6D,uBAAuB94B,EAAWy4B,EAAe72C,GAAa,IAE/DtjB,KAAKy6D,uBAAuBP,IAC9Bl6D,KAAKwX,MAAM0iD,EAAaxpE,IAAIqC,MAAOsW,EAAcgB,oBAGnDrK,KAAK+5D,gBAAgBr4B,EAAWw4B,EAAc52C,GAAa,GAAM,GAAO,SAErE,IAAIU,GAA8B,QAAbtzB,EAAI+D,MAA+B,QAAb/D,EAAI+D,MAAqBuL,KAAKpB,MAAM6B,EAAQoD,OAAS7D,KAAKskB,mBAiBjGtkB,KAAKskB,mBACVo2C,EACF16D,KAAK66D,yBAAyBn5B,EAAW24B,GAEzCr6D,KAAK86D,kBAAkBp5B,EAAW04B,GAGpCp6D,KAAK2jB,iBAxB0H,CAC/H3jB,KAAKwsD,kCAAkC97D,GACvCwwC,EAAOoB,KAAO5xC,EAAI+D,KAClB,IAAMimE,EAAY16D,KAAKpB,MAAM6B,EAAQK,aACrCd,KAAKu6D,sBAAsBL,GAEvBQ,EACF16D,KAAKw6D,uBAAuB94B,EAAWy4B,GAAe,GAAO,IAEzDn6D,KAAKy6D,uBAAuBP,IAC9Bl6D,KAAKwX,MAAM0iD,EAAaxpE,IAAIqC,MAAOsW,EAAce,uBAGnDpK,KAAK+5D,gBAAgBr4B,EAAWw4B,GAAc,GAAO,GAAO,GAAO,IAGrEl6D,KAAKgxD,wBAAwBkJ,M,mCAYjC,SAAsB1pB,GACpB,MAIIxwC,KAAKzL,MAHPK,EADF,EACEA,KACAlF,EAFF,EAEEA,MACAqD,EAHF,EAGEA,MAWF,OARK6B,IAAS6L,EAAQhM,MAAQG,IAAS6L,EAAQzD,SAAWwzC,EAAOrF,QAAoB,cAAVz7C,GACzEsQ,KAAKwX,MAAMzkB,EAAOsW,EAAc8G,iBAG9Bvb,IAAS6L,EAAQK,aAAyB,gBAAVpR,GAClCsQ,KAAKwX,MAAMzkB,EAAOsW,EAAcc,8BAG3BnK,KAAKu7C,kBAAkB/K,GAAQ,K,mCAGxC,SAAsB9O,EAAW8O,GAC/B,IAAIuqB,EAEJ/6D,KAAKmd,aAAa,mBAAoBqzB,EAAOz9C,OAC7CiN,KAAK7G,MAAM8sB,MAAM1P,KACjB,IAAM+O,EAAYtlB,KAAKzL,MAAMulB,OAC7B9Z,KAAKzL,MAAMulB,OAAS,GACpB9Z,KAAK6lB,UAAUI,MAl9UL,GAm9UV,IAAM5rB,EAAOm2C,EAAOn2C,KAAO,GAC3B2F,KAAKsgD,4BAA4BjmD,OAAMhJ,GAAW,EAAOoP,EAAQe,QACjExB,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,OACXvoC,KAAKzL,MAAMulB,OAASwL,EACpBoc,EAAUrnC,KAAKjI,KAAK4N,KAAKwiC,WAAWgO,EAAQ,gBAEI,OAA3CuqB,EAAqBvqB,EAAOgS,aAAuBuY,EAAmBhqE,QACzEiP,KAAKwX,MAAMg5B,EAAOz9C,MAAOsW,EAAcuB,wB,+BAI3C,SAAkB82B,EAAWpJ,GACtBA,EAAKiK,UAA+B,gBAAlBjK,EAAK5nC,IAAI+D,MAA6C,gBAAnB6jC,EAAK5nC,IAAIhB,OACjEsQ,KAAKwX,MAAM8gB,EAAK5nC,IAAIqC,MAAOsW,EAAca,uBAG3Cw3B,EAAUrnC,KAAKjI,KAAK4N,KAAKi6D,mBAAmB3hC,M,sCAG9C,SAAyBoJ,EAAWpJ,GAClC,IAAMjkC,EAAO2L,KAAKg7D,0BAA0B1iC,GAC5CoJ,EAAUrnC,KAAKjI,KAAKiC,GACpB2L,KAAKmiB,WAAW84C,mBAAmBj7D,KAAKopD,iBAAiB/0D,EAAK3D,KA5vYtC,EA4vYiE2D,EAAK3D,IAAIqC,S,6BAGpG,SAAgB2uC,EAAWR,EAAQ5d,EAAaD,EAASse,EAAeC,GACtEF,EAAUrnC,KAAKjI,KAAK4N,KAAK6hC,YAAYX,EAAQ5d,EAAaD,EAASse,EAAeC,EAAmB,eAAe,M,oCAGtH,SAAuBF,EAAWR,EAAQ5d,EAAaD,GACrD,IAAMhvB,EAAO2L,KAAK6hC,YAAYX,EAAQ5d,EAAaD,GAAS,GAAO,EAAO,sBAAsB,GAChGqe,EAAUrnC,KAAKjI,KAAKiC,GACpB,IAAMiuC,EAAqB,QAAdjuC,EAAKiuC,KAAiBjuC,EAAK82C,OA1wYR9oB,EAHF,EA6wY+F,QAAdhuB,EAAKiuC,KAAiBjuC,EAAK82C,OAzwY1G+vB,EAHF,EAMN,EAuwYxBl7D,KAAKmiB,WAAW84C,mBAAmBj7D,KAAKopD,iBAAiB/0D,EAAK3D,KAAM4xC,EAAMjuC,EAAK3D,IAAIqC,S,0CAGrF,SAA6B4xD,M,uCAE7B,SAA0BtwD,GAGxB,OAFA2L,KAAKm7D,iBAAiB9mE,GACtB2L,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,0B,gCAG/B,SAAmBA,GAGjB,OAFA2L,KAAKm7D,iBAAiB9mE,GACtB2L,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,mB,8BAG/B,SAAiBA,GACf2L,KAAK7G,MAAM8sB,MAAM1P,IACjBvW,KAAK+lB,gBAAgBE,MAAMjD,MAC3BhjB,KAAK6lB,UAAUI,MAzgVL,GA0gVV5xB,EAAK3E,MAAQsQ,KAAKikB,IAAIxjB,EAAQkC,IAAM3C,KAAK2kC,0BAA4B,KACrE3kC,KAAK+lB,gBAAgBwiB,OACrBvoC,KAAK6lB,UAAU0iB,OACfvoC,KAAK7G,MAAMovC,S,0BAGb,SAAal0C,EAAMH,EAAaq8C,GAAsC,IAA1Bt4B,EAA0B,uDAvzYrDkwB,IAwzYXnoC,KAAKpB,MAAM6B,EAAQhM,OACrBJ,EAAK6E,GAAK8G,KAAK2mC,kBAEXzyC,GACF8L,KAAKgyC,UAAU39C,EAAK6E,GAAI,aAAc+e,IAGpCs4B,IAAer8C,EACjBG,EAAK6E,GAAK,KAEV8G,KAAK2jB,WAAW,KAAMta,EAAcqE,oB,6BAK1C,SAAgBrZ,GACdA,EAAKisC,WAAatgC,KAAKikB,IAAIxjB,EAAQ8E,UAAYvF,KAAKkrD,sBAAwB,O,yBAG9E,SAAY72D,GACV,IAAM+mE,EAAap7D,KAAKq7D,iCAAiChnE,GACnDinE,GAAqBF,GAAcp7D,KAAKikB,IAAIxjB,EAAQmB,OACpD25D,EAAUD,GAAqBt7D,KAAKw7D,cAAcnnE,GAClDi8C,EAAeirB,GAAWv7D,KAAKy7D,mCAAmCpnE,GAClEqnE,EAAsBJ,KAAuBhrB,GAAgBtwC,KAAKikB,IAAIxjB,EAAQmB,QAC9E+5D,EAAiBP,GAAcG,EAErC,GAAIA,IAAYjrB,EAGd,OAFI8qB,GAAYp7D,KAAK2jB,aACrB3jB,KAAKqwC,gBAAgBh8C,GAAM,GACpB2L,KAAKwiC,WAAWnuC,EAAM,wBAG/B,IAMIunE,EANEC,EAAgB77D,KAAK87D,gCAAgCznE,GAE3D,GAAI+mE,GAAcE,IAAsBC,IAAYM,GAAiBvrB,GAAgBorB,IAAwBG,EAC3G,MAAM77D,KAAK2jB,WAAW,KAAMljB,EAAQY,QAYtC,GAPIs6D,GAAkBE,GACpBD,GAAiB,EACjB57D,KAAKqwC,gBAAgBh8C,EAAMsnE,IAE3BC,EAAiB57D,KAAK+7D,4BAA4B1nE,GAGhDsnE,GAAkBE,GAAiBD,EAErC,OADA57D,KAAKg8D,YAAY3nE,GAAM,GAAM,IAASA,EAAK7D,QACpCwP,KAAKwiC,WAAWnuC,EAAM,0BAG/B,GAAI2L,KAAKikB,IAAIxjB,EAAQ3J,UAGnB,OAFAzC,EAAKq0C,YAAc1oC,KAAKi8D,+BACxBj8D,KAAKg8D,YAAY3nE,GAAM,GAAM,GACtB2L,KAAKwiC,WAAWnuC,EAAM,4BAG/B,MAAM2L,KAAK2jB,WAAW,KAAMljB,EAAQY,U,2BAGtC,SAAchN,GACZ,OAAO2L,KAAKikB,IAAIxjB,EAAQoD,Q,8CAG1B,SAAiCxP,GAC/B,GAAI2L,KAAKk8D,2BAA4B,CACnCl8D,KAAKmd,aAAa,qBAClB,IAAM00B,EAAY7xC,KAAKqiC,YAGvB,OAFAwP,EAAUxO,SAAWrjC,KAAK2mC,iBAAgB,GAC1CtyC,EAAKuU,WAAa,CAAC5I,KAAKwiC,WAAWqP,EAAW,4BACvC,EAGT,OAAO,I,gDAGT,SAAmCx9C,GACjC,GAAI2L,KAAKgkB,aAAa,MAAO,CACtB3vB,EAAKuU,aAAYvU,EAAKuU,WAAa,IACxC,IAAMipC,EAAY7xC,KAAK+mB,YAAY/mB,KAAKzL,MAAMmf,aAAc1T,KAAKzL,MAAMof,iBAIvE,OAHA3T,KAAKuY,OACLs5B,EAAUxO,SAAWrjC,KAAKmyC,wBAC1B99C,EAAKuU,WAAWxW,KAAK4N,KAAKwiC,WAAWqP,EAAW,8BACzC,EAGT,OAAO,I,6CAGT,SAAgCx9C,GACE,MAAhC,QAAI2L,KAAKpB,MAAM6B,EAAQY,UAChBhN,EAAKuU,aAAYvU,EAAKuU,WAAa,KACxC,EAAAvU,EAAKuU,YAAWxW,KAAhB,UAAwB4N,KAAKowC,0BAC7B/7C,EAAK7D,OAAS,KACd6D,EAAKq0C,YAAc,MACZ,K,yCAMX,SAA4Br0C,GAC1B,QAAI2L,KAAK8kD,iCACPzwD,EAAKuU,WAAa,GAClBvU,EAAK7D,OAAS,KACd6D,EAAKq0C,YAAc1oC,KAAKm8D,uBAAuB9nE,IACxC,K,6BAMX,WACE,IAAK2L,KAAKgkB,aAAa,SAAU,OAAO,EACxC,IAAMzL,EAAOvY,KAAK8b,iBAClB,OAAQ5V,EAAUxR,KAAKsL,KAAKuI,MAAMpW,MAAM6N,KAAKzL,MAAMif,IAAK+E,KAAUvY,KAAK+jB,qBAAqBxL,EAAM,c,0CAGpG,WACE,IAAMm2B,EAAO1uC,KAAKqiC,YACZhf,EAAUrjB,KAAKs2D,kBAErB,GAAIt2D,KAAKpB,MAAM6B,EAAQgE,YAAc4e,EAOnC,OANArjB,KAAKuY,OAED8K,GACFrjB,KAAKuY,OAGAvY,KAAK4sD,cAAcle,EAAM0tB,EAAmC/4C,GAC9D,GAAIrjB,KAAKpB,MAAM6B,EAAQ6E,QAC5B,OAAOtF,KAAKuhD,WAAW7S,GAAM,GAAM,GAC9B,GAAI1uC,KAAKpB,MAAM6B,EAAQ+B,IAM5B,OALIxC,KAAKgJ,UAAU,eAAiBhJ,KAAKod,gBAAgB,aAAc,2BACrEpd,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcmB,uBAG7CxK,KAAKwtD,iBAAgB,GACdxtD,KAAKuhD,WAAW7S,GAAM,GAAM,GAC9B,GAAI1uC,KAAKpB,MAAM6B,EAAQuE,SAAWhF,KAAKpB,MAAM6B,EAAQsE,OAAS/E,KAAK4oC,QACxE,MAAM5oC,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc4I,0BAEjD,IAAMivC,EAAMlhD,KAAK2kC,0BAEjB,OADA3kC,KAAKsnC,YACE4Z,I,oCAIX,SAAuB7sD,GACrB,OAAO2L,KAAKymD,eAAe,Q,sCAG7B,WACE,GAAIzmD,KAAKpB,MAAM6B,EAAQhM,MAAO,CAC5B,IAAM/E,EAAQsQ,KAAKzL,MAAM7E,MAEzB,GAAc,UAAVA,IAAsBsQ,KAAKzL,MAAM0lB,aAAyB,QAAVvqB,EAClD,OAAO,EAGT,IAAe,SAAVA,GAA8B,cAAVA,KAA2BsQ,KAAKzL,MAAM0lB,YAAa,CAC1E,IAAMoiD,EAAIr8D,KAAKorC,YAEf,GAAIixB,EAAEznE,OAAS6L,EAAQhM,MAAoB,SAAZ4nE,EAAE3sE,OAAoB2sE,EAAEznE,OAAS6L,EAAQY,OAEtE,OADArB,KAAK+tD,gBAAgB,CAAC,OAAQ,gBACvB,QAGN,IAAK/tD,KAAKpB,MAAM6B,EAAQ3J,UAC7B,OAAO,EAGT,IAAMyhB,EAAOvY,KAAK8b,iBACZwgD,EAAUt8D,KAAK+jB,qBAAqBxL,EAAM,QAEhD,GAAoC,KAAhCvY,KAAKuI,MAAMC,WAAW+P,IAAgBvY,KAAKpB,MAAM6B,EAAQhM,OAAS6nE,EACpE,OAAO,EAGT,GAAIt8D,KAAKpB,MAAM6B,EAAQ3J,WAAawlE,EAAS,CAC3C,IAAMC,EAAgBv8D,KAAKuI,MAAMC,WAAWxI,KAAK6b,oBAAoBtD,EAAO,IAC5E,OAAyB,KAAlBgkD,GAA0C,KAAlBA,EAGjC,OAAO,I,6BAGT,SAAgBloE,EAAMmwC,GACpB,GAAIxkC,KAAKkkB,cAAc,QAAS,CAC9B7vB,EAAK7D,OAASwP,KAAKmnD,oBACnBnnD,KAAKg8D,YAAY3nE,GACjB,IAAMmoE,EAAax8D,KAAKy8D,6BAEpBD,IACFnoE,EAAKmoE,WAAaA,QAGhBh4B,EACFxkC,KAAK2jB,aAELtvB,EAAK7D,OAAS,KAIlBwP,KAAKsnC,c,0CAGP,WACE,GAAItnC,KAAKpB,MAAM6B,EAAQ+B,MACrBxC,KAAK+tD,gBAAgB,CAAC,aAAc,sBAEhC/tD,KAAKgJ,UAAU,eAAe,CAChC,IAAIhJ,KAAKod,gBAAgB,aAAc,0BAGrC,OAAO,EAFPpd,KAAK2jB,WAAW3jB,KAAKzL,MAAMxB,MAAOsW,EAAcmB,uBAOtD,MAAmC,QAA5BxK,KAAKzL,MAAMK,KAAK4H,SAAiD,UAA5BwD,KAAKzL,MAAMK,KAAK4H,SAAmD,aAA5BwD,KAAKzL,MAAMK,KAAK4H,SAAsD,UAA5BwD,KAAKzL,MAAMK,KAAK4H,SAAuBwD,KAAK4oC,SAAW5oC,KAAKs2D,oB,yBAG3L,SAAYjiE,EAAMqoE,EAAYC,EAAWC,GACvC,GAAIF,EACF,GAAIC,GAGF,GAFA38D,KAAK68D,sBAAsBxoE,EAAM,WAE7B2L,KAAKgJ,UAAU,qBAAsB,CACvC,IAAI8zD,EAEEp0B,EAAcr0C,EAAKq0C,YAEA,eAArBA,EAAY9zC,MAA8C,SAArB8zC,EAAYj0C,MAAmBi0C,EAAY5hC,IAAM4hC,EAAY31C,QAAU,GAAmD,OAA3C+pE,EAAqBp0B,EAAYllB,QAAkBs5C,EAAmB17B,eAC5LphC,KAAKwX,MAAMkxB,EAAY31C,MAAOsW,EAAckC,qCAG3C,GAAIlX,EAAKuU,YAAcvU,EAAKuU,WAAW7X,OAAQ,WAC5BsD,EAAKuU,YADuB,IACpD,2BAAyC,KAA9BipC,EAA8B,QAErCxO,EACEwO,EADFxO,SAEI05B,EAAiC,eAAlB15B,EAASzuC,KAAwByuC,EAAS5uC,KAAO4uC,EAAS3zC,MAG/E,GAFAsQ,KAAK68D,sBAAsBhrB,EAAWkrB,IAEjCH,GAAU/qB,EAAUE,MAAO,CAC9B,IACEA,EACEF,EADFE,MAGiB,eAAfA,EAAMn9C,KACRoL,KAAKwX,MAAMq6B,EAAU9+C,MAAOsW,EAAciC,sBAAuBymC,EAAMriD,MAAOqtE,IAE9E/8D,KAAK0yC,kBAAkBX,EAAMt9C,KAAMs9C,EAAMh/C,OAAO,GAAM,GACtDiN,KAAK7G,MAAM6jE,iBAAiBjrB,MAjBkB,oCAqB/C,GAAI19C,EAAKq0C,YACd,GAA8B,wBAA1Br0C,EAAKq0C,YAAY9zC,MAA4D,qBAA1BP,EAAKq0C,YAAY9zC,KAA6B,CACnG,IAAMsE,EAAK7E,EAAKq0C,YAAYxvC,GAC5B,IAAKA,EAAI,MAAM,IAAI5I,MAAM,qBACzB0P,KAAK68D,sBAAsBxoE,EAAM6E,EAAGzE,WAC/B,GAA8B,wBAA1BJ,EAAKq0C,YAAY9zC,KAAgC,WAChCP,EAAKq0C,YAAY8uB,cADe,IAC1D,2BAAyD,KAA9C9uB,EAA8C,QACvD1oC,KAAKihC,iBAAiByH,EAAYxvC,KAFsB,+BAUhE,GAFiC8G,KAAKzL,MAAMwlB,eAAe/Z,KAAKzL,MAAMwlB,eAAehpB,OAAS,GAEjEA,OAC3B,MAAMiP,KAAKwX,MAAMnjB,EAAKtB,MAAOsW,EAAc2I,8B,8BAI/C,SAAiB3d,GACf,GAAkB,eAAdA,EAAKO,KACPoL,KAAK68D,sBAAsBxoE,EAAMA,EAAKI,WACjC,GAAkB,kBAAdJ,EAAKO,KAA0B,WACrBP,EAAKoU,YADgB,IACxC,2BAAoC,KAAzB6vB,EAAyB,QAClCt4B,KAAKihC,iBAAiB3I,IAFgB,oCAInC,GAAkB,iBAAdjkC,EAAKO,KAAyB,WACpBP,EAAKmT,UADe,IACvC,2BAAkC,KAAvBuoD,EAAuB,QAC5BA,GACF/vD,KAAKihC,iBAAiB8uB,IAHa,mCAMhB,mBAAd17D,EAAKO,KACdoL,KAAKihC,iBAAiB5sC,EAAK3E,OACJ,gBAAd2E,EAAKO,KACdoL,KAAKihC,iBAAiB5sC,EAAKqwC,UACJ,sBAAdrwC,EAAKO,MACdoL,KAAKihC,iBAAiB5sC,EAAKu9C,Q,mCAI/B,SAAsBv9C,EAAMI,GACtBuL,KAAKwlB,oBAAoB7wB,IAAIF,IAC/BuL,KAAKwX,MAAMnjB,EAAKtB,MAAgB,YAAT0B,EAAqB4U,EAAc2B,uBAAyB3B,EAAc4B,gBAAiBxW,GAGpHuL,KAAKwlB,oBAAoBrwB,IAAIV,K,mCAG/B,WACE,IAAMwoE,EAAQ,GACVpwB,GAAQ,EAGZ,IAFA7sC,KAAKwkC,OAAO/jC,EAAQY,SAEZrB,KAAKikB,IAAIxjB,EAAQe,SAAS,CAChC,GAAIqrC,EACFA,GAAQ,OAGR,GADA7sC,KAAKwkC,OAAO/jC,EAAQmB,OAChB5B,KAAKikB,IAAIxjB,EAAQe,QAAS,MAGhC,IAAMnN,EAAO2L,KAAKqiC,YACZ66B,EAAWl9D,KAAKpB,MAAM6B,EAAQzD,QAC9B+0C,EAAQ/xC,KAAKmyC,wBACnB99C,EAAK09C,MAAQA,EAET/xC,KAAKkkB,cAAc,MACrB7vB,EAAKgvC,SAAWrjC,KAAKmyC,wBAErB99C,EAAKgvC,SADI65B,EACOx2C,GAAmBqrB,GAEnBxrB,GAAgBwrB,GAGlCkrB,EAAM7qE,KAAK4N,KAAKwiC,WAAWnuC,EAAM,oBAGnC,OAAO4oE,I,mCAGT,WACE,GAAIj9D,KAAKpB,MAAM6B,EAAQzD,QAAS,CAC9B,IAAMkC,EAASc,KAAKo1C,mBAAmBp1C,KAAKzL,MAAM7E,OAC5CytE,EAAYj+D,EAAOxP,MAAMkP,MAAM41D,IAMrC,OAJI2I,GACFn9D,KAAKwX,MAAMtY,EAAOnM,MAAOsW,EAAc6E,iCAAkCivD,EAAU,GAAG30D,WAAW,GAAG40D,SAAS,KAGxGl+D,EAGT,OAAOc,KAAK2mC,iBAAgB,K,yBAG9B,SAAYtyC,GAGV,GAFAA,EAAKuU,WAAa,IAEb5I,KAAKpB,MAAM6B,EAAQzD,QAAS,CAC/B,IACMqgE,GADar9D,KAAKs9D,iCAAiCjpE,IACxB2L,KAAKikB,IAAIxjB,EAAQmB,OAC5C25D,EAAU8B,GAAar9D,KAAKinD,8BAA8B5yD,GAC5DgpE,IAAc9B,GAASv7D,KAAKknD,2BAA2B7yD,GAC3D2L,KAAKumC,iBAAiB,QAGxBlyC,EAAK7D,OAASwP,KAAKmnD,oBACnB,IAAMqV,EAAax8D,KAAKy8D,6BAExB,GAAID,EACFnoE,EAAKmoE,WAAaA,MACb,CACL,IAAMp5B,EAAapjC,KAAKu9D,6BAEpBn6B,IACF/uC,EAAK+uC,WAAaA,GAKtB,OADApjC,KAAKsnC,YACEtnC,KAAKwiC,WAAWnuC,EAAM,uB,+BAG/B,WAEE,OADK2L,KAAKpB,MAAM6B,EAAQzD,SAASgD,KAAK2jB,aAC/B3jB,KAAKskC,kB,sCAGd,SAAyBjwC,GACvB,OAAO2L,KAAKpB,MAAM6B,EAAQhM,Q,uCAG5B,SAA0BJ,EAAMw9C,EAAWj9C,EAAMk9C,GAC/CD,EAAUE,MAAQ/xC,KAAK2mC,kBACvB3mC,KAAKgyC,UAAUH,EAAUE,MAAOD,EAnsZf3J,GAosZjB9zC,EAAKuU,WAAWxW,KAAK4N,KAAKwiC,WAAWqP,EAAWj9C,M,gCAGlD,WACE,IAAM4oE,EAAQ,GACRC,EAAY,IAAItsE,IAEtB,EAAG,CACD,GAAI6O,KAAKpB,MAAM6B,EAAQe,QACrB,MAGF,IAAMnN,EAAO2L,KAAKqiC,YACZuuB,EAAU5wD,KAAKzL,MAAM7E,MAgB3B,GAdI+tE,EAAU9oE,IAAIi8D,IAChB5wD,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAc4E,kCAAmC2iD,GAGhF6M,EAAUtoE,IAAIy7D,GAEV5wD,KAAKpB,MAAM6B,EAAQzD,QACrB3I,EAAK3D,IAAMsP,KAAKo1C,mBAAmBwb,GAEnCv8D,EAAK3D,IAAMsP,KAAK2mC,iBAAgB,GAGlC3mC,KAAKwkC,OAAO/jC,EAAQqB,QAEf9B,KAAKpB,MAAM6B,EAAQzD,QACtB,MAAMgD,KAAK2jB,WAAW3jB,KAAKzL,MAAMxB,MAAOsW,EAAc2E,6BAGxD3Z,EAAK3E,MAAQsQ,KAAKo1C,mBAAmBp1C,KAAKzL,MAAM7E,OAChDsQ,KAAKwiC,WAAWnuC,EAAM,mBACtBmpE,EAAMprE,KAAKiC,SACJ2L,KAAKikB,IAAIxjB,EAAQmB,QAE1B,OAAO47D,I,wCAGT,WACE,IAAIx9D,KAAKpB,MAAM6B,EAAQyE,QAAWlF,KAAKmkB,wBAIrC,OAAInkB,KAAKgJ,UAAU,oBAA4B,GACxC,KAJPhJ,KAAKmd,aAAa,oBAClBnd,KAAKuY,OAMP,IAAMilD,EAAQ,GACRp6B,EAAa,IAAIjyC,IAEvB,EAAG,CACD,IAAMkD,EAAO2L,KAAKqiC,YAclB,GAbAhuC,EAAK3D,IAAMsP,KAAK2mC,iBAAgB,GAEV,SAAlBtyC,EAAK3D,IAAI+D,MACXuL,KAAKwX,MAAMnjB,EAAK3D,IAAIqC,MAAOsW,EAAc0E,iCAAkC1Z,EAAK3D,IAAI+D,MAGlF2uC,EAAWzuC,IAAIN,EAAK3D,IAAI+D,OAC1BuL,KAAKwX,MAAMnjB,EAAK3D,IAAIqC,MAAOsW,EAAc4E,kCAAmC5Z,EAAK3D,IAAI+D,MAGvF2uC,EAAWjuC,IAAId,EAAK3D,IAAI+D,MACxBuL,KAAKwkC,OAAO/jC,EAAQqB,QAEf9B,KAAKpB,MAAM6B,EAAQzD,QACtB,MAAMgD,KAAK2jB,WAAW3jB,KAAKzL,MAAMxB,MAAOsW,EAAc2E,6BAGxD3Z,EAAK3E,MAAQsQ,KAAKo1C,mBAAmBp1C,KAAKzL,MAAM7E,OAChDsQ,KAAKwiC,WAAWnuC,EAAM,mBACtBmpE,EAAMprE,KAAKiC,SACJ2L,KAAKikB,IAAIxjB,EAAQmB,QAE1B,OAAO47D,I,wCAGT,WACE,IAAIx9D,KAAKgkB,aAAa,WAAchkB,KAAKmkB,wBAIvC,OAAInkB,KAAKgJ,UAAU,oBAA4B,GACxC,KAJPhJ,KAAKmd,aAAa,oBAClBnd,KAAKuY,OAMPvY,KAAKikB,IAAIxjB,EAAQY,QACjB,IAAMm8D,EAAQx9D,KAAK09D,qBAEnB,OADA19D,KAAKikB,IAAIxjB,EAAQe,QACVg8D,I,8CAGT,SAAiCnpE,GAC/B,QAAI2L,KAAK29D,yBAAyBtpE,KAChC2L,KAAK49D,0BAA0BvpE,EAAM2L,KAAKqiC,YAAa,yBAA0B,6BAC1E,K,2CAMX,SAA8BhuC,GAC5B,GAAI2L,KAAKpB,MAAM6B,EAAQoD,MAAO,CAC5B,IAAMguC,EAAY7xC,KAAKqiC,YAIvB,OAHAriC,KAAKuY,OACLvY,KAAKumC,iBAAiB,MACtBvmC,KAAK49D,0BAA0BvpE,EAAMw9C,EAAW,2BAA4B,+BACrE,EAGT,OAAO,I,wCAGT,SAA2Bx9C,GACzB,IAAIw4C,GAAQ,EAGZ,IAFA7sC,KAAKwkC,OAAO/jC,EAAQY,SAEZrB,KAAKikB,IAAIxjB,EAAQe,SAAS,CAChC,GAAIqrC,EACFA,GAAQ,MACH,CACL,GAAI7sC,KAAKikB,IAAIxjB,EAAQqB,OACnB,MAAM9B,KAAKwX,MAAMxX,KAAKzL,MAAMxB,MAAOsW,EAAcyB,wBAInD,GADA9K,KAAKwkC,OAAO/jC,EAAQmB,OAChB5B,KAAKikB,IAAIxjB,EAAQe,QAAS,MAGhCxB,KAAK69D,qBAAqBxpE,M,kCAI9B,SAAqBA,GACnB,IAAMw9C,EAAY7xC,KAAKqiC,YACjBy7B,EAAmB99D,KAAKpB,MAAM6B,EAAQzD,QAG5C,GAFA60C,EAAUU,SAAWvyC,KAAKmyC,wBAEtBnyC,KAAKkkB,cAAc,MACrB2tB,EAAUE,MAAQ/xC,KAAK2mC,sBAClB,CACL,IACE4L,EACEV,EADFU,SAGF,GAAIurB,EACF,MAAM99D,KAAKwX,MAAMq6B,EAAU9+C,MAAOsW,EAAc0C,sBAAuBwmC,EAAS7iD,OAGlFsQ,KAAK0yC,kBAAkBH,EAAS99C,KAAMo9C,EAAU9+C,OAAO,GAAM,GAC7D8+C,EAAUE,MAAQxrB,GAAgBgsB,GAGpCvyC,KAAKgyC,UAAUH,EAAUE,MAAO,mBAh2Zf5J,GAi2ZjB9zC,EAAKuU,WAAWxW,KAAK4N,KAAKwiC,WAAWqP,EAAW,sB,yBAGlD,SAAY/D,GACV,MAAsB,eAAfA,EAAMl5C,MAAwC,SAAfk5C,EAAMr5C,S,GArrDlBmzD,KA+wD9B,SAASmW,GAAUlmE,EAAS0Q,GAC1B,IAAI47C,EAAMuQ,GAOV,OALe,MAAX78D,GAAmBA,EAAQ3F,WAxvIjC,SAAyBA,GACvB,GAAI8W,GAAU9W,EAAS,cAAe,CACpC,GAAI8W,GAAU9W,EAAS,qBACrB,MAAM,IAAI5B,MAAM,mEAGlB,IAAM0tE,EAAyB5gD,GAAgBlrB,EAAS,aAAc,0BAEtE,GAA8B,MAA1B8rE,EACF,MAAM,IAAI1tE,MAAM,mQACX,GAAsC,mBAA3B0tE,EAChB,MAAM,IAAI1tE,MAAM,+CAIpB,GAAI0Y,GAAU9W,EAAS,SAAW8W,GAAU9W,EAAS,cACnD,MAAM,IAAI5B,MAAM,+CAGlB,GAAI0Y,GAAU9W,EAAS,iBAAmB8W,GAAU9W,EAAS,eAC3D,MAAM,IAAI5B,MAAM,wDAGlB,GAAI0Y,GAAU9W,EAAS,oBAAqB,CAC1C,IAAM+rE,EAAW7gD,GAAgBlrB,EAAS,mBAAoB,YAE9D,IAAK+tC,GAAmBnhB,SAASm/C,GAAW,CAC1C,IAAMC,EAAej+B,GAAmBpqC,KAAI,SAAAsoE,GAAC,iBAAQA,EAAR,QAAcziE,KAAK,MAChE,MAAM,IAAIpL,MAAJ,oFAAuF4tE,EAAvF,MAGR,IAAME,EAAoBp1D,GAAU9W,EAAS,mBAAkF,SAA7DkrB,GAAgBlrB,EAAS,iBAAkB,cAE7G,GAAiB,SAAb+rE,EAAqB,CACvB,GAAIj1D,GAAU9W,EAAS,gBACrB,MAAM,IAAI5B,MAAM,4DAGlB,GAAI0Y,GAAU9W,EAAS,eACrB,MAAM,IAAI5B,MAAM,2DAGlB,IAAM+tE,EAAajhD,GAAgBlrB,EAAS,mBAAoB,cAEhE,IAAKguC,GAAaphB,SAASu/C,GAAa,CACtC,IAAMC,EAAYp+B,GAAarqC,KAAI,SAAA6oD,GAAC,iBAAQA,EAAR,QAAchjD,KAAK,MACvD,MAAM,IAAIpL,MAAJ,wHAA2HguE,EAA3H,MAGR,GAAmB,MAAfD,GAAsBD,EACxB,MAAM,IAAI9tE,MAAM,+IAEb,GAAiB,UAAb2tE,GAAwBG,EACjC,MAAM,IAAI9tE,MAAM,0HAIpB,GAAI0Y,GAAU9W,EAAS,oBAAqB,CAExC,GAAI8W,GAAU9W,EAAS,oBACrB,MAAM,IAAI5B,MAAM,iEAKlB,GAA2C,aAFA8sB,GAAgBlrB,EAAS,mBAAoB,WAGtF,MAAM,IAAI5B,MAAM,wJAKtB,GAAI0Y,GAAU9W,EAAS,oBAAsBiuC,GAA8BrhB,SAAS1B,GAAgBlrB,EAAS,iBAAkB,eAC7H,MAAM,IAAI5B,MAAM,+EAAiF6vC,GAA8BtqC,KAAI,SAAAsoE,GAAC,iBAAQA,EAAR,QAAcziE,KAAK,OAGzJ,GAAIsN,GAAU9W,EAAS,wBAA0B8W,GAAU9W,EAAS,iBAAkB,CACpF,IAAMqJ,EAAQ,IAAIjL,MAAM,gGAExB,MADAiL,EAAMgjE,eAAiB,gBACjBhjE,GA2qINijE,CAAgB3mE,EAAQ3F,SACxBiyD,EAQJ,SAAwBsa,GACtB,IAAMC,EAAatX,GAAiB3vD,QAAO,SAAAhD,GAAI,OAAIuU,GAAUy1D,EAAoBhqE,MAC3E/D,EAAMguE,EAAWhjE,KAAK,KACxByoD,EAAMwa,GAAiBjuE,GAE3B,IAAKyzD,EAAK,CACRA,EAAMuQ,GADE,UAGagK,GAHb,IAGR,2BAAiC,KAAtB31D,EAAsB,QAC/Bo7C,EAAM/jB,GAAar3B,GAAQo7C,IAJrB,8BAORwa,GAAiBjuE,GAAOyzD,EAG1B,OAAOA,EAvBCya,CAAe/mE,EAAQ3F,UAGxB,IAAIiyD,EAAItsD,EAAS0Q,GAG1B,IAAMo2D,GAAmB,GAoBzBlvE,EAAQgD,MA9ER,SAAe8V,EAAO1Q,GACpB,IAAIgD,EAEJ,GAAsE,iBAAzC,OAAvBA,EAAWhD,QAAmB,EAASgD,EAAStI,YA+BpD,OAAOwrE,GAAUlmE,EAAS0Q,GAAO9V,QA9BjCoF,EAAUtI,OAAOY,OAAO,GAAI0H,GAE5B,IACEA,EAAQtF,WAAa,SACrB,IAAMrC,EAAS6tE,GAAUlmE,EAAS0Q,GAC5BvW,EAAM9B,EAAOuC,QAEnB,GAAIvC,EAAO2Y,kBACT,OAAO7W,EAGT,GAAI9B,EAAO4Y,4BACT,IAEE,OADAjR,EAAQtF,WAAa,SACdwrE,GAAUlmE,EAAS0Q,GAAO9V,QACjC,MAAOiuC,SAET1uC,EAAIuE,QAAQhE,WAAa,SAG3B,OAAOP,EACP,MAAO6sE,GACP,IAEE,OADAhnE,EAAQtF,WAAa,SACdwrE,GAAUlmE,EAAS0Q,GAAO9V,QACjC,MAAOqsE,IAET,MAAMD,IAgDZpvE,EAAQ80C,gBA1CR,SAAyBh8B,EAAO1Q,GAC9B,IAAM3H,EAAS6tE,GAAUlmE,EAAS0Q,GAMlC,OAJIrY,EAAO2H,QAAQuiB,aACjBlqB,EAAOqE,MAAMskB,QAAS,GAGjB3oB,EAAO6uE,iBAoChBtvE,EAAQuvE,SAAWv+D,G,iCChvcnB,YAEAlR,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQqD,iBAAmBA,EAC3BrD,EAAQoC,QAsIR,SAAkBotE,EAAUC,EAAYC,GAAsB,IAAX9uE,EAAW,uDAAJ,GACxD,IAAK+uE,EAAyB,CAC5BA,GAA0B,EAC1B,IAAMxsE,EAAU,sGAEhB,GAAIysE,EAAQC,YACVD,EAAQC,YAAY1sE,EAAS,0BACxB,CACL,IAAM2sE,EAAmB,IAAIjvE,MAAMsC,GACnC2sE,EAAiB9qE,KAAO,qBACxB+qE,QAAQC,KAAK,IAAInvE,MAAMsC,KAK3B,IAAM8sE,EAAW,CACf3sE,MAAO,CACL6T,OAHJu4D,EAAYQ,KAAKC,IAAIT,EAAW,GAI5Bz4D,KAAMw4D,IAGV,OAAOpsE,EAAiBmsE,EAAUS,EAAUrvE,IAzJ9C,IAAIwvE,EAAansE,EAAQ,KAErB0rE,GAA0B,EAE9B,SAASljE,EAAQF,GACf,MAAO,CACL8jE,OAAQ9jE,EAAMoB,KACd2iE,OAAQ/jE,EAAMgkE,IAAIxiE,KAClB5K,QAASoJ,EAAMgkE,IAAIxiE,MAIvB,IAAME,EAAU,0BAEhB,SAASuiE,EAAettE,EAAKnC,EAAQH,GACnC,IAAMojB,EAAWlkB,OAAOY,OAAO,CAC7ByW,OAAQ,EACRF,MAAO,GACN/T,EAAII,OACD6gB,EAASrkB,OAAOY,OAAO,GAAIsjB,EAAU9gB,EAAImU,KAC/C,EAGIzW,GAAQ,GAHZ,IACE6vE,kBADF,MACe,EADf,MAEEC,kBAFF,MAEe,EAFf,EAIM9lD,EAAY5G,EAAS/M,KACrB05D,EAAc3sD,EAAS7M,OACvBy5D,EAAUzsD,EAAOlN,KACjB45D,EAAY1sD,EAAOhN,OACrB7T,EAAQ4sE,KAAKC,IAAIvlD,GAAa6lD,EAAa,GAAI,GAC/Cp5D,EAAM64D,KAAKY,IAAI/vE,EAAOO,OAAQsvE,EAAUF,IAEzB,IAAf9lD,IACFtnB,EAAQ,IAGO,IAAbstE,IACFv5D,EAAMtW,EAAOO,QAGf,IAAMyvE,EAAWH,EAAUhmD,EACrBomD,EAAc,GAEpB,GAAID,EACF,IAAK,IAAI7vE,EAAI,EAAGA,GAAK6vE,EAAU7vE,IAAK,CAClC,IAAMuuE,EAAavuE,EAAI0pB,EAEvB,GAAK+lD,EAEE,GAAU,IAANzvE,EAAS,CAClB,IAAM+vE,EAAelwE,EAAO0uE,EAAa,GAAGnuE,OAC5C0vE,EAAYvB,GAAc,CAACkB,EAAaM,EAAeN,EAAc,QAChE,GAAIzvE,IAAM6vE,EACfC,EAAYvB,GAAc,CAAC,EAAGoB,OACzB,CACL,IAAMI,EAAelwE,EAAO0uE,EAAavuE,GAAGI,OAC5C0vE,EAAYvB,GAAc,CAAC,EAAGwB,QAR9BD,EAAYvB,IAAc,OAc1BuB,EAAYpmD,GAFZ+lD,IAAgBE,GACdF,GACuB,CAACA,EAAa,GAKhB,CAACA,EAAaE,EAAYF,GAIvD,MAAO,CACLrtE,QACA+T,MACA25D,eAIJ,SAAS3tE,EAAiBmsE,EAAUtsE,GAAgB,IAAXtC,EAAW,uDAAJ,GACxCgO,GAAehO,EAAKswE,eAAiBtwE,EAAKmO,cAAe,EAAIqhE,EAAW/jE,iBAAiBzL,GACzF2L,GAAQ,EAAI6jE,EAAW9jE,UAAU1L,GACjC4L,EAAOC,EAAQF,GAEf4kE,EAAiB,SAACC,EAAS7jE,GAC/B,OAAOqB,EAAcwiE,EAAQ7jE,GAAUA,GAGnC8jE,EAAQ7B,EAASxjE,MAAMiC,GAC7B,EAIIuiE,EAAettE,EAAKmuE,EAAOzwE,GAH7B0C,EADF,EACEA,MACA+T,EAFF,EAEEA,IACA25D,EAHF,EAGEA,YAEIM,EAAapuE,EAAII,OAAqC,kBAArBJ,EAAII,MAAM6T,OAC3Co6D,EAAiBtrD,OAAO5O,GAAK/V,OAC7BkwE,EAAmB5iE,GAAc,EAAIwhE,EAAWhuE,SAASotE,EAAU5uE,GAAQ4uE,EAC7EiC,EAAQD,EAAiBxlE,MAAMiC,GAASvL,MAAMY,EAAO+T,GAAKjR,KAAI,SAAC6Q,EAAM1R,GACvE,IAAM8H,EAAS/J,EAAQ,EAAIiC,EACrBmsE,EAAe,WAAIrkE,GAAS3K,OAAO6uE,GACnClB,EAAS,IAAH,OAAOqB,EAAP,MACNC,EAAYX,EAAY3jE,GACxBukE,GAAkBZ,EAAY3jE,EAAS,GAE7C,GAAIskE,EAAW,CACb,IAAIE,EAAa,GAEjB,GAAI9vE,MAAMC,QAAQ2vE,GAAY,CAC5B,IAAMG,EAAgB76D,EAAKvU,MAAM,EAAGwtE,KAAKC,IAAIwB,EAAU,GAAK,EAAG,IAAIhtD,QAAQ,SAAU,KAC/EotD,EAAkBJ,EAAU,IAAM,EACxCE,EAAa,CAAC,MAAOV,EAAe3kE,EAAK6jE,OAAQA,EAAO1rD,QAAQ,MAAO,MAAO,IAAKmtD,EAAeX,EAAe3kE,EAAK8jE,OAAQ,KAAK0B,OAAOD,IAAkB9lE,KAAK,IAE7J2lE,GAAkBhxE,EAAKuC,UACzB0uE,GAAc,IAAMV,EAAe3kE,EAAKrJ,QAASvC,EAAKuC,UAI1D,MAAO,CAACguE,EAAe3kE,EAAK8jE,OAAQ,KAAMa,EAAe3kE,EAAK6jE,OAAQA,GAASp5D,EAAK3V,OAAS,EAAd,WAAsB2V,GAAS,GAAI46D,GAAY5lE,KAAK,IAEnI,iBAAWklE,EAAe3kE,EAAK6jE,OAAQA,IAAvC,OAAiDp5D,EAAK3V,OAAS,EAAd,WAAsB2V,GAAS,OAEjFhL,KAAK,MAMR,OAJIrL,EAAKuC,UAAYmuE,IACnBG,EAAQ,GAAH,OAAM,IAAIO,OAAOT,EAAiB,IAAlC,OAAuC3wE,EAAKuC,QAA5C,aAAwDsuE,IAG3D7iE,EACKrC,EAAM0lE,MAAMR,GAEZA,K,wFCtIX3xE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAsBR,SAAwBgH,EAAMe,EAAMlC,EAAgBiqE,EAASC,GAC3D,IAAMC,EAAa,CACjBhtE,YAAQxD,EACR8H,WAAO9H,EACPgD,UAAMhD,EACNwH,UAAMxH,EACNuI,UAAMvI,EACNywE,aAASzwE,EACT0wE,cAAU1wE,EACV2wE,eAAW3wE,EACX4wE,eAAW5wE,EACX6wE,aAAc,GACdC,WAAW,EACXC,eAAe,EACfC,eAAWhxE,EACXixE,qBAAiBjxE,EACjBkxE,qBAAiBlxE,EACjBmxE,yBAAqBnxE,EACrBoxE,gBAAgB,EAChBC,eAAgB,GAChBroE,KAAM,GACNsoE,YAAa,GACbC,mBAAmB,EACnBC,gBAAgB,EAChBC,WAAY,KACZnB,SAAS,EACToB,YAAa,IAAIziE,IACjB0iE,QAAS,CACPC,SAAU,CACRC,aAAa,EACb1zB,KAAM,GACN35C,IAAK,IAAIyK,KAEX6qC,OAAQ,CACN+3B,aAAa,EACb1zB,KAAM,GACN35C,IAAK,IAAIyK,OAKT6iE,EAAW,SAAAC,GACf7zE,OAAOY,OAAO0xE,EAAYuB,IAGtBC,EAAoBjsE,EAAM7D,SAAS+vE,SAAS3zE,MAAM,CAAC4zE,EAAqBC,mBAAoB,CAChGC,eADgG,SACjF5qE,GACbgpE,EAAWc,YAAYvwE,KAAKyG,OAiChC,SAAS6qE,IAKP,GAjCF,WACE,IADgC,EAC5BjB,GAAiB,EACfkB,EAAQ9B,EAAWhpE,KAAKC,IAAI,aAFF,IAIb6qE,GAJa,IAIhC,6BACElB,EADwB,QACFmB,OAAO,OAAQ,mBALP,8BAShC,IAAInB,EAAJ,CACA,IAAI95D,EAAQtO,EAEZ,GAAIwnE,EAAWM,UAAW,CACxB,IAAM1jE,EAAcrH,EAAMgL,SAAS5L,WAAWxE,IAA7B,4FAKjB2W,EAASlK,EAAYkK,OACrBtO,EAAOoE,EAAYpE,UAEnBsO,EAAS,GACTtO,EAAOjD,EAAMkC,MAAMvD,eAAe,IAGpC8rE,EAAWhpE,KAAKC,IAAI,QAAQ+qE,iBAAiB,OAAQzsE,EAAMkC,MAAMwqE,YAAY,cAAe1sE,EAAMkC,MAAMrD,WAAW,eAAgB0S,EAAQtO,KAI3I0pE,GAoBF,WACE,IADkB,EACZC,EAAiBnC,EAAWhpE,KAAKC,IAAI,aADzB,IAGCkrE,GAHD,IAGlB,2BAAmC,KAAxBnrE,EAAwB,QAC3BxE,EAAOwE,EAAKxE,KAElB,GAAIwE,EAAKmhE,kBACP,MAAMnhE,EAAKorE,oBAAoB,uCAGjC,GAAI5vE,EAAKmuD,WACP,MAAM3pD,EAAKorE,oBAAoB,2EAG7B7sE,EAAMkC,MAAMwgE,cAAczlE,IAAO,WACnC,IAAMstC,EAA8B,gBAAdttC,EAAKiuC,KACL,IAAIihC,EAAqB1xE,QAAQ,CACrDqyE,WAAYrrE,EACZsrE,UAAWtC,EAAWE,SACtBqC,SAAUvC,EAAWI,UACrB3pE,cAAespE,EAAYtpE,cAC3BsB,KAAMioE,EAAWjoE,KACjByqE,cAAexC,EAAWE,WAEd3tD,UACd,IAAM8tD,EAAe,GACrBrpE,EAAKtF,SAAS6D,EAAM7D,SAAS+vE,SAAS3zE,MAAM,CAAC4zE,EAAqBC,mBAAoB,CACpFc,gBADoF,SACpEzrE,GACTA,EAAK0rE,oBAAoBzqE,6BAC5BooE,EAAa9vE,KAAKyG,QAMpB8oC,EACF6iC,EAAgBtC,EAAc7tE,EAAMwE,GAEpC4rE,EAAWpwE,EAAMwE,GAxBgB,IAdrB,+BAnBlB6rE,GAsIF,WACE,IAAK7C,EAAWM,UAAW,OAC3B,IAAMtpE,EAAOgpE,EAAWW,oBAClBnoE,EAAOxB,EAAKC,IAAI,QACtBD,EAAKtF,SAAS8vE,GAEd,IAN2B,EAMvBsB,EAAU,WACZ,IAAM1rE,EAAMJ,EAAKM,MAAMyrE,8BAA8B,QAIrD,OAFAD,EAAU,kBAAMvtE,EAAMkC,MAAMjE,UAAU4D,IAE/BA,GAXkB,IAcJ4oE,EAAWc,aAdP,IAc3B,2BAA+C,KAApCkC,EAAoC,QAE3CxwE,EAEEwwE,EAFFxwE,KAEEwwE,EADFC,WAGaC,mBAAmB,CAChC1pC,OAAQhnC,IAERwwE,EAASxrE,YAAYsrE,KAIvBE,EAASxrE,YAAYjC,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,yBAA0B,CAACN,QA3B5E,8BA8B3B,IAAMO,EAAa,IAAI/zE,IACvB0H,EAAKtF,SAAS6D,EAAM7D,SAAS+vE,SAAS3zE,MAAM,CAAC4zE,EAAqBC,mBAAoB,CACpF2B,MADoF,SAC9EtsE,GACJ,IACExE,EAEEwE,EAFFxE,KACAywE,EACEjsE,EADFisE,WAGEA,EAAWnxE,iBAAiB,CAC9BkG,OAAQxF,KAER6wE,EAAW/vE,IAAI2vE,QAKrB,IA9C2B,EAiEvBM,EAnBAC,IAAgCH,EAAWznD,KA9CpB,IAgDHynD,GAhDG,IAgD3B,2BAAoC,KAAzBI,EAAyB,QAClCC,EAAcD,EAAWzD,EAAWI,UAAW0C,EAAStqE,GAEpDgrE,GACFC,EAAUtlC,MAAK,SAAU8kC,GACvB,OAAIA,IAAejsE,IAIfisE,EAAWnlE,UAAYmlE,EAAWU,iBAAmBV,EAAWhrE,6BAClEurE,GAA8B,GACvB,QAFT,OAzDqB,8BAoEzBD,EADEvD,EAAWF,QACA,SAAA8D,GACX,IAAMC,EAAWtuE,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,yBAA0B,CAACN,MAEjG,OAAOc,EAAYruE,EAAMkC,MAAMqsE,kBAAkB,KAAMF,EAAWC,GAAYA,GAGnE,SAAAD,GAAS,OAAIruE,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,6BAA8B,CAACN,KAAWvlE,OAAOqmE,GAAa,MAG/I,IAAMG,EAAYvrE,EAAKvB,IAAI,QAEtB8sE,EAAU70E,QAAW60E,EAAU3wD,MAAM4wD,qBACxCxrE,EAAKyrE,cAAc,OAAQ1uE,EAAMkC,MAAMysE,gBAAgBV,EAA8BV,IAAYS,MAhFxE,UAmFFvD,EAAWK,cAnFT,IAmF3B,2BAAkD,KAAvC8D,EAAuC,QAChDA,EAAWltE,IAAI,YAAYO,YAAY+rE,EAAWY,EAAW3xE,KAAKqwC,YApFzC,+BArI3BuhC,GAEIpE,EAAWU,gBAAiB,CAC9B,IACED,EAGET,EAHFS,gBACAC,EAEEV,EAFFU,gBACAF,EACER,EADFQ,UAEFC,EAAgBjoE,KAAOioE,EAAgBjoE,KAAK+E,OAAOmjE,EAAgBloE,KAAKA,MAExEjD,EAAMkC,MAAM4sE,SAAS7D,EAAWE,GAEhCnrE,EAAMkC,MAAM4sE,SAAS5D,EAAiBC,EAAgBloE,MAGxD8rE,IA+CF,SAASA,IACPC,IASA,IARA,IACE/rE,EACEwnE,EADFxnE,KAEIgsE,EAAQ,CACZpD,SAAU,KACV93B,OAAQ,MAGV,MAAwB,CAAC,SAAU,YAAnC,eAAgD,CAA3C,IAAMm7B,EAAS,KACdzE,EAAWmB,QAAQsD,GAAW92B,KAAKz+C,SACrCs1E,EAAMC,GAAazE,EAAWmB,QAAQsD,GAAW92B,KAAK35C,KAAI,SAAA0wE,GAGxD,IAFA,IAAMC,EAAMpvE,EAAMkC,MAAMmtE,iBAAiB,CAACrvE,EAAMkC,MAAMotE,eAAetvE,EAAMkC,MAAMrD,WAAW,OAAQswE,EAAK71E,OAEzG,MAAmB,CAAC,MAAO,MAAO,SAAlC,eAA4C,CAAvC,IAAM4xC,EAAI,KACK,MAAdikC,EAAKjkC,IACPkkC,EAAI/9D,WAAWrW,KAAKgF,EAAMkC,MAAMotE,eAAetvE,EAAMkC,MAAMrD,WAAWqsC,GAAOikC,EAAKjkC,KAItF,OAAOkkC,MAKb,GAAIH,EAAMpD,UAAYoD,EAAMl7B,OAAQ,CAIlC,IAHA,IAAIpwC,EAAO,CAAC3D,EAAMkC,MAAMjE,UAAUwsE,EAAWE,UAAWsE,EAAMpD,SAAW7rE,EAAMkC,MAAMqtE,gBAAgBN,EAAMpD,UAAY7rE,EAAMkC,MAAMstE,cAAeP,EAAMl7B,OAAS/zC,EAAMkC,MAAMqtE,gBAAgBN,EAAMl7B,QAAU/zC,EAAMkC,MAAMstE,eACrNC,EAAmB,EAEdl2E,EAAI,EAAGA,EAAIoK,EAAKhK,OAAQJ,IAC1ByG,EAAMkC,MAAMwtE,cAAc/rE,EAAKpK,MAAKk2E,EAAmBl2E,GAG9DoK,EAAOA,EAAK5I,MAAM,EAAG00E,EAAmB,GACxCxsE,EAAKjI,KAAKgF,EAAMkC,MAAMtD,oBAAoBoB,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,eAAgBlqE,MAInH,SAASwqE,EAAcD,EAAWlB,EAAUO,EAAStqE,GACnD,IACI3E,EADEqxE,EAAgBzB,EAAUjxE,KAG5ButE,EAAYrpE,4BACdwuE,EAAcr+D,UAAUtB,QAAQhQ,EAAMkC,MAAM0tE,kBAEL,IAAnCD,EAAcr+D,UAAU3X,QAAgBqG,EAAMkC,MAAM2tE,gBAAgBF,EAAcr+D,UAAU,KAAOtR,EAAMkC,MAAMxF,aAAaizE,EAAcr+D,UAAU,GAAGg8B,SAAU,CACnKjwC,KAAM,eAENsyE,EAAcr+D,UAAU,GAAKq+D,EAAcr+D,UAAU,GAAGg8B,SACxDqiC,EAAcltE,OAASzC,EAAMkC,MAAM4tE,iBAAiB9vE,EAAMkC,MAAMjE,UAAU+uE,GAAWhtE,EAAMkC,MAAMrD,WAAW,WAE5G8wE,EAAcltE,OAASzC,EAAMkC,MAAM4tE,iBAAiB9vE,EAAMkC,MAAMjE,UAAU+uE,GAAWhtE,EAAMkC,MAAMrD,WAAW,SAG9GP,EAAO0B,EAAMkC,MAAMqsE,kBAAkB,KAAMoB,EAAe3vE,EAAMkC,MAAM0tE,mBAEtEtxE,GAAO,EAAIyxE,EAA8Bt1E,SAASuF,EAAMkC,MAAMjE,UAAUwsE,EAAWG,WAAY5qE,EAAMkC,MAAM0tE,iBAAkBD,EAAcr+D,WAAW,GAGpJ48D,EAAUR,WAAWlxE,yBAA2B0xE,EAAUR,WAAWsC,YAAc/sE,EAAKhG,KAAKgG,MAAQA,EAAKhG,KAAKgG,KAAKtJ,OAAS,IAAMu0E,EAAUR,WAAWp0E,KACtJmxE,EAAWc,YAAY5xE,SACzB2E,EAAO0B,EAAMkC,MAAM+tE,qBAAqB,IAAK1C,IAAWjvE,IAG1D4vE,EAAUR,WAAWzrE,YAAYjC,EAAMkC,MAAMysE,gBAAgBrwE,KAE7D4vE,EAAUjsE,YAAYjC,EAAMkC,MAAM+tE,qBAAqB,IAAK1C,IAAWjvE,IA4F3E,SAAS+uE,EAAWpwE,EAAMwE,GACxB,IAAMM,EAAQN,EAAOA,EAAKM,MAAQ0oE,EAAW1oE,MAE7C,GAAkB,WAAd9E,EAAKiuC,OAgDX,SAAuBjuC,EAAM8E,GAC3B,GAAIyoE,EAAYxpE,kBAAoB/D,EAAKmuD,WAAY,CACnD,IACEuf,EACEF,EADFE,SAGG1tE,EAAK82C,UAgCd,WACE,GAA8B,OAA1B02B,EAAWiB,WAAqB,CAClCK,EAAS,CACPL,WAAYjB,EAAW1oE,MAAMC,sBAAsB,WAGrD,IAAMkuE,EAAalwE,EAAMkC,MAAM4tE,iBAAiBrF,EAAWE,SAAU3qE,EAAMkC,MAAMrD,WAAW,cAEtFsxE,EAAmBnwE,EAAMkC,MAAMC,oBAAoB,MAAO,CAACnC,EAAMkC,MAAME,mBAAmBqoE,EAAWiB,WAAYwE,KAEvHzF,EAAWxnE,KAAKjI,KAAKm1E,IAzCnBC,GACAzF,EAAWF,EAAWiB,YAGxB,IAAM2E,EAAarwE,EAAMkC,MAAM4tE,iBAAiB9vE,EAAMkC,MAAMjE,UAAU0sE,GAAW1tE,EAAK3D,IAAK2D,EAAKkuC,UAAYnrC,EAAMkC,MAAMouE,UAAUrzE,EAAK3D,MAEnIi3E,EAAOvwE,EAAMkC,MAAMsuE,mBAAmB,KAAMvzE,EAAKsU,OAAQtU,EAAKgG,KAAMhG,EAAKg9D,UAAWh9D,EAAKi/C,OAE7Fl8C,EAAMkC,MAAM4sE,SAASyB,EAAMtzE,GAE3B,IAAM3D,EAAM0G,EAAMkC,MAAMuuE,cAAcxzE,EAAMA,EAAK3D,KAE7C0G,EAAMkC,MAAMnF,gBAAgBzD,KAC9Bi3E,GAAO,EAAIzwE,EAAoBrF,SAAS,CACtCwC,KAAMszE,EACNzuE,GAAIxI,EACJyI,WAIJ,IAAMu1C,EAAOt3C,EAAMkC,MAAMtD,oBAAoBoB,EAAMkC,MAAM+tE,qBAAqB,IAAKI,EAAYE,IAK/F,OAHAvwE,EAAMkC,MAAMwuE,iBAAiBp5B,EAAMr6C,GAEnCwtE,EAAWxnE,KAAKjI,KAAKs8C,IACd,EAGT,OAAO,EAlFDq5B,CAAc1zE,EAAM8E,GAD1B,CAIA,IAmBIwmD,EAnBE2mB,EAAYjyE,EAAK82C,OAAS,SAAW,WACrC63B,EAAUnB,EAAWmB,QAAQsD,GAC7B0B,EAAwB,WAAd3zE,EAAKiuC,KAAoB,QAAUjuC,EAAKiuC,KAClD5xC,EAAM0G,EAAMkC,MAAM2uE,iBAAiB5zE,EAAK3D,MAAQ0G,EAAMkC,MAAM4uE,gBAAgB7zE,EAAK3D,KAAO0G,EAAMkC,MAAMxD,cAAc4f,OAAOrhB,EAAK3D,IAAIhB,QAAU0H,EAAMkC,MAAMuuE,cAAcxzE,GAExK6F,EAAK9C,EAAMkC,MAAMG,aAAapF,GAE9B+C,EAAMkC,MAAMnF,gBAAgBzD,GACZ,WAAd2D,EAAKiuC,OACPpoC,GAAK,EAAIhD,EAAoBrF,SAAS,CACpCqH,GAAIxI,EACJ2D,KAAMA,EACN8E,WAIJ6pE,EAAQE,aAAc,GAKnBF,EAAQE,aAAeF,EAAQntE,IAAIlB,IAAIjE,EAAIhB,SAC9CiwD,EAAaqjB,EAAQntE,IAAIiD,IAAIpI,EAAIhB,QACtBs4E,GAAW9tE,EAEN,UAAZ8tE,GACFroB,EAAW7mD,IAAM,KACjB6mD,EAAWvkD,IAAM,MAEjBukD,EAAWjwD,MAAQ,OAGrBiwD,EAAa,EAAH,CACRjvD,IAAKA,GACJs3E,EAAU9tE,GAEb8oE,EAAQxzB,KAAKp9C,KAAKutD,GAEbqjB,EAAQE,aACXF,EAAQntE,IAAIuF,IAAI1K,EAAIhB,MAAOiwD,KAyDjC,SAAS6kB,EAAgBtC,EAAchhC,EAAQroC,GAC7CsqE,EAAS,CACPX,oBAAqB3pE,EACrB0pE,gBAAiBrhC,EACjBuhC,gBAAgB,EAChBP,iBAEF,IACEG,EACER,EADFQ,UAGFjrE,EAAMkC,MAAMwuE,iBAAiBzF,EAAWnhC,GAExCmhC,EAAU15D,OAASu4B,EAAOv4B,OAE1BvR,EAAMkC,MAAM4sE,SAAS7D,EAAUhoE,KAAM6mC,EAAO7mC,MAE5CgoE,EAAUhoE,KAAKknC,WAAaL,EAAO7mC,KAAKknC,WAI1C,WACE,GAAIsgC,EAAWe,kBAAmB,OAClCf,EAAWe,mBAAoB,GAE3Bf,EAAWsG,wBAA0BtG,EAAWuG,uBAClDjC,IAGFtE,EAAWxnE,KAAKjI,KAAKyvE,EAAWQ,WAChC+D,IAZAiC,GAeF,SAASjC,IACP,GAAKvE,EAAWM,YAAaN,EAAWgB,eAAxC,CACA,IAAMb,EAAYnpE,EAAKM,MAAMC,sBAAsB,SACnD+pE,EAAS,CACPN,gBAAgB,EAChBb,cAGGJ,EAAYrpE,4BACfspE,EAAWxnE,KAAK+M,QAAQhQ,EAAMkC,MAAMC,oBAAoB,MAAO,CAACnC,EAAMkC,MAAME,mBAAmBwoE,EAAW5qE,EAAMkC,MAAM0rE,gBAAe,EAAIsD,EAA0Bz2E,SAASgwE,EAAWjoE,MAAO,CAACxC,EAAMkC,MAAMjE,UAAUwsE,EAAWE,gBAGlOF,EAAWxnE,KAAK+M,QAAQhQ,EAAMkC,MAAMtD,oBAAoBoB,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAUpD,EAAWF,QAAU,gBAAkB,YAAa,CAACvqE,EAAMkC,MAAMjE,UAAUwsE,EAAWE,UAAW3qE,EAAMkC,MAAMjE,UAAUwsE,EAAWI,gBA6HjP,OAvEA,SAA0BppE,EAAMe,EAAMlC,EAAgBiqE,GACpDwB,EAAS,CACPtuE,OAAQgE,EAAKhE,OACbsE,MAAON,EAAKM,MACZ9E,KAAMwE,EAAKxE,KACXwE,OACAe,OACA+nE,YAEFwB,EAAS,CACPrB,QAASD,EAAWxtE,KAAK6E,GACzB6oE,SAAUF,EAAWxtE,KAAK6E,GAAK9B,EAAMkC,MAAMrD,WAAW4rE,EAAWxtE,KAAK6E,GAAGzE,MAAQotE,EAAW1oE,MAAMC,sBAAsB,SACxH6oE,UAAWJ,EAAWxtE,KAAKisC,WAC3B6hC,YAAaN,EAAWxtE,KAAKisC,WAC7BgiC,gBAAiBlrE,EAAMkC,MAAMvD,eAAe,MAE9CotE,EAAS,CACPf,cAAeP,EAAWM,WAAazqE,EAAe/C,IAAIktE,EAAWI,UAAUxtE,QAAUotE,EAAW1oE,MAAMovE,WAAW1G,EAAWI,UAAUxtE,MAAM,KAElJ,IACEstE,EAGEF,EAHFE,SACA1tE,EAEEwtE,EAFFxtE,KACAiuE,EACET,EADFS,gBAEFa,EAAS,CACPd,UAAWmG,EAAiBzG,EAAUO,EAAiBjuE,KA5E3D,WACE,IAD4B,EAE1B0uE,EAGElB,EAHFkB,YACA1uE,EAEEwtE,EAFFxtE,KACA8E,EACE0oE,EADF1oE,MAJ0B,IAOT9E,EAAKgG,KAAKA,MAPD,IAO5B,2BAAmC,KAAxB01D,EAAwB,QACjC,GAAK34D,EAAMkC,MAAMwgE,cAAc/J,IAAUA,EAAKxtB,WAC1CppC,EAAMsvE,OAAO1Y,EAAKr/D,KAAK,GAA3B,CACA,IAAMwI,EAAKC,EAAMuvE,iCAAiC3Y,EAAKr/D,KACvDqyE,EAAY3nE,IAAIlC,EAAGzE,KAAMs7D,EAAKr/D,KAC9Bq/D,EAAKr/D,IAAMwI,IAZe,+BA8E5ByvE,GACA,IACEtuE,EACEwnE,EADFxnE,KAEF,EAlEF,WACE,IACE4nE,EAEEJ,EAFFI,UACAc,EACElB,EADFkB,YAEI6F,EAAgB,GAChBC,EAAc,GAEpB,GAAIhH,EAAWM,UAAW,CACxB,IAAIxmE,EAAMvE,EAAMkC,MAAMjE,UAAU4sE,GAE5BJ,EAAWO,gBACbzmE,EAAMvE,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,mBAAoB,CAACtpE,KAChF,EAAI1E,EAAsBpF,SAAS8J,IAGrC,IAAMmyC,EAAQ+zB,EAAW1oE,MAAMuvE,iCAAiCzG,GAChE2G,EAAcx2E,KAAK07C,GACnB+6B,EAAYz2E,KAAKuJ,GACjBwnE,EAAS,CACPlB,UAAW7qE,EAAMkC,MAAMjE,UAAUy4C,KApBL,UAwBJi1B,GAxBI,IAwBhC,2BAAyC,oBAA7BtuE,EAA6B,KAAvB/E,EAAuB,KACvCk5E,EAAcx2E,KAAKgF,EAAMkC,MAAMrD,WAAWxB,IAC1Co0E,EAAYz2E,KAAK1C,IA1Ba,8BA6BhC,MAAO,CACLk5E,gBACAC,eAsCEC,GAFFF,EADF,EACEA,cACAC,EAFF,EAEEA,YAEFnF,IAEK9B,EAAYppE,cACf8pE,EAAgBjoE,KAAK+M,QAAQhQ,EAAMkC,MAAMtD,oBAAoBoB,EAAMkC,MAAM0rE,eAAenD,EAAWjoE,KAAKqrE,UAAU,kBAAmB,CAAC7tE,EAAMkC,MAAM0tE,iBAAkB5vE,EAAMkC,MAAMjE,UAAUwsE,EAAWE,cAGvM1nE,EAAOA,EAAK+E,OAAOyiE,EAAWa,eAAe7sE,KAAI,SAAAqE,GAAE,OAAIA,EAAG9C,EAAMkC,MAAMjE,UAAUwsE,EAAWE,eAC3F,IAAMgH,EAAWlwE,EAAKmwE,iBAClBC,EAAkBpH,EAAWC,SAA2B,IAAhBznE,EAAKtJ,OAEjD,GAAIk4E,IAAoBF,EAAU,WACZlH,EAAWQ,UAAU15D,QADT,IAChC,2BAAiD,KAAtCmlC,EAAsC,QAC/C,IAAK12C,EAAMkC,MAAMxF,aAAag6C,GAAQ,CACpCm7B,GAAkB,EAClB,QAJ4B,+BASlC,IAAM1nC,EAAa0nC,EAAkB5uE,EAAK,GAAGA,KAAKknC,WAAa,GAM/D,GAJKwnC,GACHxnC,EAAWnvC,KAAKgF,EAAMkC,MAAMsnC,UAAUxpC,EAAMkC,MAAMunC,iBAAiB,gBAGjEooC,EACF,OAAO7xE,EAAMkC,MAAMG,aAAaY,EAAK,IAGvCA,EAAKjI,KAAKgF,EAAMkC,MAAMysE,gBAAgB3uE,EAAMkC,MAAMjE,UAAUwsE,EAAWE,YAEvE,IAAMqF,EAAYhwE,EAAMkC,MAAM4vE,wBAAwBN,EAAexxE,EAAMkC,MAAMvD,eAAesE,EAAMknC,IAEtG,OAAOnqC,EAAMkC,MAAM0rE,eAAeoC,EAAWyB,GAGxCM,CAAiBtwE,EAAMe,EAAMlC,EAAgBiqE,IArlBtD,IAAIzqE,EAAsBxD,EAAQ,KAE9B6vE,EAAuB7vE,EAAQ,KAE/ByzE,EAAgCzzE,EAAQ,KAExC0D,EAAQ1D,EAAQ,IAEhBuD,EAAwBvD,EAAQ,KAEhC40E,EAA4B50E,EAAQ,KAExC,SAAS80E,EAAiBzG,EAAUO,EAAiBjuE,GACnD,IAAMszE,EAAOvwE,EAAMkC,MAAM8vE,oBAAoBhyE,EAAMkC,MAAMjE,UAAU0sE,GAAW,GAAIO,GAIlF,OAFAlrE,EAAMkC,MAAM4sE,SAASyB,EAAMtzE,GAEpBszE,I,+CCtBTp4E,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,QAMR,SAA8B+H,GAC5B,GAAIyvE,EAAU10E,IAAIiF,GAChB,OAAQxC,EAAMkC,MAAMjE,WAAa+B,EAAMkC,MAAMorB,OAAO2kD,EAAUvwE,IAAIc,IAGpE,IACE,OAAOA,EAAKqrE,UAAU,eACtB,MAAOvkC,IAET,IAAMxnC,EAAKU,EAAKT,MAAMC,sBAAsB,eAC5CiwE,EAAUjuE,IAAIxB,EAAMV,GACpB,IAAMgB,EAAKovE,EAAO,CAChBC,aAAcrwE,EACdswE,iBAAkB5vE,EAAKqrE,UAAU,kBACjCwE,4BAA6B7vE,EAAKqrE,UAAU,+BAI9C,OAFArrE,EAAKf,KAAKgrE,iBAAiB,OAAQ,CAAC3pE,IACpCN,EAAKT,MAAMuwE,oBAAoB9vE,EAAKf,KAAKC,IAAI,WACtC1B,EAAMkC,MAAMjE,UAAU6D,IAtB/B,IAAI9B,EAAQ1D,EAAQ,IAEd21E,EAAY,IAAI3uE,QAuBtB,IAAM4uE,EAASlyE,EAAMgL,SAAS1L,UAAlB","file":"static/js/vendors-runtime-template.d32f01f4.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(\"static\") && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(types$1.privateName) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= types$1._in.binop || !this.prodParam.hasIn || !this.match(types$1._in)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(types$1.bracketL);\n\n      if (computed || optional || this.eat(types$1.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/prismjs/components/prism-smarty.min.js"],"names":["n","Prism","languages","smarty","comment","delimiter","pattern","alias","string","number","variable","lookbehind","function","inside","operator","punctuation","keyword","hooks","add","e","t","buildPlaceholders","tokenizePlaceholders"],"mappings":"+GAAC,IAAUA,KAyCTC,OAxCEC,UAAUC,OAAS,CACnBC,QAAS,mBACTC,UAAW,CACTC,QAAS,WACTC,MAAO,eAETC,OAAQ,mCACRC,OAAQ,2DACRC,SAAU,CAAC,cAAe,cAAe,CACvCJ,QAAS,mBACTK,YAAY,GACX,CACDL,QAAS,sBACTK,YAAY,IAEdC,SAAU,CAAC,CACTN,QAAS,qBACTK,YAAY,GACX,gBAAiB,mBACpB,YAAa,CACXL,QAAS,2BACTO,OAAQ,CACNH,SAAU,CACRJ,QAAS,kBACTK,YAAY,GAEdG,SAAU,MAGdC,YAAa,CAAC,mBACdD,SAAU,CAAC,mCAAoC,iDAAkD,kDACjGE,QAAS,oCACRhB,EAAEiB,MAAMC,IAAI,mBAAmB,SAAUC,GAC1C,IAAIC,GAAI,EACRpB,EAAEE,UAAU,qBAAqBmB,kBAAkBF,EAAG,SAAU,kCAAkC,SAAUA,GAC1G,MAAO,eAAiBA,IAAMC,GAAI,IAAMA,IAAM,cAAgBD,IAAMC,GAAI,IAAK,SAE7EpB,EAAEiB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CnB,EAAEE,UAAU,qBAAqBoB,qBAAqBH,EAAG","file":"static/js/354.9516fee2.chunk.js","sourcesContent":["!function (n) {\n  n.languages.smarty = {\n    comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n    delimiter: {\n      pattern: /^\\{|\\}$/i,\n      alias: \"punctuation\"\n    },\n    string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n      pattern: /(\\.|->)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, {\n      pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n      lookbehind: !0\n    }],\n    function: [{\n      pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n    \"attr-name\": {\n      pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n      inside: {\n        variable: {\n          pattern: /(=\\s*)(?!\\d)\\w+/,\n          lookbehind: !0\n        },\n        operator: /=/\n      }\n    },\n    punctuation: [/[\\[\\]().,:`]|->/],\n    operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n    keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n  }, n.hooks.add(\"before-tokenize\", function (e) {\n    var t = !1;\n    n.languages[\"markup-templating\"].buildPlaceholders(e, \"smarty\", /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g, function (e) {\n      return \"{/literal}\" === e && (t = !1), !t && (\"{literal}\" === e && (t = !0), !0);\n    });\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"smarty\");\n  });\n}(Prism);"],"sourceRoot":""}
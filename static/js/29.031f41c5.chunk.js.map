{"version":3,"sources":["../node_modules/codemirror/mode/apl/apl.js"],"names":["CodeMirror","defineMode","builtInOps","builtInFuncs","isOperator","isNiladic","isFunction","isArrow","isComment","startState","prev","func","op","string","escape","token","stream","state","ch","funcName","eatSpace","next","eatWhile","type","c","stringEater","test","skipToEnd","peek","defineMIME","mod"],"mappings":"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","file":"static/js/29.031f41c5.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"apl\", function () {\n    var builtInOps = {\n      \".\": \"innerProduct\",\n      \"\\\\\": \"scan\",\n      \"/\": \"reduce\",\n      \"⌿\": \"reduce1Axis\",\n      \"⍀\": \"scan1Axis\",\n      \"¨\": \"each\",\n      \"⍣\": \"power\"\n    };\n    var builtInFuncs = {\n      \"+\": [\"conjugate\", \"add\"],\n      \"−\": [\"negate\", \"subtract\"],\n      \"×\": [\"signOf\", \"multiply\"],\n      \"÷\": [\"reciprocal\", \"divide\"],\n      \"⌈\": [\"ceiling\", \"greaterOf\"],\n      \"⌊\": [\"floor\", \"lesserOf\"],\n      \"∣\": [\"absolute\", \"residue\"],\n      \"⍳\": [\"indexGenerate\", \"indexOf\"],\n      \"?\": [\"roll\", \"deal\"],\n      \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n      \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n      \"○\": [\"piTimes\", \"circularFuncs\"],\n      \"!\": [\"factorial\", \"binomial\"],\n      \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n      \"<\": [null, \"lessThan\"],\n      \"≤\": [null, \"lessThanOrEqual\"],\n      \"=\": [null, \"equals\"],\n      \">\": [null, \"greaterThan\"],\n      \"≥\": [null, \"greaterThanOrEqual\"],\n      \"≠\": [null, \"notEqual\"],\n      \"≡\": [\"depth\", \"match\"],\n      \"≢\": [null, \"notMatch\"],\n      \"∈\": [\"enlist\", \"membership\"],\n      \"⍷\": [null, \"find\"],\n      \"∪\": [\"unique\", \"union\"],\n      \"∩\": [null, \"intersection\"],\n      \"∼\": [\"not\", \"without\"],\n      \"∨\": [null, \"or\"],\n      \"∧\": [null, \"and\"],\n      \"⍱\": [null, \"nor\"],\n      \"⍲\": [null, \"nand\"],\n      \"⍴\": [\"shapeOf\", \"reshape\"],\n      \",\": [\"ravel\", \"catenate\"],\n      \"⍪\": [null, \"firstAxisCatenate\"],\n      \"⌽\": [\"reverse\", \"rotate\"],\n      \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n      \"⍉\": [\"transpose\", null],\n      \"↑\": [\"first\", \"take\"],\n      \"↓\": [null, \"drop\"],\n      \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n      \"⊃\": [\"diclose\", \"pick\"],\n      \"⌷\": [null, \"index\"],\n      \"⍋\": [\"gradeUp\", null],\n      \"⍒\": [\"gradeDown\", null],\n      \"⊤\": [\"encode\", null],\n      \"⊥\": [\"decode\", null],\n      \"⍕\": [\"format\", \"formatByExample\"],\n      \"⍎\": [\"execute\", null],\n      \"⊣\": [\"stop\", \"left\"],\n      \"⊢\": [\"pass\", \"right\"]\n    };\n    var isOperator = /[\\.\\/⌿⍀¨⍣]/;\n    var isNiladic = /⍬/;\n    var isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\n    var isArrow = /←/;\n    var isComment = /[⍝#].*$/;\n\n    var stringEater = function stringEater(type) {\n      var prev;\n      prev = false;\n      return function (c) {\n        prev = c;\n\n        if (c === type) {\n          return prev === \"\\\\\";\n        }\n\n        return true;\n      };\n    };\n\n    return {\n      startState: function startState() {\n        return {\n          prev: false,\n          func: false,\n          op: false,\n          string: false,\n          escape: false\n        };\n      },\n      token: function token(stream, state) {\n        var ch, funcName;\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        ch = stream.next();\n\n        if (ch === '\"' || ch === \"'\") {\n          stream.eatWhile(stringEater(ch));\n          stream.next();\n          state.prev = true;\n          return \"string\";\n        }\n\n        if (/[\\[{\\(]/.test(ch)) {\n          state.prev = false;\n          return null;\n        }\n\n        if (/[\\]}\\)]/.test(ch)) {\n          state.prev = true;\n          return null;\n        }\n\n        if (isNiladic.test(ch)) {\n          state.prev = false;\n          return \"niladic\";\n        }\n\n        if (/[¯\\d]/.test(ch)) {\n          if (state.func) {\n            state.func = false;\n            state.prev = false;\n          } else {\n            state.prev = true;\n          }\n\n          stream.eatWhile(/[\\w\\.]/);\n          return \"number\";\n        }\n\n        if (isOperator.test(ch)) {\n          return \"operator apl-\" + builtInOps[ch];\n        }\n\n        if (isArrow.test(ch)) {\n          return \"apl-arrow\";\n        }\n\n        if (isFunction.test(ch)) {\n          funcName = \"apl-\";\n\n          if (builtInFuncs[ch] != null) {\n            if (state.prev) {\n              funcName += builtInFuncs[ch][1];\n            } else {\n              funcName += builtInFuncs[ch][0];\n            }\n          }\n\n          state.func = true;\n          state.prev = false;\n          return \"function \" + funcName;\n        }\n\n        if (isComment.test(ch)) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (ch === \"∘\" && stream.peek() === \".\") {\n          stream.next();\n          return \"function jot-dot\";\n        }\n\n        stream.eatWhile(/[\\w\\$_]/);\n        state.prev = true;\n        return \"keyword\";\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/apl\", \"apl\");\n});"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/prismjs/components/prism-lilypond.min.js"],"names":["e","n","i","replace","d","languages","lilypond","comment","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","punctuation","rest","string","keyword","operator","number","ly","Prism"],"mappings":"gHAAC,SAAUA,GACT,IAAK,IAAIC,EAAI,+GAAgHC,EAAI,EAAGA,EAAI,EAAGA,IACzID,EAAIA,EAAEE,QAAQ,WAAW,WACvB,OAAOF,KAIXA,EAAIA,EAAEE,QAAQ,UAAW,aACzB,IAAIC,EAAIJ,EAAEK,UAAUC,SAAW,CAC7BC,QAAS,8BACT,kBAAmB,CACjBC,QAASC,OAAO,qEAAqEN,QAAQ,WAAW,WACtG,OAAOF,KACL,KACJS,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNC,OAAQ,CACNL,QAAS,eACTE,YAAY,EACZI,MAAO,kBACPF,OAAQ,CACN,oBAAqB,CACnBJ,QAAS,iBACTG,QAAQ,EACRC,OAAQ,CACNG,YAAa,YACbT,SAAU,CACRE,QAAS,UACTM,MAAO,oBACPF,OAAQ,QAIdI,KAAMhB,EAAEK,UAAUQ,SAGtBE,YAAa,MAGjBE,OAAQ,CACNT,QAAS,oBACTG,QAAQ,GAEV,aAAc,CACZH,QAAS,mBACTE,YAAY,GAEdQ,QAAS,CACPV,QAAS,iBACTI,OAAQ,CACNG,YAAa,QAGjBI,SAAU,aACVJ,YAAa,CACXP,QAAS,uGACTE,YAAY,GAEdU,OAAQ,qBAEVhB,EAAE,mBAAmBQ,OAAOC,OAAOD,OAAO,qBAAqBA,OAAON,SAASM,OAASR,EAAGJ,EAAEK,UAAUgB,GAAKjB,EA7D7G,CA8DCkB","file":"static/js/217.5f8cae83.chunk.js","sourcesContent":["!function (e) {\n  for (var n = '\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|;.*|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[\\\\s\\\\S])*#\\\\}|[^{])|<expr>)*\\\\)', i = 0; i < 5; i++) {\n    n = n.replace(/<expr>/g, function () {\n      return n;\n    });\n  }\n\n  n = n.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n  var d = e.languages.lilypond = {\n    comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    \"embedded-scheme\": {\n      pattern: RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g, function () {\n        return n;\n      }), \"m\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        scheme: {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: !0,\n          alias: \"language-scheme\",\n          inside: {\n            \"embedded-lilypond\": {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: !0,\n              inside: {\n                punctuation: /^#\\{|#\\}$/,\n                lilypond: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"language-lilypond\",\n                  inside: null\n                }\n              }\n            },\n            rest: e.languages.scheme\n          }\n        },\n        punctuation: /#/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        punctuation: /^\\\\/\n      }\n    },\n    operator: /[=|]|<<|>>/,\n    punctuation: {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside = d, e.languages.ly = d;\n}(Prism);"],"sourceRoot":""}
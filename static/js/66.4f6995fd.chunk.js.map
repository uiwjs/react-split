{"version":3,"sources":["../node_modules/prismjs/components/prism-coffeescript.js"],"names":["Prism","comment","interpolation","pattern","alias","languages","coffeescript","extend","greedy","inside","insertBefore","rest","javascript","coffee"],"mappings":"+GAAA,SAAWA,GAET,IAAIC,EAAU,YACVC,EAAgB,CAClBC,QAAS,aACTC,MAAO,YAETJ,EAAMK,UAAUC,aAAeN,EAAMK,UAAUE,OAAO,aAAc,CAClE,QAAWN,EACX,OAAU,CACV,CACEE,QAAS,yBACTK,QAAQ,GACP,CAEDL,QAAS,yBACTK,QAAQ,EACRC,OAAQ,CACN,cAAiBP,KAGrB,QAAW,mSACX,eAAgB,CACdC,QAAS,aACTC,MAAO,cAGXJ,EAAMK,UAAUK,aAAa,eAAgB,UAAW,CACtD,oBAAqB,CACnBP,QAAS,iBACTC,MAAO,WAGT,cAAe,CACbD,QAAS,qBACTC,MAAO,QACPK,OAAQ,CACN,QAAWR,EACX,cAAiBC,MAIvBF,EAAMK,UAAUK,aAAa,eAAgB,SAAU,CACrD,oBAAqB,CACnBP,QAAS,yBACTM,OAAQ,CACN,UAAa,CACXN,QAAS,QACTC,MAAO,eAETO,KAAMX,EAAMK,UAAUO,aAI1B,mBAAoB,CAAC,CACnBT,QAAS,iBACTK,QAAQ,EACRJ,MAAO,UACN,CACDD,QAAS,iBACTK,QAAQ,EACRJ,MAAO,SACPK,OAAQ,CACNP,cAAeA,OAIrBF,EAAMK,UAAUK,aAAa,eAAgB,UAAW,CAEtD,SAAY,kCAEPV,EAAMK,UAAUC,aAAa,mBACpCN,EAAMK,UAAUQ,OAASb,EAAMK,UAAUC,aAxE3C,CAyEGN","file":"static/js/66.4f6995fd.chunk.js","sourcesContent":["(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);"],"sourceRoot":""}
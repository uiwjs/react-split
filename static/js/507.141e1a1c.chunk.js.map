{"version":3,"sources":["../node_modules/codemirror/mode/r/r.js"],"names":["CodeMirror","registerHelper","defineMode","config","wordObj","words","res","i","length","commonAtoms","commonBuiltins","commonKeywords","concat","curPunc","atoms","builtins","keywords","blockkeywords","opChars","tokenBase","stream","state","quote","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","skipTo","backUp","word","current","propertyIsEnumerable","ctx","argList","push","type","indent","flags","column","prev","setFlag","flag","pop","startState","indentUnit","afterIdent","token","sol","indentation","eatSpace","style","textAfter","firstChar","charAt","closing","lineComment","defineMIME","mod"],"mappings":"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","file":"static/js/507.141e1a1c.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.registerHelper(\"wordChars\", \"r\", /[\\w.]/);\n  CodeMirror.defineMode(\"r\", function (config) {\n    function wordObj(words) {\n      var res = {};\n\n      for (var i = 0; i < words.length; ++i) {\n        res[words[i]] = true;\n      }\n\n      return res;\n    }\n\n    var commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\n    var commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\n    var commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\n    var commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n    CodeMirror.registerHelper(\"hintWords\", \"r\", commonAtoms.concat(commonBuiltins, commonKeywords));\n    var atoms = wordObj(commonAtoms);\n    var builtins = wordObj(commonBuiltins);\n    var keywords = wordObj(commonKeywords);\n    var blockkeywords = wordObj(commonBlockKeywords);\n    var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      curPunc = null;\n      var ch = stream.next();\n\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"0\" && stream.eat(\"x\")) {\n        stream.eatWhile(/[\\da-f]/i);\n        return \"number\";\n      } else if (ch == \".\" && stream.eat(/\\d/)) {\n        stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n        return \"number\";\n      } else if (ch == \"'\" || ch == '\"') {\n        state.tokenize = tokenString(ch);\n        return \"string\";\n      } else if (ch == \"`\") {\n        stream.match(/[^`]+`/);\n        return \"variable-3\";\n      } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n        return \"keyword\";\n      } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n        stream.eatWhile(/[\\w\\.]/);\n        var word = stream.current();\n        if (atoms.propertyIsEnumerable(word)) return \"atom\";\n\n        if (keywords.propertyIsEnumerable(word)) {\n          // Block keywords start new blocks, except 'else if', which only starts\n          // one new block for the 'if', no block for the 'else'.\n          if (blockkeywords.propertyIsEnumerable(word) && !stream.match(/\\s*if(\\s+|$)/, false)) curPunc = \"block\";\n          return \"keyword\";\n        }\n\n        if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n        return \"variable\";\n      } else if (ch == \"%\") {\n        if (stream.skipTo(\"%\")) stream.next();\n        return \"operator variable-2\";\n      } else if (ch == \"<\" && stream.eat(\"-\") || ch == \"<\" && stream.match(\"<-\") || ch == \"-\" && stream.match(/>>?/)) {\n        return \"operator arrow\";\n      } else if (ch == \"=\" && state.ctx.argList) {\n        return \"arg-is\";\n      } else if (opChars.test(ch)) {\n        if (ch == \"$\") return \"operator dollar\";\n        stream.eatWhile(opChars);\n        return \"operator\";\n      } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n        curPunc = ch;\n        if (ch == \";\") return \"semi\";\n        return null;\n      } else {\n        return null;\n      }\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        if (stream.eat(\"\\\\\")) {\n          var ch = stream.next();\n          if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n          return \"string-2\";\n        } else {\n          var next;\n\n          while ((next = stream.next()) != null) {\n            if (next == quote) {\n              state.tokenize = tokenBase;\n              break;\n            }\n\n            if (next == \"\\\\\") {\n              stream.backUp(1);\n              break;\n            }\n          }\n\n          return \"string\";\n        }\n      };\n    }\n\n    var ALIGN_YES = 1,\n        ALIGN_NO = 2,\n        BRACELESS = 4;\n\n    function push(state, type, stream) {\n      state.ctx = {\n        type: type,\n        indent: state.indent,\n        flags: 0,\n        column: stream.column(),\n        prev: state.ctx\n      };\n    }\n\n    function setFlag(state, flag) {\n      var ctx = state.ctx;\n      state.ctx = {\n        type: ctx.type,\n        indent: ctx.indent,\n        flags: ctx.flags | flag,\n        column: ctx.column,\n        prev: ctx.prev\n      };\n    }\n\n    function pop(state) {\n      state.indent = state.ctx.indent;\n      state.ctx = state.ctx.prev;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase,\n          ctx: {\n            type: \"top\",\n            indent: -config.indentUnit,\n            flags: ALIGN_NO\n          },\n          indent: 0,\n          afterIdent: false\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO;\n          if (state.ctx.flags & BRACELESS) pop(state);\n          state.indent = stream.indentation();\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES);\n        if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n        if (curPunc == \"{\") push(state, \"}\", stream);else if (curPunc == \"(\") {\n          push(state, \")\", stream);\n          if (state.afterIdent) state.ctx.argList = true;\n        } else if (curPunc == \"[\") push(state, \"]\", stream);else if (curPunc == \"block\") push(state, \"block\", stream);else if (curPunc == state.ctx.type) pop(state);else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS);\n        state.afterIdent = style == \"variable\" || style == \"keyword\";\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase) return 0;\n        var firstChar = textAfter && textAfter.charAt(0),\n            ctx = state.ctx,\n            closing = firstChar == ctx.type;\n        if (ctx.flags & BRACELESS) ctx = ctx.prev;\n        if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);else return ctx.indent + (closing ? 0 : config.indentUnit);\n      },\n      lineComment: \"#\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n});"],"sourceRoot":""}
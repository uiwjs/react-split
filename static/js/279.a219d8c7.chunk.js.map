{"version":3,"sources":["../node_modules/prismjs/components/prism-pascaligo.js"],"names":["Prism","braces","source","type","replace","pascaligo","languages","pattern","greedy","RegExp","lookbehind","inside","classNameInside","reduce","accum","key","forEach","p"],"mappings":"gHAAA,SAAWA,GAET,IAAIC,EAAS,2CAA2CC,OACpDC,EAAO,gCAAgCD,OAAOE,QAAQ,aAAa,WACrE,OAAOH,KAELI,EAAYL,EAAMM,UAAUD,UAAY,CAC1C,QAAW,0BACX,OAAU,CACRE,QAAS,8CACTC,QAAQ,GAEV,aAAc,CAAC,CACbD,QAASE,OAAO,+BAA+BP,OAAOE,QAAQ,WAAW,WACvE,OAAOD,KACL,KACJO,YAAY,EACZC,OAAQ,MAEP,CACDJ,QAASE,OAAO,oBAAoBP,OAAOE,QAAQ,WAAW,WAC5D,OAAOD,KACL,KACJQ,OAAQ,MAEP,CACDJ,QAASE,OAAO,eAAeP,OAAOE,QAAQ,WAAW,WACvD,OAAOD,MAETO,YAAY,EACZC,OAAQ,OAGV,QAAW,CACTJ,QAAS,mIACTG,YAAY,GAEd,QAAW,CACTH,QAAS,8BACTG,YAAY,GAEd,QAAW,CACTH,QAAS,4DACTG,YAAY,GAEd,SAAY,gBACZ,OAAU,CACV,6BACA,4CACA,SAAY,2EACZ,YAAe,4BAEbE,EAAkB,CAAC,UAAW,UAAW,UAAW,WAAY,eAAeC,QAAO,SAAUC,EAAOC,GAEzG,OADAD,EAAMC,GAAOV,EAAUU,GAChBD,IACN,IACHT,EAAU,cAAcW,SAAQ,SAAUC,GACxCA,EAAEN,OAASC,KAzDf,CA2DGZ","file":"static/js/279.a219d8c7.chunk.js","sourcesContent":["(function (Prism) {\n  // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n  var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n  var type = /(?:\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function () {\n    return braces;\n  });\n  var pascaligo = Prism.languages.pascaligo = {\n    'comment': /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n    'string': {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n      greedy: true\n    },\n    'class-name': [{\n      pattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function () {\n        return type;\n      }), 'i'),\n      lookbehind: true,\n      inside: null // see below\n\n    }, {\n      pattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n        return type;\n      }), 'i'),\n      inside: null // see below\n\n    }, {\n      pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function () {\n        return type;\n      })),\n      lookbehind: true,\n      inside: null // see below\n\n    }],\n    'keyword': {\n      pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n      lookbehind: true\n    },\n    'builtin': {\n      pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n      lookbehind: true\n    },\n    'function': /\\w+(?=\\s*\\()/i,\n    'number': [// Hexadecimal, octal and binary\n    /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i],\n    'operator': /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n    'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n  };\n  var classNameInside = ['comment', 'keyword', 'builtin', 'operator', 'punctuation'].reduce(function (accum, key) {\n    accum[key] = pascaligo[key];\n    return accum;\n  }, {});\n  pascaligo[\"class-name\"].forEach(function (p) {\n    p.inside = classNameInside;\n  });\n})(Prism);"],"sourceRoot":""}
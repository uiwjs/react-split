{"version":3,"sources":["../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","parser","assign","validate","opts","Error","_ref","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","_excluded","Set","RegExp","undefined","normalizeReplacements","replacements","Array","isArray","reduce","acc","replacement","default","formatter","code","ast","parserOpts","plugins","slice","push","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","err","loc","message","_codeFrame","codeFrameColumns","start","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholders","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","require","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStatement","isStringLiteral","PATTERN","node","ancestors","state","_state$placeholderWhi","name","test","has","type","parent","expectedNode","resolve","index","resolveAncestors","isDuplicate","add","metadata","cloneNode","forEach","placeholder","prototype","hasOwnProperty","call","placeholderName","reverse","map","stringLiteral","blockStatement","expressionStatement","identifier","emptyStatement","items","splice","applyReplacement","e","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","filter","builtinClasses","_default","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","get","isClassDeclaration","ClassDeclaration","ref","id","scope","generateUidIdentifier","replaceWith","types","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","file","callee","isArrowFunctionExpression","arrowFunctionToExpression","program","expression","statements","statement","smart","formatters","_builder","bind","assertExpressionStatement","makeStatementFormatter","fn","str","unwrap","body","stmt","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","_options","tpl","args","extendedTrace","_string","builder","_literal","set","NO_PLACEHOLDER","rootStack","error","stack","split","join","arg","_parse","_populate","shouldHighlight","getChalk","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","tokenize","NEWLINE","BRACKET","JSX_TAG","getTokenType","token","offset","text","isKeyword","isStrictReservedWord","substr","toLowerCase","highlighted","colorize","supportsColor","forceColor","constructor","enabled","level","match","exec","matchToToken","names","nameSet","prefix","result","buildTemplateCode","concat","from","some","buildLiteralData","defaultReplacements","beforeExpr","startsExpr","isLoop","isAssign","TokenType","label","conf","this","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createBinop","types$1","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","setTrailingComments","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","leadingComments","commentStart","input","charCodeAt","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","lineStart","lastIndex","getLineInfo","raiseWithData","getLocationForPosition","replace","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","preserveSpace","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","startLine","curPosition","skipArrays","val","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","current","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","ranges","range","NodePrototype","cloneIdentifier","cloned","create","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","LValParser","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","isObjectMethod","elem","invalidHackPipeBodies","ExpressionParser","isRecord","protoRef","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.3936cc60.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(\"static\") && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(types$1.privateName) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= types$1._in.binop || !this.prodParam.hasIn || !this.match(types$1._in)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(\"yield\")) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(types$1.bracketL);\n\n      if (computed || optional || this.eat(types$1.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}
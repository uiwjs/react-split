{"version":3,"sources":["../node_modules/codemirror/mode/julia/julia.js"],"names":["CodeMirror","defineMode","config","parserConf","wordRegexp","words","end","RegExp","join","operators","delimiters","identifiers","chars","keywordsList","builtinsList","registerHelper","concat","openers","closers","keywords","builtins","macro","symbol","stringPrefixes","inArray","state","nestedArrays","currentScope","n","scopes","length","tokenBase","stream","match","tokenize","tokenComment","leavingExpr","sol","eatSpace","delimiter","ch","peek","skipToEnd","push","nestedGenerators","pop","inGenerator","lastToken","tokenAnnotation","imMatcher","numberLiteral","tokenChar","current","substr","eat","next","eatWhile","isDefinition","tokenCallOrDef","firstParenPos","charsAdvanced","backUp","nestedParameters","nestedComments","isChar","value","parseInt","startState","token","style","indent","textAfter","delta","indentUnit","electricInput","blockCommentStart","blockCommentEnd","lineComment","closeBrackets","fold","defineMIME","mod"],"mappings":"mHAOG,SAAUA,GACX,aAEAA,EAAWC,WAAW,SAAS,SAAUC,EAAQC,GAC/C,SAASC,EAAWC,EAAOC,GAKzB,MAJmB,qBAARA,IACTA,EAAM,OAGD,IAAIC,OAAO,MAAQF,EAAMG,KAAK,OAAS,KAAOF,GAGvD,IAIIG,EAAYN,EAAWM,WAAaL,EAAW,CAAC,QAAS,SAAU,OAAQ,SAAU,KAAM,KAAM,SAAU,yCAA0C,MAAO,MAAO,IAAK,IAAK,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,2BAA6B,IACrYM,EAAaP,EAAWO,YAAc,eACtCC,EAAcR,EAAWQ,aAAe,wEACxCC,EAAQR,EAAW,CAPT,iBACA,wBACF,2BACA,yEAI6C,KAGrDS,EAAe,CAAC,KAAM,OAAQ,SAAU,QAAS,MAAO,QAAS,MAAO,MAAO,KAAM,MAAO,QAAS,UAAW,SAAU,QAAS,WAAY,SAAU,QAAS,QAAS,SAAU,SAAU,YAAa,QAAS,WAAY,QAAS,QAAS,SAAU,aAAc,SAAU,OAAQ,UAAW,YAAa,QAAS,YAAa,WAAY,YAAa,YACpWC,EAAe,CAAC,OAAQ,QAAS,UAAW,MAAO,OACvDd,EAAWe,eAAe,YAAa,QAASF,EAAaG,OAAOF,IACpE,IAAIG,EAAUb,EALI,CAAC,QAAS,WAAY,OAAQ,SAAU,YAAa,MAAO,QAAS,MAAO,QAAS,QAAS,KAAM,OAAQ,SAAU,MAAO,UAAW,QAAS,OAM/Jc,EAAUd,EALI,CAAC,MAAO,OAAQ,SAAU,QAAS,YAMjDe,EAAWf,EAAWS,GACtBO,EAAWhB,EAAWU,GACtBO,EAAQ,mBACRC,EAAS,+CACTC,EAAiB,uCAErB,SAASC,EAAQC,GACf,OAAOA,EAAMC,aAAe,EAO9B,SAASC,EAAaF,EAAOG,GAK3B,MAJiB,qBAANA,IACTA,EAAI,GAGFH,EAAMI,OAAOC,QAAUF,EAClB,KAGFH,EAAMI,OAAOJ,EAAMI,OAAOC,QAAUF,EAAI,IAIjD,SAASG,EAAUC,EAAQP,GAEzB,GAAIO,EAAOC,MAAM,OAAO,GAEtB,OADAR,EAAMS,SAAWC,EACVV,EAAMS,SAASF,EAAQP,GAIhC,IAAIW,EAAcX,EAAMW,YAQxB,GANIJ,EAAOK,QACTD,GAAc,GAGhBX,EAAMW,aAAc,EAEhBA,GACEJ,EAAOC,MAAM,OACf,MAAO,WAIX,GAAID,EAAOC,MAAM,UACf,MAAO,QACF,GAAID,EAAOC,MAAM,WACtB,MAAO,WAGT,GAAID,EAAOM,WACT,OAAO,KAGT,IA+CIL,EAwPsBM,EAvStBC,EAAKR,EAAOS,OAEhB,GAAW,MAAPD,EAEF,OADAR,EAAOU,YACA,UAaT,GAVW,MAAPF,IACFf,EAAMI,OAAOc,KAAK,KAClBlB,EAAMC,gBAGG,MAAPc,IACFf,EAAMI,OAAOc,KAAK,KAClBlB,EAAMmB,oBAGJpB,EAAQC,IAAiB,MAAPe,EAAY,CAChC,KAAOf,EAAMI,OAAOC,QAAkC,MAAxBH,EAAaF,IACzCA,EAAMI,OAAOgB,MAGfpB,EAAMI,OAAOgB,MACbpB,EAAMC,eACND,EAAMW,aAAc,EAGtB,GA5EF,SAAqBX,GACnB,OAAOA,EAAMmB,iBAAmB,EA2E5BE,CAAYrB,IAAiB,MAAPe,EAAY,CACpC,KAAOf,EAAMI,OAAOC,QAAkC,MAAxBH,EAAaF,IACzCA,EAAMI,OAAOgB,MAGfpB,EAAMI,OAAOgB,MACbpB,EAAMmB,mBACNnB,EAAMW,aAAc,EAGtB,GAAIZ,EAAQC,GAAQ,CAClB,GAAuB,OAAnBA,EAAMsB,WAAsBf,EAAOC,MAAM,MAC3C,MAAO,WAGT,GAAID,EAAOC,MAAM,QACf,MAAO,SAeX,IATIA,EAAQD,EAAOC,MAAMhB,GAAS,KAChCQ,EAAMI,OAAOc,KAAKV,EAAM,IAGtBD,EAAOC,MAAMf,GAAS,IACxBO,EAAMI,OAAOgB,MAIXb,EAAOC,MAAM,gBAEf,OADAR,EAAMS,SAAWc,EACVvB,EAAMS,SAASF,EAAQP,GAIhC,IAAKW,GAAeJ,EAAOC,MAAMX,IAAWU,EAAOC,MAAM,sEACvD,MAAO,UAQT,GAAID,EAAOC,MAAMxB,GACf,MAAO,WAIT,GAAIuB,EAAOC,MAAM,UAAU,GAAQ,CACjC,IAAIgB,EAAY1C,OAAO,SACnB2C,GAAgB,EAgCpB,GA9BIlB,EAAOC,MAAM,oCACfiB,GAAgB,GAIdlB,EAAOC,MAAM,oBACfiB,GAAgB,GAIdlB,EAAOC,MAAM,gBACfiB,GAAgB,GAIdlB,EAAOC,MAAM,iBACfiB,GAAgB,GAKdlB,EAAOC,MAAM,iGACfiB,GAAgB,GAGdlB,EAAOC,MAAM,8BACfiB,GAAgB,GAIdA,EAIF,OAFAlB,EAAOC,MAAMgB,GACbxB,EAAMW,aAAc,EACb,SAKX,GAAIJ,EAAOC,MAAM,MAEf,OADAR,EAAMS,SAAWiB,EACV1B,EAAMS,SAASF,EAAQP,GAIhC,GAAIO,EAAOC,MAAMV,GAEf,OADAE,EAAMS,UAwKqB,SADHK,EAvKYP,EAAOoB,WAwK/BC,QAAQ,GACpBd,EAAY,MACsB,MAAzBA,EAAUc,QAAQ,KAC3Bd,EAAY,KAGd,SAAqBP,EAAQP,GAC3B,GAAIO,EAAOsB,IAAI,MACbtB,EAAOuB,WACF,IAAIvB,EAAOC,MAAMM,GAGtB,OAFAd,EAAMS,SAAWH,EACjBN,EAAMW,aAAc,EACb,SAEPJ,EAAOsB,IAAI,QAIb,OADAtB,EAAOwB,SAAS,WACT,WAzLA/B,EAAMS,SAASF,EAAQP,GAGhC,GAAIO,EAAOC,MAAMZ,GACf,MAAO,OAGT,GAAIW,EAAOC,MAAMvB,GACf,OAAO,KAGT,GAAIsB,EAAOC,MAAMd,GACf,MAAO,UAGT,GAAIa,EAAOC,MAAMb,GACf,MAAO,UAGT,IAAIqC,EAAehC,EAAMgC,cAAmC,YAAnBhC,EAAMsB,WAA8C,SAAnBtB,EAAMsB,WAA2C,QAAnBtB,EAAMsB,WAA0C,UAAnBtB,EAAMsB,WAA4C,aAAnBtB,EAAMsB,UAE1K,OAAIf,EAAOC,MAAMtB,GACX8C,EACoB,MAAlBzB,EAAOS,QACThB,EAAMgC,cAAe,EACd,aAGThC,EAAMgC,cAAe,EACd,OAGLzB,EAAOC,MAAM,iBAAiB,IAChCR,EAAMS,SAAWwB,EACVjC,EAAMS,SAASF,EAAQP,KAGhCA,EAAMW,aAAc,EACb,aAITJ,EAAOuB,OACA,SAGT,SAASG,EAAe1B,EAAQP,GAC9B,IAAIQ,EAAQD,EAAOC,MAAM,YAQzB,GANIA,IACER,EAAMkC,cAAgB,IAAGlC,EAAMkC,cAAgBlC,EAAMI,OAAOC,QAChEL,EAAMI,OAAOc,KAAK,KAClBlB,EAAMmC,eAAiB3B,EAAM,GAAGH,QAGP,KAAvBH,EAAaF,IAAiBO,EAAOC,MAAM,SAC7CR,EAAMI,OAAOgB,MACbpB,EAAMmC,eAAiB,EAEnBnC,EAAMI,OAAOC,QAAUL,EAAMkC,eAAe,CAC9C,IAAIF,EAAezB,EAAOC,MAAM,oCAAoC,GAKpE,OAJAD,EAAO6B,OAAOpC,EAAMmC,eACpBnC,EAAMkC,eAAiB,EACvBlC,EAAMmC,cAAgB,EACtBnC,EAAMS,SAAWH,EACb0B,EAAqB,MAClB,UAOX,GAAIzB,EAAOC,MAAM,OAAO,GAAQ,CAG9B,IAFAD,EAAO6B,OAAOpC,EAAMmC,eAEbnC,EAAMI,OAAOC,OAASL,EAAMkC,eACjClC,EAAMI,OAAOgB,MAMf,OAHApB,EAAMkC,eAAiB,EACvBlC,EAAMmC,cAAgB,EACtBnC,EAAMS,SAAWH,EACV,UAIT,OADAN,EAAMmC,eAAiB5B,EAAOC,MAAM,aAAa,GAAGH,OAC7CL,EAAMS,SAASF,EAAQP,GAGhC,SAASuB,EAAgBhB,EAAQP,GAe/B,OAdAO,EAAOC,MAAM,+BAETD,EAAOC,MAAM,MACfR,EAAMqC,mBACG9B,EAAOC,MAAM,OAASR,EAAMqC,iBAAmB,GACxDrC,EAAMqC,mBAGJrC,EAAMqC,iBAAmB,EAC3B9B,EAAOC,MAAM,eAAiBD,EAAOuB,OACF,GAA1B9B,EAAMqC,mBACfrC,EAAMS,SAAWH,GAGZ,UAGT,SAASI,EAAaH,EAAQP,GAc5B,OAbIO,EAAOC,MAAM,QACfR,EAAMsC,iBAGH/B,EAAOC,MAAM,mBAChBD,EAAOU,YAGLV,EAAOC,MAAM,SACfR,EAAMsC,iBACsB,GAAxBtC,EAAMsC,iBAAqBtC,EAAMS,SAAWH,IAG3C,UAGT,SAASoB,EAAUnB,EAAQP,GACzB,IACIQ,EADA+B,GAAS,EAGb,GAAIhC,EAAOC,MAAMrB,GACfoD,GAAS,OACJ,GAAI/B,EAAQD,EAAOC,MAAM,8BAC1BgC,EAAQC,SAASjC,EAAM,GAAI,MAElB,OAASgC,GAAS,SAE7BD,GAAS,EACThC,EAAOuB,aAEJ,GAAItB,EAAQD,EAAOC,MAAM,8BAA+B,CAC7D,IAAIgC,KAAQC,SAASjC,EAAM,GAAI,MAElB,UAEX+B,GAAS,EACThC,EAAOuB,QAIX,OAAIS,GACFvC,EAAMW,aAAc,EACpBX,EAAMS,SAAWH,EACV,WAGJC,EAAOC,MAAM,gBAChBD,EAAOU,YAGLV,EAAOC,MAAM,QACfR,EAAMS,SAAWH,GAGZ,SAsET,MA1Ce,CACboC,WAAY,WACV,MAAO,CACLjC,SAAUH,EACVF,OAAQ,GACRkB,UAAW,KACXX,aAAa,EACbqB,cAAc,EACd/B,aAAc,EACdqC,eAAgB,EAChBnB,iBAAkB,EAClBkB,iBAAkB,EAClBF,cAAe,EACfD,eAAgB,IAGpBS,MAAO,SAAepC,EAAQP,GAC5B,IAAI4C,EAAQ5C,EAAMS,SAASF,EAAQP,GAC/B2B,EAAUpB,EAAOoB,UAMrB,OAJIA,GAAWiB,IACb5C,EAAMsB,UAAYK,GAGbiB,GAETC,OAAQ,SAAgB7C,EAAO8C,GAC7B,IAAIC,EAAQ,EAMZ,MAJkB,MAAdD,GAAmC,MAAdA,GAAmC,QAAdA,GAAqC,SAAdA,GAAsC,UAAdA,GAAuC,WAAdA,GAAwC,YAAdA,IAC9IC,GAAS,IAGH/C,EAAMI,OAAOC,OAAS0C,GAAStE,EAAOuE,YAEhDC,cAAe,+BACfC,kBAAmB,KACnBC,gBAAiB,KACjBC,YAAa,IACbC,cAAe,WACfC,KAAM,aAIV/E,EAAWgF,WAAW,eAAgB,SArcpCC,CAAI,EAAQ","file":"static/js/483.6f7a57e0.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"julia\", function (config, parserConf) {\n    function wordRegexp(words, end) {\n      if (typeof end === \"undefined\") {\n        end = \"\\\\b\";\n      }\n\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\" + end);\n    }\n\n    var octChar = \"\\\\\\\\[0-7]{1,3}\";\n    var hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\n    var sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\n    var uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n    var operators = parserConf.operators || wordRegexp([\"[<>]:\", \"[<>=]=\", \"<<=?\", \">>>?=?\", \"=>\", \"->\", \"\\\\/\\\\/\", \"[\\\\\\\\%*+\\\\-<>!=\\\\/^|&\\\\u00F7\\\\u22BB]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\", \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2218\", \"\\\\u221A\", \"\\\\u221B\", \"\\\\u2229\", \"\\\\u222A\", \"\\\\u2260\", \"\\\\u2264\", \"\\\\u2265\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22C5\", \"\\\\b(in|isa)\\\\b(?!\\.?\\\\()\"], \"\");\n    var delimiters = parserConf.delimiters || /^[;,()[\\]{}]/;\n    var identifiers = parserConf.identifiers || /^[_A-Za-z\\u00A1-\\u2217\\u2219-\\uFFFF][\\w\\u00A1-\\u2217\\u2219-\\uFFFF]*!*/;\n    var chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n    var openersList = [\"begin\", \"function\", \"type\", \"struct\", \"immutable\", \"let\", \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\", \"finally\", \"catch\", \"do\"];\n    var closersList = [\"end\", \"else\", \"elseif\", \"catch\", \"finally\"];\n    var keywordsList = [\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\", \"let\", \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\", \"continue\", \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\", \"using\", \"function\", \"where\", \"macro\", \"module\", \"baremodule\", \"struct\", \"type\", \"mutable\", \"immutable\", \"quote\", \"typealias\", \"abstract\", \"primitive\", \"bitstype\"];\n    var builtinsList = [\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"];\n    CodeMirror.registerHelper(\"hintWords\", \"julia\", keywordsList.concat(builtinsList));\n    var openers = wordRegexp(openersList);\n    var closers = wordRegexp(closersList);\n    var keywords = wordRegexp(keywordsList);\n    var builtins = wordRegexp(builtinsList);\n    var macro = /^@[_A-Za-z][\\w]*/;\n    var symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n    var stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\n    function inArray(state) {\n      return state.nestedArrays > 0;\n    }\n\n    function inGenerator(state) {\n      return state.nestedGenerators > 0;\n    }\n\n    function currentScope(state, n) {\n      if (typeof n === \"undefined\") {\n        n = 0;\n      }\n\n      if (state.scopes.length <= n) {\n        return null;\n      }\n\n      return state.scopes[state.scopes.length - (n + 1)];\n    } // tokenizers\n\n\n    function tokenBase(stream, state) {\n      // Handle multiline comments\n      if (stream.match(/^#=/, false)) {\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      } // Handle scope changes\n\n\n      var leavingExpr = state.leavingExpr;\n\n      if (stream.sol()) {\n        leavingExpr = false;\n      }\n\n      state.leavingExpr = false;\n\n      if (leavingExpr) {\n        if (stream.match(/^'+/)) {\n          return \"operator\";\n        }\n      }\n\n      if (stream.match(/\\.{4,}/)) {\n        return \"error\";\n      } else if (stream.match(/\\.{1,3}/)) {\n        return \"operator\";\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var ch = stream.peek(); // Handle single line comments\n\n      if (ch === '#') {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '[') {\n        state.scopes.push('[');\n        state.nestedArrays++;\n      }\n\n      if (ch === '(') {\n        state.scopes.push('(');\n        state.nestedGenerators++;\n      }\n\n      if (inArray(state) && ch === ']') {\n        while (state.scopes.length && currentScope(state) !== \"[\") {\n          state.scopes.pop();\n        }\n\n        state.scopes.pop();\n        state.nestedArrays--;\n        state.leavingExpr = true;\n      }\n\n      if (inGenerator(state) && ch === ')') {\n        while (state.scopes.length && currentScope(state) !== \"(\") {\n          state.scopes.pop();\n        }\n\n        state.scopes.pop();\n        state.nestedGenerators--;\n        state.leavingExpr = true;\n      }\n\n      if (inArray(state)) {\n        if (state.lastToken == \"end\" && stream.match(/^:/)) {\n          return \"operator\";\n        }\n\n        if (stream.match(/^end/)) {\n          return \"number\";\n        }\n      }\n\n      var match;\n\n      if (match = stream.match(openers, false)) {\n        state.scopes.push(match[0]);\n      }\n\n      if (stream.match(closers, false)) {\n        state.scopes.pop();\n      } // Handle type annotations\n\n\n      if (stream.match(/^::(?![:\\$])/)) {\n        state.tokenize = tokenAnnotation;\n        return state.tokenize(stream, state);\n      } // Handle symbols\n\n\n      if (!leavingExpr && stream.match(symbol) || stream.match(/:([<>]:|<<=?|>>>?=?|->|\\/\\/|\\.{2,3}|[\\.\\\\%*+\\-<>!\\/^|&]=?|[~\\?\\$])/)) {\n        return \"builtin\";\n      } // Handle parametric types\n      //if (stream.match(/^{[^}]*}(?=\\()/)) {\n      //  return \"builtin\";\n      //}\n      // Handle operators and Delimiters\n\n\n      if (stream.match(operators)) {\n        return \"operator\";\n      } // Handle Number Literals\n\n\n      if (stream.match(/^\\.?\\d/, false)) {\n        var imMatcher = RegExp(/^im\\b/);\n        var numberLiteral = false;\n\n        if (stream.match(/^0x\\.[0-9a-f_]+p[\\+\\-]?[_\\d]+/i)) {\n          numberLiteral = true;\n        } // Integers\n\n\n        if (stream.match(/^0x[0-9a-f_]+/i)) {\n          numberLiteral = true;\n        } // Hex\n\n\n        if (stream.match(/^0b[01_]+/i)) {\n          numberLiteral = true;\n        } // Binary\n\n\n        if (stream.match(/^0o[0-7_]+/i)) {\n          numberLiteral = true;\n        } // Octal\n        // Floats\n\n\n        if (stream.match(/^(?:(?:\\d[_\\d]*)?\\.(?!\\.)(?:\\d[_\\d]*)?|\\d[_\\d]*\\.(?!\\.)(?:\\d[_\\d]*))?([Eef][\\+\\-]?[_\\d]+)?/i)) {\n          numberLiteral = true;\n        }\n\n        if (stream.match(/^\\d[_\\d]*(e[\\+\\-]?\\d+)?/i)) {\n          numberLiteral = true;\n        } // Decimal\n\n\n        if (numberLiteral) {\n          // Integer literals may be \"long\"\n          stream.match(imMatcher);\n          state.leavingExpr = true;\n          return \"number\";\n        }\n      } // Handle Chars\n\n\n      if (stream.match(/^'/)) {\n        state.tokenize = tokenChar;\n        return state.tokenize(stream, state);\n      } // Handle Strings\n\n\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenStringFactory(stream.current());\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.match(macro)) {\n        return \"meta\";\n      }\n\n      if (stream.match(delimiters)) {\n        return null;\n      }\n\n      if (stream.match(keywords)) {\n        return \"keyword\";\n      }\n\n      if (stream.match(builtins)) {\n        return \"builtin\";\n      }\n\n      var isDefinition = state.isDefinition || state.lastToken == \"function\" || state.lastToken == \"macro\" || state.lastToken == \"type\" || state.lastToken == \"struct\" || state.lastToken == \"immutable\";\n\n      if (stream.match(identifiers)) {\n        if (isDefinition) {\n          if (stream.peek() === '.') {\n            state.isDefinition = true;\n            return \"variable\";\n          }\n\n          state.isDefinition = false;\n          return \"def\";\n        }\n\n        if (stream.match(/^({[^}]*})*\\(/, false)) {\n          state.tokenize = tokenCallOrDef;\n          return state.tokenize(stream, state);\n        }\n\n        state.leavingExpr = true;\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return \"error\";\n    }\n\n    function tokenCallOrDef(stream, state) {\n      var match = stream.match(/^(\\(\\s*)/);\n\n      if (match) {\n        if (state.firstParenPos < 0) state.firstParenPos = state.scopes.length;\n        state.scopes.push('(');\n        state.charsAdvanced += match[1].length;\n      }\n\n      if (currentScope(state) == '(' && stream.match(/^\\)/)) {\n        state.scopes.pop();\n        state.charsAdvanced += 1;\n\n        if (state.scopes.length <= state.firstParenPos) {\n          var isDefinition = stream.match(/^(\\s*where\\s+[^\\s=]+)*\\s*?=(?!=)/, false);\n          stream.backUp(state.charsAdvanced);\n          state.firstParenPos = -1;\n          state.charsAdvanced = 0;\n          state.tokenize = tokenBase;\n          if (isDefinition) return \"def\";\n          return \"builtin\";\n        }\n      } // Unfortunately javascript does not support multiline strings, so we have\n      // to undo anything done upto here if a function call or definition splits\n      // over two or more lines.\n\n\n      if (stream.match(/^$/g, false)) {\n        stream.backUp(state.charsAdvanced);\n\n        while (state.scopes.length > state.firstParenPos) {\n          state.scopes.pop();\n        }\n\n        state.firstParenPos = -1;\n        state.charsAdvanced = 0;\n        state.tokenize = tokenBase;\n        return \"builtin\";\n      }\n\n      state.charsAdvanced += stream.match(/^([^()]*)/)[1].length;\n      return state.tokenize(stream, state);\n    }\n\n    function tokenAnnotation(stream, state) {\n      stream.match(/.*?(?=,|;|{|}|\\(|\\)|=|$|\\s)/);\n\n      if (stream.match(/^{/)) {\n        state.nestedParameters++;\n      } else if (stream.match(/^}/) && state.nestedParameters > 0) {\n        state.nestedParameters--;\n      }\n\n      if (state.nestedParameters > 0) {\n        stream.match(/.*?(?={|})/) || stream.next();\n      } else if (state.nestedParameters == 0) {\n        state.tokenize = tokenBase;\n      }\n\n      return \"builtin\";\n    }\n\n    function tokenComment(stream, state) {\n      if (stream.match(/^#=/)) {\n        state.nestedComments++;\n      }\n\n      if (!stream.match(/.*?(?=(#=|=#))/)) {\n        stream.skipToEnd();\n      }\n\n      if (stream.match(/^=#/)) {\n        state.nestedComments--;\n        if (state.nestedComments == 0) state.tokenize = tokenBase;\n      }\n\n      return \"comment\";\n    }\n\n    function tokenChar(stream, state) {\n      var isChar = false,\n          match;\n\n      if (stream.match(chars)) {\n        isChar = true;\n      } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n        var value = parseInt(match[1], 16);\n\n        if (value <= 55295 || value >= 57344) {\n          // (U+0,U+D7FF), (U+E000,U+FFFF)\n          isChar = true;\n          stream.next();\n        }\n      } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n        var value = parseInt(match[1], 16);\n\n        if (value <= 1114111) {\n          // U+10FFFF\n          isChar = true;\n          stream.next();\n        }\n      }\n\n      if (isChar) {\n        state.leavingExpr = true;\n        state.tokenize = tokenBase;\n        return \"string\";\n      }\n\n      if (!stream.match(/^[^']+(?=')/)) {\n        stream.skipToEnd();\n      }\n\n      if (stream.match(/^'/)) {\n        state.tokenize = tokenBase;\n      }\n\n      return \"error\";\n    }\n\n    function tokenStringFactory(delimiter) {\n      if (delimiter.substr(-3) === '\"\"\"') {\n        delimiter = '\"\"\"';\n      } else if (delimiter.substr(-1) === '\"') {\n        delimiter = '\"';\n      }\n\n      function tokenString(stream, state) {\n        if (stream.eat('\\\\')) {\n          stream.next();\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          state.leavingExpr = true;\n          return \"string\";\n        } else {\n          stream.eat(/[`\"]/);\n        }\n\n        stream.eatWhile(/[^\\\\`\"]/);\n        return \"string\";\n      }\n\n      return tokenString;\n    }\n\n    var external = {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase,\n          scopes: [],\n          lastToken: null,\n          leavingExpr: false,\n          isDefinition: false,\n          nestedArrays: 0,\n          nestedComments: 0,\n          nestedGenerators: 0,\n          nestedParameters: 0,\n          charsAdvanced: 0,\n          firstParenPos: -1\n        };\n      },\n      token: function token(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        if (current && style) {\n          state.lastToken = current;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        var delta = 0;\n\n        if (textAfter === ']' || textAfter === ')' || textAfter === \"end\" || textAfter === \"else\" || textAfter === \"catch\" || textAfter === \"elseif\" || textAfter === \"finally\") {\n          delta = -1;\n        }\n\n        return (state.scopes.length + delta) * config.indentUnit;\n      },\n      electricInput: /\\b(end|else|catch|finally)\\b/,\n      blockCommentStart: \"#=\",\n      blockCommentEnd: \"=#\",\n      lineComment: \"#\",\n      closeBrackets: \"()[]{}\\\"\\\"\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n  CodeMirror.defineMIME(\"text/x-julia\", \"julia\");\n});"],"sourceRoot":""}
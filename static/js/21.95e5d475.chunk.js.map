{"version":3,"sources":["../node_modules/codemirror/mode/dockerfile/dockerfile.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","from","fromRegex","RegExp","shells","shellsAsArrayRegex","join","expose","exposeRegex","instructionRegex","concat","instructionOnlyLine","instructionWithArguments","defineSimpleMode","start","regex","sol","token","next","single","pop","double","array","arguments","push","meta","lineComment","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","ignoreCase","source","String","Rule","data","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","stack","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/21.95e5d475.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var from = \"from\";\n  var fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n  var shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\n  var shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n  var expose = \"expose\";\n  var exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n  var others = [\"arg\", \"from\", \"maintainer\", \"label\", \"env\", \"add\", \"copy\", \"volume\", \"user\", \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"]; // Collect all Dockerfile directives\n\n  var instructions = [from, expose].concat(shells).concat(others),\n      instructionRegex = \"(\" + instructions.join('|') + \")\",\n      instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n      instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n  CodeMirror.defineSimpleMode(\"dockerfile\", {\n    start: [// Block comment: This is a line starting with a comment\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    }, {\n      regex: fromRegex,\n      token: [null, \"keyword\"],\n      sol: true,\n      next: \"from\"\n    }, // Highlight an instruction without any arguments (for convenience)\n    {\n      regex: instructionOnlyLine,\n      token: [null, \"keyword\", null, \"error\"],\n      sol: true\n    }, {\n      regex: shellsAsArrayRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"array\"\n    }, {\n      regex: exposeRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"expose\"\n    }, // Highlight an instruction followed by arguments\n    {\n      regex: instructionWithArguments,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"arguments\"\n    }, {\n      regex: /./,\n      token: null\n    }],\n    from: [{\n      regex: /\\s*$/,\n      token: null,\n      next: \"start\"\n    }, {\n      // Line comment without instruction arguments is an error\n      regex: /(\\s*)(#.*)$/,\n      token: [null, \"error\"],\n      next: \"start\"\n    }, {\n      regex: /(\\s*\\S+\\s+)(as)/i,\n      token: [null, \"keyword\"],\n      next: \"start\"\n    }, // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }],\n    single: [{\n      regex: /(?:[^\\\\']|\\\\.)/,\n      token: \"string\"\n    }, {\n      regex: /'/,\n      token: \"string\",\n      pop: true\n    }],\n    double: [{\n      regex: /(?:[^\\\\\"]|\\\\.)/,\n      token: \"string\"\n    }, {\n      regex: /\"/,\n      token: \"string\",\n      pop: true\n    }],\n    array: [{\n      regex: /\\]/,\n      token: null,\n      next: \"start\"\n    }, {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }],\n    expose: [{\n      regex: /\\d+$/,\n      token: \"number\",\n      next: \"start\"\n    }, {\n      regex: /[^\\d]+$/,\n      token: null,\n      next: \"start\"\n    }, {\n      regex: /\\d+/,\n      token: \"number\"\n    }, {\n      regex: /[^\\d]+/,\n      token: null\n    }, // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }],\n    arguments: [{\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    }, {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /\"/,\n      token: \"string\",\n      push: \"double\"\n    }, {\n      regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /'/,\n      token: \"string\",\n      push: \"single\"\n    }, {\n      regex: /[^#\"']+[\\\\`]$/,\n      token: null\n    }, {\n      regex: /[^#\"']+$/,\n      token: null,\n      next: \"start\"\n    }, {\n      regex: /[^#\"']+/,\n      token: null\n    }, // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }],\n    meta: {\n      lineComment: \"#\"\n    }\n  });\n  CodeMirror.defineMIME(\"text/x-dockerfile\", \"dockerfile\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) {\n      if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [],\n            orig = states[state];\n\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n    }\n\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) {\n          s.persistentStates = {\n            mode: pers.mode,\n            spec: pers.spec,\n            state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n            next: s.persistentStates\n          };\n        }\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) {\n      if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    }\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) {\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    }\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) {\n              if (matches[j]) state.pending.push({\n                text: matches[j],\n                token: rule.token[j - 1]\n              });\n            }\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) {\n      if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n    }\n\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) props--;\n    }\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) {\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    }\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === val) return true;\n    }\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/prismjs/components/prism-kotlin.js"],"names":["Prism","languages","kotlin","extend","pattern","lookbehind","insertBefore","alias","interpolation","inside","rest"],"mappings":"gHAAA,SAAWA,GACTA,EAAMC,UAAUC,OAASF,EAAMC,UAAUE,OAAO,QAAS,CACvD,QAAW,CAETC,QAAS,2bACTC,YAAY,GAEd,SAAY,CAAC,eAAgB,CAC3BD,QAAS,mBACTC,YAAY,IAEd,OAAU,kIACV,SAAY,gHAEPL,EAAMC,UAAUC,OAAO,cAC9BF,EAAMC,UAAUK,aAAa,SAAU,SAAU,CAC/C,aAAc,CACZF,QAAS,sBACTG,MAAO,YAIXP,EAAMC,UAAUK,aAAa,SAAU,UAAW,CAChD,WAAc,CACZF,QAAS,sCACTG,MAAO,aAGXP,EAAMC,UAAUK,aAAa,SAAU,WAAY,CACjD,MAAS,CACPF,QAAS,YACTG,MAAO,YAGX,IAAIC,EAAgB,CAAC,CACnBJ,QAAS,cACTK,OAAQ,CACN,UAAa,CACXL,QAAS,YACTG,MAAO,YAETG,KAAMV,EAAMC,UAAUC,SAEvB,CACDE,QAAS,QACTG,MAAO,aAETP,EAAMC,UAAUC,OAAe,OAAEO,OAAST,EAAMC,UAAUC,OAAO,cAAcO,OAAS,CACtFD,cAAeA,GAhDnB,CAkDGR","file":"static/js/208.50e81fb2.chunk.js","sourcesContent":["(function (Prism) {\n  Prism.languages.kotlin = Prism.languages.extend('clike', {\n    'keyword': {\n      // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: true\n    },\n    'function': [/\\w+(?=\\s*\\()/, {\n      pattern: /(\\.)\\w+(?=\\s*\\{)/,\n      lookbehind: true\n    }],\n    'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  });\n  delete Prism.languages.kotlin[\"class-name\"];\n  Prism.languages.insertBefore('kotlin', 'string', {\n    'raw-string': {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: 'string' // See interpolation below\n\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'keyword', {\n    'annotation': {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'function', {\n    'label': {\n      pattern: /\\w+@|@\\w+/,\n      alias: 'symbol'\n    }\n  });\n  var interpolation = [{\n    pattern: /\\$\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^\\$\\{|\\}$/,\n        alias: 'variable'\n      },\n      rest: Prism.languages.kotlin\n    }\n  }, {\n    pattern: /\\$\\w+/,\n    alias: 'variable'\n  }];\n  Prism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n    interpolation: interpolation\n  };\n})(Prism);"],"sourceRoot":""}
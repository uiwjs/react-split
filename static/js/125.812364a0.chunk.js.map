{"version":3,"sources":["../node_modules/prismjs/components/prism-fsharp.min.js"],"names":["Prism","languages","fsharp","extend","comment","pattern","lookbehind","string","greedy","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation"],"mappings":"+GAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvDC,QAAS,CAAC,CACRC,QAAS,4BACTC,YAAY,GACX,CACDD,QAAS,mBACTC,YAAY,IAEdC,OAAQ,CACNF,QAAS,wIACTG,QAAQ,GAEV,aAAc,CACZH,QAAS,yHACTC,YAAY,EACZG,OAAQ,CACNC,SAAU,QACVC,YAAa,OAGjBC,QAAS,ooBACTC,OAAQ,CAAC,iCAAkC,uBAAwB,gDAAiD,kCACpHH,SAAU,6GACRV,MAAMC,UAAUa,aAAa,SAAU,UAAW,CACpDC,aAAc,CACZV,QAAS,kBACTW,MAAO,WACPP,OAAQ,CACNQ,UAAW,CACTZ,QAAS,gDACTC,YAAY,EACZU,MAAO,eAIXhB,MAAMC,UAAUa,aAAa,SAAU,cAAe,CACxD,yBAA0B,CACxBT,QAAS,sBACTW,MAAO,aAEPhB,MAAMC,UAAUa,aAAa,SAAU,SAAU,CACnDI,WAAY,CACVb,QAAS,YACTI,OAAQ,CACNE,YAAa,YACb,aAAc,CACZN,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTI,OAAQT,MAAMC,UAAUC","file":"static/js/125.812364a0.chunk.js","sourcesContent":["Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n  comment: [{\n    pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  string: {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: !0,\n    inside: {\n      operator: /->|\\*/,\n      punctuation: /\\./\n    }\n  },\n  keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n}), Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n  preprocessor: {\n    pattern: /^[^\\r\\n\\S]*#.*/m,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n  \"computation-expression\": {\n    pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: \"keyword\"\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"string\", {\n  annotation: {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      punctuation: /^\\[<|>\\]$/,\n      \"class-name\": {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: !0\n      },\n      \"annotation-content\": {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});"],"sourceRoot":""}
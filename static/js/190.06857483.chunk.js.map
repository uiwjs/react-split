{"version":3,"sources":["../node_modules/prismjs/components/prism-js-extras.js"],"names":["Prism","languages","insertBefore","pattern","RegExp","javascript","source","lookbehind","alias","unshift","maybeClassNameTokens","i","length","token","value","util","type","inside"],"mappings":"gHAAA,SAAWA,GACTA,EAAMC,UAAUC,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBC,QAASC,OAAO,YAAcJ,EAAMC,UAAUI,WAAW,qBAAqBF,QAAQG,QACtFC,YAAY,EACZC,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDR,EAAMC,UAAUC,aAAa,aAAc,WAAY,CACrD,OAAU,CACRC,QAASC,OAAO,YAAcJ,EAAMC,UAAUI,WAAqB,SAAEC,QACrEC,YAAY,EACZC,MAAO,CAAC,WAAY,sBAGxBR,EAAMC,UAAUC,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAAC,CAGnBC,QAAS,yOACTK,MAAO,cACN,CAEDL,QAAS,wBACTK,MAAO,iBAGXR,EAAMC,UAAUI,WAAoB,QAAEI,QAAQ,CAC5CN,QAAS,wCACTK,MAAO,UACN,CACDL,QAAS,WACTK,MAAO,CAAC,OAAQ,QACf,CACDL,QAAS,gBACTK,MAAO,QAETR,EAAMC,UAAUC,aAAa,aAAc,WAAY,CACrD,OAAU,CACRC,QAAS,QACTK,MAAO,YAET,MAAS,CACPL,QAAS,KACTK,MAAO,cAGXR,EAAMC,UAAUC,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBC,QAAS,kDACTI,YAAY,GAEd,mBAAoB,CAClBJ,QAAS,8CACTI,YAAY,GAEd,IAAO,CAELJ,QAAS,kFACTK,MAAO,YAET,QAAW,CACTL,QAAS,qBACTK,MAAO,gBAMX,IAFA,IAAIE,EAAuB,CAAC,WAAY,oBAAqB,SAAU,kBAAmB,mBAEjFC,EAAI,EAAGA,EAAID,EAAqBE,OAAQD,IAAK,CACpD,IAAIE,EAAQH,EAAqBC,GAC7BG,EAAQd,EAAMC,UAAUI,WAAWQ,GAER,WAA3Bb,EAAMe,KAAKC,KAAKF,KAClBA,EAAQd,EAAMC,UAAUI,WAAWQ,GAAS,CAC1CV,QAASW,IAKb,IAAIG,EAASH,EAAMG,QAAU,GAC7BH,EAAMG,OAASA,EACfA,EAAO,oBAAsB,iBAlFjC,CAoFGjB","file":"static/js/190.06857483.chunk.js","sourcesContent":["(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);"],"sourceRoot":""}
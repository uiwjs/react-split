{"version":3,"sources":["../node_modules/prismjs/components/prism-erlang.min.js"],"names":["Prism","languages","erlang","comment","string","pattern","greedy","alias","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"mappings":"+GAAAA,MAAMC,UAAUC,OAAS,CACvBC,QAAS,MACTC,OAAQ,CACNC,QAAS,wBACTC,QAAQ,GAEV,kBAAmB,CACjBD,QAAS,8BACTE,MAAO,YAET,cAAe,CACbF,QAAS,wBACTE,MAAO,QAETC,QAAS,qBACTC,QAAS,0DACTC,OAAQ,CAAC,SAAU,iBAAkB,0CACrCC,SAAU,sBACVC,SAAU,CACRP,QAAS,gCACTQ,YAAY,GAEdC,SAAU,CAAC,+GAAgH,CACzHT,QAAS,iBACTQ,YAAY,GACX,CACDR,QAAS,iBACTQ,YAAY,IAEdE,KAAM,gBACNC,YAAa","file":"static/js/111.006b590a.chunk.js","sourcesContent":["Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n};"],"sourceRoot":""}
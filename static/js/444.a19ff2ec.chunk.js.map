{"version":3,"sources":["../node_modules/codemirror/mode/wast/wast.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","comment","meta","dontIndentStates","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/444.a19ff2ec.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode('wast', {\n    start: [{\n      regex: /[+\\-]?(?:nan(?::0x[0-9a-fA-F]+)?|infinity|inf|0x[0-9a-fA-F]+\\.?[0-9a-fA-F]*p[+\\/-]?\\d+|\\d+(?:\\.\\d*)?[eE][+\\-]?\\d*|\\d+\\.\\d*|0x[0-9a-fA-F]+|\\d+)/,\n      token: \"number\"\n    }, {\n      regex: /anyfunc|mut|nop|block|if|then|else|loop|br|br_if|br_table|call|call_indirect|drop|end|return|local\\.get|local\\.set|tee_local|global\\.get|global\\.set|i32\\.load|i64\\.load|f32\\.load|f64\\.load|i32\\.store|i64\\.store|f32\\.store|f64\\.store|i32\\.load8_s|i64\\.load8_s|i32\\.load8_u|i64\\.load8_u|i32\\.load16_s|i64\\.load16_s|i32\\.load16_u|i64\\.load16_u|i64\\.load32_s|i64\\.load32_u|i32\\.store8|i64\\.store8|i32\\.store16|i64\\.store16|i32\\.const|i64\\.const|f32\\.const|f64\\.const|i32\\.eqz|i64\\.eqz|i32\\.clz|i64\\.clz|i32\\.ctz|i64\\.ctz|i32\\.popcnt|i64\\.popcnt|f32\\.neg|f64\\.neg|f32\\.abs|f64\\.abs|f32\\.sqrt|f64\\.sqrt|f32\\.ceil|f64\\.ceil|f32\\.floor|f64\\.floor|f32\\.trunc|f64\\.trunc|f32\\.nearest|f64\\.nearest|i32\\.add|i64\\.add|i32\\.sub|i64\\.sub|i32\\.mul|i64\\.mul|i32\\.div_s|i64\\.div_s|i32\\.div_u|i64\\.div_u|i32\\.rem_s|i64\\.rem_s|i32\\.rem_u|i64\\.rem_u|i32\\.and|i64\\.and|i32\\.or|i64\\.or|i32\\.xor|i64\\.xor|i32\\.shl|i64\\.shl|i32\\.shr_s|i64\\.shr_s|i32\\.shr_u|i64\\.shr_u|i32\\.rotl|i64\\.rotl|i32\\.rotr|i64\\.rotr|f32\\.add|f64\\.add|f32\\.sub|f64\\.sub|f32\\.mul|f64\\.mul|f32\\.div|f64\\.div|f32\\.min|f64\\.min|f32\\.max|f64\\.max|f32\\.copysign|f64\\.copysign|i32\\.eq|i64\\.eq|i32\\.ne|i64\\.ne|i32\\.lt_s|i64\\.lt_s|i32\\.lt_u|i64\\.lt_u|i32\\.le_s|i64\\.le_s|i32\\.le_u|i64\\.le_u|i32\\.gt_s|i64\\.gt_s|i32\\.gt_u|i64\\.gt_u|i32\\.ge_s|i64\\.ge_s|i32\\.ge_u|i64\\.ge_u|f32\\.eq|f64\\.eq|f32\\.ne|f64\\.ne|f32\\.lt|f64\\.lt|f32\\.le|f64\\.le|f32\\.gt|f64\\.gt|f32\\.ge|f64\\.ge|i64\\.extend_s\\/i32|i64\\.extend_u\\/i32|i32\\.wrap\\/i64|i32\\.trunc_s\\/f32|i64\\.trunc_s\\/f32|i32\\.trunc_s\\/f64|i64\\.trunc_s\\/f64|i32\\.trunc_u\\/f32|i64\\.trunc_u\\/f32|i32\\.trunc_u\\/f64|i64\\.trunc_u\\/f64|f32\\.convert_s\\/i32|f64\\.convert_s\\/i32|f32\\.convert_s\\/i64|f64\\.convert_s\\/i64|f32\\.convert_u\\/i32|f64\\.convert_u\\/i32|f32\\.convert_u\\/i64|f64\\.convert_u\\/i64|f64\\.promote\\/f32|f32\\.demote\\/f64|f32\\.reinterpret\\/i32|i32\\.reinterpret\\/f32|f64\\.reinterpret\\/i64|i64\\.reinterpret\\/f64|select|unreachable|current_memory|memory.size|grow_memory|memory.grow|type|func|param|result|local|global|module|table|memory|start|elem|data|offset|import|export/,\n      token: \"keyword\"\n    }, {\n      regex: /\\b(i32|i64|f32|f64)\\b/,\n      token: \"atom\"\n    }, {\n      regex: /\\$([a-zA-Z0-9_`\\+\\-\\*\\/\\\\\\^~=<>!\\?@#$%&|:\\.]+)/,\n      token: \"variable-2\"\n    }, {\n      regex: /\"(?:[^\"\\\\\\x00-\\x1f\\x7f]|\\\\[nt\\\\'\"]|\\\\[0-9a-fA-F][0-9a-fA-F])*\"/,\n      token: \"string\"\n    }, {\n      regex: /\\(;.*?/,\n      token: \"comment\",\n      next: \"comment\"\n    }, {\n      regex: /;;.*$/,\n      token: \"comment\"\n    }, {\n      regex: /\\(/,\n      indent: true\n    }, {\n      regex: /\\)/,\n      dedent: true\n    }],\n    comment: [{\n      regex: /.*?;\\)/,\n      token: \"comment\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"comment\"\n    }],\n    meta: {\n      dontIndentStates: ['comment']\n    }\n  }); // https://github.com/WebAssembly/design/issues/981 mentions text/webassembly,\n  // which seems like a reasonable choice, although it's not standard right now.\n\n  CodeMirror.defineMIME(\"text/webassembly\", \"wast\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) {\n      if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [],\n            orig = states[state];\n\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n    }\n\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) {\n          s.persistentStates = {\n            mode: pers.mode,\n            spec: pers.spec,\n            state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n            next: s.persistentStates\n          };\n        }\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) {\n      if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    }\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) {\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    }\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) {\n              if (matches[j]) state.pending.push({\n                text: matches[j],\n                token: rule.token[j - 1]\n              });\n            }\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) {\n      if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n    }\n\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) props--;\n    }\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) {\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    }\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === val) return true;\n    }\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}
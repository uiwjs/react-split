{"version":3,"sources":["../node_modules/prismjs/components/prism-xquery.min.js"],"names":["r","languages","xquery","extend","pattern","greedy","alias","string","extension","variable","axis","lookbehind","keyword","function","builtin","number","operator","punctuation","tag","inside","expression","s","e","content","map","join","hooks","add","language","l","t","n","length","a","o","type","tagName","pop","push","openedBraces","i","splice","test","Token","tokens","Prism"],"mappings":"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","file":"static/js/420.27ce3364.chunk.js","sourcesContent":["!function (r) {\n  r.languages.xquery = r.languages.extend(\"markup\", {\n    \"xquery-comment\": {\n      pattern: /\\(:[\\s\\S]*?:\\)/,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: !0\n    },\n    extension: {\n      pattern: /\\(#.+?#\\)/,\n      alias: \"symbol\"\n    },\n    variable: /\\$[\\w-:]+/,\n    axis: {\n      pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    \"keyword-operator\": {\n      pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    keyword: {\n      pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n    \"xquery-element\": {\n      pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"tag\"\n    },\n    \"xquery-attribute\": {\n      pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"attr-name\"\n    },\n    builtin: {\n      pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n    operator: [/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/, {\n      pattern: /(\\s)-(?=\\s)/,\n      lookbehind: !0\n    }],\n    punctuation: /[[\\](){},;:/]/\n  }), r.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, r.languages.xquery.tag.inside[\"attr-value\"].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i, r.languages.xquery.tag.inside[\"attr-value\"].inside.punctuation = /^=\"|\"$/, r.languages.xquery.tag.inside[\"attr-value\"].inside.expression = {\n    pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n    inside: r.languages.xquery,\n    alias: \"language-xquery\"\n  };\n\n  var s = function s(e) {\n    return \"string\" == typeof e ? e : \"string\" == typeof e.content ? e.content : e.content.map(s).join(\"\");\n  },\n      l = function l(e) {\n    for (var t = [], n = 0; n < e.length; n++) {\n      var a = e[n],\n          o = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < t.length && t[t.length - 1].tagName === s(a.content[0].content[1]) && t.pop() : \"/>\" === a.content[a.content.length - 1].content || t.push({\n        tagName: s(a.content[0].content[1]),\n        openedBraces: 0\n      }) : !(0 < t.length && \"punctuation\" === a.type && \"{\" === a.content) || e[n + 1] && \"punctuation\" === e[n + 1].type && \"{\" === e[n + 1].content || e[n - 1] && \"plain-text\" === e[n - 1].type && \"{\" === e[n - 1].content ? 0 < t.length && 0 < t[t.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? t[t.length - 1].openedBraces-- : \"comment\" !== a.type && (o = !0) : t[t.length - 1].openedBraces++), (o || \"string\" == typeof a) && 0 < t.length && 0 === t[t.length - 1].openedBraces) {\n        var i = s(a);\n        n < e.length - 1 && (\"string\" == typeof e[n + 1] || \"plain-text\" === e[n + 1].type) && (i += s(e[n + 1]), e.splice(n + 1, 1)), 0 < n && (\"string\" == typeof e[n - 1] || \"plain-text\" === e[n - 1].type) && (i = s(e[n - 1]) + i, e.splice(n - 1, 1), n--), /^\\s+$/.test(i) ? e[n] = i : e[n] = new r.Token(\"plain-text\", i, null, i);\n      }\n\n      a.content && \"string\" != typeof a.content && l(a.content);\n    }\n  };\n\n  r.hooks.add(\"after-tokenize\", function (e) {\n    \"xquery\" === e.language && l(e.tokens);\n  });\n}(Prism);"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/parser/lib/index.js"],"names":["Object","defineProperty","exports","value","codeFrameColumns","default","rawLines","lineNumber","colNumber","opts","deprecationWarningShown","message","process","emitWarning","deprecationError","Error","name","console","warn","location","start","column","Math","max","line","_highlight","obj","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","loc","source","startLoc","assign","endLoc","end","linesAbove","linesBelow","startLine","startColumn","endLine","endColumn","min","length","lineDiff","markerLines","i","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","string","lines","split","hasColumns","numberMaxWidth","String","highlightedLines","frame","slice","map","index","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","Array","isArray","markerSpacing","replace","numberOfMarkers","repeat","join","reset","program","expression","statement","statements","smart","t","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","tpl","args","extendedTrace","_string","merge","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","arg","err","metadata","replacements","normalizeReplacements","_parse","_populate","options","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","Set","keyword","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","regex","comment","invalid","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","token","offset","text","type","isKeyword","isStrictReservedWord","test","substr","toLowerCase","colorize","supportsColor","constructor","enabled","level","match","exec","matchToToken","names","nameSet","prefix","result","buildTemplateCode","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","buildLiteralData","defaultReplacements","forEach","replacement","keys","push","path","file","builtinClasses","isLoose","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","a","b","_ref","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","RegExp","reduce","acc","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","state","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","expectedNode","isNewExpression","isFunction","isStatement","resolve","resolveAncestors","placeholderName","reverse","stringLiteral","emptyStatement","items","splice","applyReplacement","e","formatters","_builder","_default","bind","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","filter","declare","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","col","SourceLocation","filename","identifierName","last","CommentsParser","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","lastTokStart","lastTokStartLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","getLineInfo","errorTemplate","raiseWithData","getLocationForPosition","_","errorRecovery","errors","_raise","data","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","tsParseModifier","accessibility","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","readToken_lt_gt","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","hasBody","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","escStart","identifierCheck","esc","readWord1","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes"],"mappings":"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","file":"static/js/vendors-runtime-template.3093e2ab.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseOverwrite(pos, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(...args) {\n      super(...args);\n      this.flowPragma = undefined;\n    }\n\n    getScopeHandler() {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      if (this.match(types._this)) {\n        node.this = this.flowParseFunctionTypeParam(true);\n        node.this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n\n          if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n            this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first) {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === types._this;\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n\n        name = this.parseIdentifier(isThis);\n\n        if (this.eat(types.question)) {\n          optional = true;\n\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n      let _this = null;\n\n      if (this.match(types._this)) {\n        _this = this.flowParseFunctionTypeParam(true);\n        _this.name = null;\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n\n      return {\n        params,\n        rest,\n        _this\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name) || this.match(types._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n        const params = method.value.params;\n\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    checkGetterSetterParams(method) {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n\n      if (params.length > 0) {\n        const param = params[0];\n\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(types.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom() {\n      switch (this.state.type) {\n        case types._this:\n          return this.parseIdentifier(true);\n\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n      let hasUnknownMembers = false;\n\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return {\n        members,\n        hasUnknownMembers\n      };\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const {\n        members,\n        hasUnknownMembers\n      } = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (const member of members.defaultedMembers) {\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/prismjs/components/prism-antlr4.js"],"names":["Prism","languages","antlr4","pattern","greedy","alias","inside","lookbehind","g4"],"mappings":"8GAAAA,MAAMC,UAAUC,OAAS,CACvB,QAAW,gCACX,OAAU,CACRC,QAAS,wBACTC,QAAQ,GAEV,kBAAmB,CACjBD,QAAS,2BACTC,QAAQ,EACRC,MAAO,QACPC,OAAQ,CACN,MAAS,CACPH,QAAS,yCACTI,YAAY,EACZF,MAAO,eAET,OAAU,sEACV,YAAe,WAGnB,OAAU,CACRF,QAAS,0DACTC,QAAQ,EACRE,OAAQ,CACN,QAAW,CAETH,QAAS,oBACTI,YAAY,GAEd,YAAe,SAGnB,QAAW,CACTJ,QAAS,kEACTI,YAAY,EACZD,OAAQ,CACN,SAAY,yBACZ,YAAe,UAGnB,WAAc,CACZH,QAAS,iBACTE,MAAO,WAET,MAAS,CACPF,QAAS,aACTE,MAAO,eAET,QAAW,gHACX,WAAc,CAAC,CACbF,QAAS,qBACTE,MAAO,CAAC,OAAQ,eACf,CACDF,QAAS,qBACTE,MAAO,CAAC,QAAS,cAEnB,SAAY,mBACZ,SAAY,wBACZ,YAAe,WAEjBL,MAAMC,UAAUO,GAAKR,MAAMC,UAAUC","file":"static/js/14.fbc07494.chunk.js","sourcesContent":["Prism.languages.antlr4 = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'string': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n    greedy: true\n  },\n  'character-class': {\n    pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n    greedy: true,\n    alias: 'regex',\n    inside: {\n      'range': {\n        pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'escape': /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n      'punctuation': /[\\[\\]]/\n    }\n  },\n  'action': {\n    pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n    greedy: true,\n    inside: {\n      'content': {\n        // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n        pattern: /(\\{)[\\s\\S]+(?=\\})/,\n        lookbehind: true\n      },\n      'punctuation': /[{}]/\n    }\n  },\n  'command': {\n    pattern: /(->\\s*)(?:\\s*(?:,\\s*)?[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n    lookbehind: true,\n    inside: {\n      'function': /\\b\\w+(?=\\s*(?:[,(]|$))/,\n      'punctuation': /[,()]/\n    }\n  },\n  'annotation': {\n    pattern: /@\\w+(?:::\\w+)*/,\n    alias: 'keyword'\n  },\n  'label': {\n    pattern: /#[ \\t]*\\w+/,\n    alias: 'punctuation'\n  },\n  'keyword': /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n  'definition': [{\n    pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n    alias: ['rule', 'class-name']\n  }, {\n    pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n    alias: ['token', 'constant']\n  }],\n  'constant': /\\b[A-Z][A-Z_]*\\b/,\n  'operator': /\\.\\.|->|[|~]|[*+?]\\??/,\n  'punctuation': /[;:()=]/\n};\nPrism.languages.g4 = Prism.languages.antlr4;"],"sourceRoot":""}
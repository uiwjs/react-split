{"version":3,"sources":["../node_modules/prismjs/components/prism-velocity.js"],"names":["Prism","languages","velocity","extend","pattern","lookbehind","inside","greedy","variable","insertBefore","alias","rest"],"mappings":"gHAAA,SAAWA,GACTA,EAAMC,UAAUC,SAAWF,EAAMC,UAAUE,OAAO,SAAU,IAC5D,IAAID,EAAW,CACb,SAAY,CACVE,QAAS,yGACTC,YAAY,EACZC,OAAQ,IAGV,OAAU,CACRF,QAAS,kBACTG,QAAQ,GAEV,OAAU,UACV,QAAW,qBACX,SAAY,iEACZ,YAAe,gBAEjBL,EAASM,SAASF,OAAS,CACzB,OAAUJ,EAAiB,OAC3B,SAAY,CACVE,QAAS,4BACTC,YAAY,GAEd,OAAUH,EAAiB,OAC3B,QAAWA,EAAkB,QAC7B,YAAeA,EAAsB,aAEvCF,EAAMC,UAAUQ,aAAa,WAAY,UAAW,CAClD,SAAY,CACVL,QAAS,4BACTC,YAAY,EACZE,QAAQ,EACRD,OAAQ,CACN,YAAe,gBAGnB,mBAAoB,CAAC,CACnBF,QAAS,0BACTC,YAAY,EACZE,QAAQ,EACRG,MAAO,WACN,CACDN,QAAS,gBACTC,YAAY,EACZE,QAAQ,EACRG,MAAO,YAET,UAAa,CACXN,QAAS,uFACTC,YAAY,EACZC,OAAQ,CACN,QAAW,CACTF,QAAS,2CACTE,OAAQ,CACN,YAAe,SAGnBK,KAAMT,IAGV,SAAYA,EAAmB,WAEjCF,EAAMC,UAAUC,SAAc,IAAEI,OAAO,cAAcA,OAAOK,KAAOX,EAAMC,UAAUC,SA/DrF,CAgEGF","file":"static/js/401.19ee366e.chunk.js","sourcesContent":["(function (Prism) {\n  Prism.languages.velocity = Prism.languages.extend('markup', {});\n  var velocity = {\n    'variable': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: true,\n      inside: {} // See below\n\n    },\n    'string': {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    'number': /\\b\\d+\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    'punctuation': /[(){}[\\]:,.]/\n  };\n  velocity.variable.inside = {\n    'string': velocity['string'],\n    'function': {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: true\n    },\n    'number': velocity['number'],\n    'boolean': velocity['boolean'],\n    'punctuation': velocity['punctuation']\n  };\n  Prism.languages.insertBefore('velocity', 'comment', {\n    'unparsed': {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^#\\[\\[|]]#$/\n      }\n    },\n    'velocity-comment': [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }],\n    'directive': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: true,\n      inside: {\n        'keyword': {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            'punctuation': /[{}]/\n          }\n        },\n        rest: velocity\n      }\n    },\n    'variable': velocity['variable']\n  });\n  Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n})(Prism);"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","beforeExpr","startsExpr","isLoop","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","length","CommentsParser","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","types","brace","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","out","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","curContext","jsxReadToken","jsxReadWord","jsxReadString","prevType","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","result","tryParse","failState","clone","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","indexOf","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","hasPrecedingLineBreak","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","content","mods","char","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","names","join","fn","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","parseModuleExpression","update","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","require","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","path","builtinClasses","isLoose","assumptions","classState","parent","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","constructor","blockStatement","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","constantSuper","refToPreserve","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","superIsCallableConstructor","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","isStringLiteral","_helperFunctionName","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","toExpression","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","prototype","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","statements","smart","formatters","_builder","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.1778c6b4.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScopeFlags() & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        if (result.error) {\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}
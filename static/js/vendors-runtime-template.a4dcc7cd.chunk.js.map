{"version":3,"sources":["../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","beforeExpr","startsExpr","isLoop","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","node","comments","undefined","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","types","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","call","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","bind","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expression","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","moduleError","_unused2","getExpression","tokTypes","path","builtinClasses","isLoose","assumptions","classState","parent","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","constructor","blockStatement","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","constantSuper","refToPreserve","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","superIsCallableConstructor","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","isStringLiteral","_helperFunctionName","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","toExpression","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","_helperAnnotateAsPure","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","require","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","statements","smart","formatters","_builder","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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AAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,GAAI,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,MAC3wDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IA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","file":"static/js/vendors-runtime-template.a4dcc7cd.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const {\n            value,\n            start\n          } = this.state;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.classScope.usePrivateName(value, start);\n          } else {\n            this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n          }\n\n          return node;\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}
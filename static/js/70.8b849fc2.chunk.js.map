{"version":3,"sources":["../node_modules/prismjs/components/prism-core.js"],"names":["Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","parentNode","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","oneshot","target","patterns","j","length","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","currentNode","next","pos","tail","str","removeCount","prev","lastIndex","from","index","to","p","k","after","removeFrom","removeRange","wrapped","list","array","node","push","toArray","all","add","name","callbacks","matchedStr","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports"],"mappings":"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","file":"static/js/70.8b849fc2.chunk.js","sourcesContent":["var _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function deepClone(o, visited) {\n        var clone,\n            id,\n            type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return clone;\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document) {\n          return document.currentScript;\n        } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need an object and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentNode;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  function Token(type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n    this.greedy = !!greedy;\n  }\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {boolean} [oneshot=false]\n   * @param {string} [target]\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, oneshot, target) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (target && target == token + ',' + j) {\n          return;\n        }\n\n        var pattern = patterns[j],\n            inside = pattern.inside,\n            lookbehind = !!pattern.lookbehind,\n            greedy = !!pattern.greedy,\n            lookbehindLength = 0,\n            alias = pattern.alias;\n\n        if (greedy && !pattern.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n          pattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n        }\n\n        pattern = pattern.pattern || pattern;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          if (greedy && currentNode != tokenList.tail.prev) {\n            pattern.lastIndex = pos;\n            var match = pattern.exec(text);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string' && !k.prev.value.greedy); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            pattern.lastIndex = 0;\n            var match = pattern.exec(str);\n          }\n\n          if (!match) {\n            if (oneshot) {\n              break;\n            }\n\n            continue;\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0;\n          }\n\n          var from = match.index + lookbehindLength,\n              match = match[0].slice(lookbehindLength),\n              to = from + match.length,\n              before = str.slice(0, from),\n              after = str.slice(to);\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) matchGrammar(text, tokenList, grammar, currentNode.prev, pos, true, token + ',' + j);\n          if (oneshot) break;\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   */\n\n  /**\n   * @template T\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } //Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/codemirror/mode/rpm/rpm.js"],"names":["CodeMirror","defineMode","headerSeperator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","peek","skipToEnd","eol","mod"],"mappings":"mHAOG,SAAUA,GACX,aAEAA,EAAWC,WAAW,eAAe,WACnC,IAAIC,EAAkB,OAClBC,EAAa,sIACbC,EAAc,oBAClB,MAAO,CACLC,MAAO,SAAeC,GACpB,GAAIA,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMN,GACf,MAAO,MAGT,GAAII,EAAOE,MAAML,GACf,MAAO,MAIX,OAAIG,EAAOE,MAAMJ,GACR,UAGTE,EAAOG,OACA,WAIbT,EAAWU,WAAW,qBAAsB,eAE5CV,EAAWC,WAAW,YAAY,WAChC,IAAIU,EAAO,qHACPC,EAAW,mBACXC,EAAU,2NACVC,EAAuB,wBAEvBC,EAAsB,iBAEtBC,EAAY,0CAEhB,MAAO,CACLC,WAAY,WACV,MAAO,CACLC,aAAa,EACbC,iBAAiB,EACjBN,SAAS,IAGbR,MAAO,SAAeC,EAAQc,GAG5B,GAAU,KAFDd,EAAOe,OAId,OADAf,EAAOgB,YACA,UAGT,GAAIhB,EAAOC,MAAO,CAChB,GAAID,EAAOE,MAAMI,GACf,MAAO,SAGT,GAAIN,EAAOE,MAAMK,GACf,MAAO,OAIX,GAAIP,EAAOE,MAAM,UACf,MAAO,MAIT,GAAIF,EAAOE,MAAM,cACf,MAAO,MAIT,GAAIF,EAAOE,MAAMO,GACf,MAAO,UAGT,GAAIT,EAAOE,MAAMM,GAEf,OADAM,EAAMF,aAAc,EACb,UAGT,GAAIE,EAAMF,YAAa,CACrB,GAAIZ,EAAOE,MAAMQ,GACf,MAAO,WAGT,GAAIV,EAAOE,MAAM,UACf,MAAO,SAGLF,EAAOiB,QACTH,EAAMF,aAAc,GAIxB,GAAIZ,EAAOE,MAAMG,GAKf,OAJIL,EAAOiB,QACTH,EAAMF,aAAc,GAGf,SAIT,GAAIZ,EAAOE,MAAM,WAKf,OAJIF,EAAOE,MAAM,SACfY,EAAMD,iBAAkB,GAGnB,UAGT,GAAIC,EAAMD,gBAAiB,CACzB,GAAIb,EAAOE,MAAM,QACf,MAAO,SAGT,GAAIF,EAAOE,MAAM,OAEf,OADAY,EAAMD,iBAAkB,EACjB,UAKX,OAAIb,EAAOE,MAAM,0BACXF,EAAOiB,QACTH,EAAMF,aAAc,GAGf,QAITZ,EAAOG,OACA,WAIbT,EAAWU,WAAW,kBAAmB,YAjJvCc,CAAI,EAAQ","file":"static/js/507.c2e812c9.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"rpm-changes\", function () {\n    var headerSeperator = /^-+$/;\n    var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n    var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n    return {\n      token: function token(stream) {\n        if (stream.sol()) {\n          if (stream.match(headerSeperator)) {\n            return 'tag';\n          }\n\n          if (stream.match(headerLine)) {\n            return 'tag';\n          }\n        }\n\n        if (stream.match(simpleEmail)) {\n          return 'string';\n        }\n\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\"); // Quick and dirty spec file highlighting\n\n  CodeMirror.defineMode(\"rpm-spec\", function () {\n    var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n    var preamble = /^[a-zA-Z0-9()]+:/;\n    var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n    var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n\n    var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n\n    var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n    return {\n      startState: function startState() {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.peek();\n\n        if (ch == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (stream.sol()) {\n          if (stream.match(preamble)) {\n            return \"header\";\n          }\n\n          if (stream.match(section)) {\n            return \"atom\";\n          }\n        }\n\n        if (stream.match(/^\\$\\w+/)) {\n          return \"def\";\n        } // Variables like '$RPM_BUILD_ROOT'\n\n\n        if (stream.match(/^\\$\\{\\w+\\}/)) {\n          return \"def\";\n        } // Variables like '${RPM_BUILD_ROOT}'\n\n\n        if (stream.match(control_flow_simple)) {\n          return \"keyword\";\n        }\n\n        if (stream.match(control_flow_complex)) {\n          state.controlFlow = true;\n          return \"keyword\";\n        }\n\n        if (state.controlFlow) {\n          if (stream.match(operators)) {\n            return \"operator\";\n          }\n\n          if (stream.match(/^(\\d+)/)) {\n            return \"number\";\n          }\n\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n        }\n\n        if (stream.match(arch)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n\n          return \"number\";\n        } // Macros like '%make_install' or '%attr(0775,root,root)'\n\n\n        if (stream.match(/^%[\\w]+/)) {\n          if (stream.match(/^\\(/)) {\n            state.macroParameters = true;\n          }\n\n          return \"keyword\";\n        }\n\n        if (state.macroParameters) {\n          if (stream.match(/^\\d+/)) {\n            return \"number\";\n          }\n\n          if (stream.match(/^\\)/)) {\n            state.macroParameters = false;\n            return \"keyword\";\n          }\n        } // Macros like '%{defined fedora}'\n\n\n        if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n\n          return \"def\";\n        } //TODO: Include bash script sub-parser (CodeMirror supports that)\n\n\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n});"],"sourceRoot":""}
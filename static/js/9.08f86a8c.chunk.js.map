{"version":3,"sources":["../node_modules/prismjs/components/prism-abnf.min.js"],"names":["n","i","Prism","languages","abnf","comment","string","pattern","greedy","inside","punctuation","range","alias","terminal","repetition","lookbehind","definition","RegExp","rule","operator"],"mappings":"8GAAC,SAAUA,GACT,IAAIC,EAAI,qFACRC,MAAMC,UAAUC,KAAO,CACrBC,QAAS,MACTC,OAAQ,CACNC,QAAS,wBACTC,QAAQ,EACRC,OAAQ,CACNC,YAAa,WAGjBC,MAAO,CACLJ,QAAS,iDACTK,MAAO,UAETC,SAAU,CACRN,QAAS,mEACTK,MAAO,UAETE,WAAY,CACVP,QAAS,6BACTQ,YAAY,EACZH,MAAO,YAETI,WAAY,CACVT,QAAS,gDACTQ,YAAY,EACZH,MAAO,UACPH,OAAQ,CACNC,YAAa,QAGjB,YAAa,CACXH,QAASU,OAAO,kBAAoBhB,EAAI,KAAOA,EAAI,eAAgB,KACnEc,YAAY,EACZH,MAAO,CAAC,OAAQ,YAChBH,OAAQ,CACNC,YAAa,QAGjBQ,KAAM,CACJX,QAAS,sCACTQ,YAAY,EACZN,OAAQ,CACNC,YAAa,QAGjBS,SAAU,UACVT,YAAa,YAhDhB","file":"static/js/9.08f86a8c.chunk.js","sourcesContent":["!function (n) {\n  var i = \"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";\n  Prism.languages.abnf = {\n    comment: /;.*/,\n    string: {\n      pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n      greedy: !0,\n      inside: {\n        punctuation: /^%[is]/\n      }\n    },\n    range: {\n      pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n      alias: \"number\"\n    },\n    terminal: {\n      pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n      alias: \"number\"\n    },\n    repetition: {\n      pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    definition: {\n      pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n      lookbehind: !0,\n      alias: \"keyword\",\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    \"core-rule\": {\n      pattern: RegExp(\"(?:(^|[^<\\\\w-])\" + i + \"|<\" + i + \">)(?![\\\\w-])\", \"i\"),\n      lookbehind: !0,\n      alias: [\"rule\", \"constant\"],\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    rule: {\n      pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    operator: /=\\/?|\\//,\n    punctuation: /[()\\[\\]]/\n  };\n}();"],"sourceRoot":""}
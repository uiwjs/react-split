{"version":3,"sources":["../node_modules/codemirror/mode/asterisk/asterisk.js"],"names":["CodeMirror","defineMode","atoms","dpcmd","apps","startState","blockComment","extenStart","extenSame","extenInclude","extenExten","extenPriority","extenApplication","token","stream","state","cur","eatSpace","eatWhile","current","test","skipToEnd","next","toLowerCase","indexOf","ch","match","skipTo","eat","peek","basicToken","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod"],"mappings":"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","file":"static/js/32.dcc9339b.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * =====================================================================================\n *\n *       Filename:  mode/asterisk/asterisk.js\n *\n *    Description:  CodeMirror mode for Asterisk dialplan\n *\n *        Created:  05/17/2012 09:20:25 PM\n *       Revision:  08/05/2019 AstLinux Project: Support block-comments\n *\n *         Author:  Stas Kobzar (stas@modulis.ca),\n *        Company:  Modulis.ca Inc.\n *\n * =====================================================================================\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"asterisk\", function () {\n    var atoms = [\"exten\", \"same\", \"include\", \"ignorepat\", \"switch\"],\n        dpcmd = [\"#include\", \"#exec\"],\n        apps = [\"addqueuemember\", \"adsiprog\", \"aelsub\", \"agentlogin\", \"agentmonitoroutgoing\", \"agi\", \"alarmreceiver\", \"amd\", \"answer\", \"authenticate\", \"background\", \"backgrounddetect\", \"bridge\", \"busy\", \"callcompletioncancel\", \"callcompletionrequest\", \"celgenuserevent\", \"changemonitor\", \"chanisavail\", \"channelredirect\", \"chanspy\", \"clearhash\", \"confbridge\", \"congestion\", \"continuewhile\", \"controlplayback\", \"dahdiacceptr2call\", \"dahdibarge\", \"dahdiras\", \"dahdiscan\", \"dahdisendcallreroutingfacility\", \"dahdisendkeypadfacility\", \"datetime\", \"dbdel\", \"dbdeltree\", \"deadagi\", \"dial\", \"dictate\", \"directory\", \"disa\", \"dumpchan\", \"eagi\", \"echo\", \"endwhile\", \"exec\", \"execif\", \"execiftime\", \"exitwhile\", \"extenspy\", \"externalivr\", \"festival\", \"flash\", \"followme\", \"forkcdr\", \"getcpeid\", \"gosub\", \"gosubif\", \"goto\", \"gotoif\", \"gotoiftime\", \"hangup\", \"iax2provision\", \"ices\", \"importvar\", \"incomplete\", \"ivrdemo\", \"jabberjoin\", \"jabberleave\", \"jabbersend\", \"jabbersendgroup\", \"jabberstatus\", \"jack\", \"log\", \"macro\", \"macroexclusive\", \"macroexit\", \"macroif\", \"mailboxexists\", \"meetme\", \"meetmeadmin\", \"meetmechanneladmin\", \"meetmecount\", \"milliwatt\", \"minivmaccmess\", \"minivmdelete\", \"minivmgreet\", \"minivmmwi\", \"minivmnotify\", \"minivmrecord\", \"mixmonitor\", \"monitor\", \"morsecode\", \"mp3player\", \"mset\", \"musiconhold\", \"nbscat\", \"nocdr\", \"noop\", \"odbc\", \"odbc\", \"odbcfinish\", \"originate\", \"ospauth\", \"ospfinish\", \"osplookup\", \"ospnext\", \"page\", \"park\", \"parkandannounce\", \"parkedcall\", \"pausemonitor\", \"pausequeuemember\", \"pickup\", \"pickupchan\", \"playback\", \"playtones\", \"privacymanager\", \"proceeding\", \"progress\", \"queue\", \"queuelog\", \"raiseexception\", \"read\", \"readexten\", \"readfile\", \"receivefax\", \"receivefax\", \"receivefax\", \"record\", \"removequeuemember\", \"resetcdr\", \"retrydial\", \"return\", \"ringing\", \"sayalpha\", \"saycountedadj\", \"saycountednoun\", \"saycountpl\", \"saydigits\", \"saynumber\", \"sayphonetic\", \"sayunixtime\", \"senddtmf\", \"sendfax\", \"sendfax\", \"sendfax\", \"sendimage\", \"sendtext\", \"sendurl\", \"set\", \"setamaflags\", \"setcallerpres\", \"setmusiconhold\", \"sipaddheader\", \"sipdtmfmode\", \"sipremoveheader\", \"skel\", \"slastation\", \"slatrunk\", \"sms\", \"softhangup\", \"speechactivategrammar\", \"speechbackground\", \"speechcreate\", \"speechdeactivategrammar\", \"speechdestroy\", \"speechloadgrammar\", \"speechprocessingsound\", \"speechstart\", \"speechunloadgrammar\", \"stackpop\", \"startmusiconhold\", \"stopmixmonitor\", \"stopmonitor\", \"stopmusiconhold\", \"stopplaytones\", \"system\", \"testclient\", \"testserver\", \"transfer\", \"tryexec\", \"trysystem\", \"unpausemonitor\", \"unpausequeuemember\", \"userevent\", \"verbose\", \"vmauthenticate\", \"vmsayname\", \"voicemail\", \"voicemailmain\", \"wait\", \"waitexten\", \"waitfornoise\", \"waitforring\", \"waitforsilence\", \"waitmusiconhold\", \"waituntil\", \"while\", \"zapateller\"];\n\n    function basicToken(stream, state) {\n      var cur = '';\n      var ch = stream.next(); // comment\n\n      if (state.blockComment) {\n        if (ch == \"-\" && stream.match(\"-;\", true)) {\n          state.blockComment = false;\n        } else if (stream.skipTo(\"--;\")) {\n          stream.next();\n          stream.next();\n          stream.next();\n          state.blockComment = false;\n        } else {\n          stream.skipToEnd();\n        }\n\n        return \"comment\";\n      }\n\n      if (ch == \";\") {\n        if (stream.match(\"--\", true)) {\n          if (!stream.match(\"-\", false)) {\n            // Except ;--- is not a block comment\n            state.blockComment = true;\n            return \"comment\";\n          }\n        }\n\n        stream.skipToEnd();\n        return \"comment\";\n      } // context\n\n\n      if (ch == '[') {\n        stream.skipTo(']');\n        stream.eat(']');\n        return \"header\";\n      } // string\n\n\n      if (ch == '\"') {\n        stream.skipTo('\"');\n        return \"string\";\n      }\n\n      if (ch == \"'\") {\n        stream.skipTo(\"'\");\n        return \"string-2\";\n      } // dialplan commands\n\n\n      if (ch == '#') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current();\n\n        if (dpcmd.indexOf(cur) !== -1) {\n          stream.skipToEnd();\n          return \"strong\";\n        }\n      } // application args\n\n\n      if (ch == '$') {\n        var ch1 = stream.peek();\n\n        if (ch1 == '{') {\n          stream.skipTo('}');\n          stream.eat('}');\n          return \"variable-3\";\n        }\n      } // extension\n\n\n      stream.eatWhile(/\\w/);\n      cur = stream.current();\n\n      if (atoms.indexOf(cur) !== -1) {\n        state.extenStart = true;\n\n        switch (cur) {\n          case 'same':\n            state.extenSame = true;\n            break;\n\n          case 'include':\n          case 'switch':\n          case 'ignorepat':\n            state.extenInclude = true;\n            break;\n\n          default:\n            break;\n        }\n\n        return \"atom\";\n      }\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          blockComment: false,\n          extenStart: false,\n          extenSame: false,\n          extenInclude: false,\n          extenExten: false,\n          extenPriority: false,\n          extenApplication: false\n        };\n      },\n      token: function token(stream, state) {\n        var cur = '';\n        if (stream.eatSpace()) return null; // extension started\n\n        if (state.extenStart) {\n          stream.eatWhile(/[^\\s]/);\n          cur = stream.current();\n\n          if (/^=>?$/.test(cur)) {\n            state.extenExten = true;\n            state.extenStart = false;\n            return \"strong\";\n          } else {\n            state.extenStart = false;\n            stream.skipToEnd();\n            return \"error\";\n          }\n        } else if (state.extenExten) {\n          // set exten and priority\n          state.extenExten = false;\n          state.extenPriority = true;\n          stream.eatWhile(/[^,]/);\n\n          if (state.extenInclude) {\n            stream.skipToEnd();\n            state.extenPriority = false;\n            state.extenInclude = false;\n          }\n\n          if (state.extenSame) {\n            state.extenPriority = false;\n            state.extenSame = false;\n            state.extenApplication = true;\n          }\n\n          return \"tag\";\n        } else if (state.extenPriority) {\n          state.extenPriority = false;\n          state.extenApplication = true;\n          stream.next(); // get comma\n\n          if (state.extenSame) return null;\n          stream.eatWhile(/[^,]/);\n          return \"number\";\n        } else if (state.extenApplication) {\n          stream.eatWhile(/,/);\n          cur = stream.current();\n          if (cur === ',') return null;\n          stream.eatWhile(/\\w/);\n          cur = stream.current().toLowerCase();\n          state.extenApplication = false;\n\n          if (apps.indexOf(cur) !== -1) {\n            return \"def strong\";\n          }\n        } else {\n          return basicToken(stream, state);\n        }\n\n        return null;\n      },\n      blockCommentStart: \";--\",\n      blockCommentEnd: \"--;\",\n      lineComment: \";\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-asterisk\", \"asterisk\");\n});"],"sourceRoot":""}
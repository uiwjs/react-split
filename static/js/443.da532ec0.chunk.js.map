{"version":3,"sources":["../node_modules/codemirror/mode/rust/rust.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","string","string_raw","string_raw_hash","comment","meta","dontIndentStates","electricInput","blockCommentStart","blockCommentEnd","lineComment","fold","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/443.da532ec0.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"rust\", {\n    start: [// string and byte string\n    {\n      regex: /b?\"/,\n      token: \"string\",\n      next: \"string\"\n    }, // raw string and raw byte string\n    {\n      regex: /b?r\"/,\n      token: \"string\",\n      next: \"string_raw\"\n    }, {\n      regex: /b?r#+\"/,\n      token: \"string\",\n      next: \"string_raw_hash\"\n    }, // character\n    {\n      regex: /'(?:[^'\\\\]|\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\}))'/,\n      token: \"string-2\"\n    }, // byte\n    {\n      regex: /b'(?:[^']|\\\\(?:['\\\\nrt0]|x[\\da-fA-F]{2}))'/,\n      token: \"string-2\"\n    }, {\n      regex: /(?:(?:[0-9][0-9_]*)(?:(?:[Ee][+-]?[0-9_]+)|\\.[0-9_]+(?:[Ee][+-]?[0-9_]+)?)(?:f32|f64)?)|(?:0(?:b[01_]+|(?:o[0-7_]+)|(?:x[0-9a-fA-F_]+))|(?:[0-9][0-9_]*))(?:u8|u16|u32|u64|i8|i16|i32|i64|isize|usize)?/,\n      token: \"number\"\n    }, {\n      regex: /(let(?:\\s+mut)?|fn|enum|mod|struct|type)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/,\n      token: [\"keyword\", null, \"def\"]\n    }, {\n      regex: /(?:abstract|alignof|as|box|break|continue|const|crate|do|else|enum|extern|fn|for|final|if|impl|in|loop|macro|match|mod|move|offsetof|override|priv|proc|pub|pure|ref|return|self|sizeof|static|struct|super|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n      token: \"keyword\"\n    }, {\n      regex: /\\b(?:Self|isize|usize|char|bool|u8|u16|u32|u64|f16|f32|f64|i8|i16|i32|i64|str|Option)\\b/,\n      token: \"atom\"\n    }, {\n      regex: /\\b(?:true|false|Some|None|Ok|Err)\\b/,\n      token: \"builtin\"\n    }, {\n      regex: /\\b(fn)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)/,\n      token: [\"keyword\", null, \"def\"]\n    }, {\n      regex: /#!?\\[.*\\]/,\n      token: \"meta\"\n    }, {\n      regex: /\\/\\/.*/,\n      token: \"comment\"\n    }, {\n      regex: /\\/\\*/,\n      token: \"comment\",\n      next: \"comment\"\n    }, {\n      regex: /[-+\\/*=<>!]+/,\n      token: \"operator\"\n    }, {\n      regex: /[a-zA-Z_]\\w*!/,\n      token: \"variable-3\"\n    }, {\n      regex: /[a-zA-Z_]\\w*/,\n      token: \"variable\"\n    }, {\n      regex: /[\\{\\[\\(]/,\n      indent: true\n    }, {\n      regex: /[\\}\\]\\)]/,\n      dedent: true\n    }],\n    string: [{\n      regex: /\"/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /(?:[^\\\\\"]|\\\\(?:.|$))*/,\n      token: \"string\"\n    }],\n    string_raw: [{\n      regex: /\"/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /[^\"]*/,\n      token: \"string\"\n    }],\n    string_raw_hash: [{\n      regex: /\"#+/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /(?:[^\"]|\"(?!#))*/,\n      token: \"string\"\n    }],\n    comment: [{\n      regex: /.*?\\*\\//,\n      token: \"comment\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"comment\"\n    }],\n    meta: {\n      dontIndentStates: [\"comment\"],\n      electricInput: /^\\s*\\}$/,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n      fold: \"brace\"\n    }\n  });\n  CodeMirror.defineMIME(\"text/x-rustsrc\", \"rust\");\n  CodeMirror.defineMIME(\"text/rust\", \"rust\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) {\n      if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [],\n            orig = states[state];\n\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n    }\n\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) {\n          s.persistentStates = {\n            mode: pers.mode,\n            spec: pers.spec,\n            state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n            next: s.persistentStates\n          };\n        }\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) {\n      if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    }\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) {\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    }\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) {\n              if (matches[j]) state.pending.push({\n                text: matches[j],\n                token: rule.token[j - 1]\n              });\n            }\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) {\n      if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n    }\n\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) props--;\n    }\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) {\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    }\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === val) return true;\n    }\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}
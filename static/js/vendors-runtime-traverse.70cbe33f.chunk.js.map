{"version":3,"sources":["../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../node_modules/@babel/traverse/lib/scope/index.js","../node_modules/@babel/traverse/lib/scope/binding.js","../node_modules/@babel/traverse/lib/index.js","../node_modules/@babel/traverse/lib/path/index.js","../node_modules/@babel/traverse/lib/cache.js","../node_modules/@babel/traverse/lib/context.js","../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../node_modules/@babel/traverse/node_modules/debug/src/common.js","../node_modules/@babel/traverse/node_modules/ms/index.js","../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../node_modules/@babel/traverse/lib/path/ancestry.js","../node_modules/@babel/traverse/lib/path/inference/index.js","../node_modules/@babel/traverse/lib/path/inference/inferers.js","../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../node_modules/@babel/traverse/lib/path/replacement.js","../node_modules/@babel/traverse/lib/path/evaluation.js","../node_modules/@babel/traverse/lib/path/conversion.js","../node_modules/@babel/traverse/lib/path/introspection.js","../node_modules/@babel/traverse/lib/path/context.js","../node_modules/@babel/traverse/lib/path/removal.js","../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../node_modules/@babel/traverse/lib/path/modification.js","../node_modules/@babel/traverse/lib/path/lib/hoister.js","../node_modules/@babel/traverse/lib/path/family.js","../node_modules/@babel/traverse/lib/path/comments.js","../node_modules/@babel/traverse/lib/visitors.js","../node_modules/@babel/traverse/lib/hub.js"],"names":["Object","defineProperty","exports","value","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","t","require","types","checkPath","path","opts","node","parent","isIdentifier","isJSXMemberExpression","isJSXIdentifier","react","isCompatTag","name","isReferenced","parentPath","isMemberExpression","grandparent","isBinding","isStatement","isVariableDeclaration","isForXStatement","left","isForStatement","init","isReferencedIdentifier","isExpression","isScope","isBlockScoped","isVar","loc","isUser","scope","isPure","isFlow","isImportDeclaration","importKind","isExportDeclaration","exportKind","isImportSpecifier","isObjectPattern","isObjectExpression","await","default","_renamer","_index","_binding","_globals","_cache","gatherNodeParts","parts","type","isModuleDeclaration","isExportAllDeclaration","isExportNamedDeclaration","source","specifiers","length","isExportDefaultDeclaration","declaration","isModuleSpecifier","local","isLiteral","push","object","property","callee","properties","argument","key","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","For","FOR_INIT_KEYS","declar","get","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","state","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","isClassDeclaration","isFunctionDeclaration","binding","getBinding","reference","declarations","decl","keys","getBindingIdentifiers","LabeledStatement","getBlockParent","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","isFunctionExpression","has","NOT_LOCAL_BINDING","params","param","ClassExpression","uid","this","block","labels","inited","globals","uids","data","crawling","cached","set","Map","_parent","isKey","isMethod","hub","generateUidIdentifier","cloneNode","identifier","generateUid","toIdentifier","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","join","slice","generateUidBasedOnNode","isThisExpression","isSuper","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","buildError","TypeError","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","isArrayExpression","callExpression","memberExpression","helperName","args","numericLiteral","unshift","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","unaryExpression","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","isClass","superClass","body","isClassBody","method","isBinary","right","elements","elem","prop","computed","isProperty","isUnaryExpression","isTaggedTemplateExpression","matchesPattern","tag","quasi","isTemplateLiteral","expressions","isPureish","val","crawl","create","programParent","_exploded","enter","visit","typeVisitors","traverse","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","variableDeclaration","unshiftContainer","setData","declarator","variableDeclarator","pop","Error","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","includes","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","indexOf","enumerable","_path","_scope","_hub","visitors","_context","cache","noScope","VISITOR_KEYS","explode","_default","hasDenylistedType","stop","verify","cheap","traverseFast","skipKeys","context","clearNode","removeProperties","delete","tree","hasType","denylistTypes","denylist","SHOULD_SKIP","SHOULD_STOP","REMOVED","virtualTypes","_debug","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","debug","NodePath","contexts","_traverseFlags","container","listKey","def","undefined","msg","SyntaxError","visitor","validate","inList","message","enabled","getPathLocation","code","v","targetNode","paths","setup","assign","prototype","TYPES","typeKey","fn","virtualType","clear","clearPath","clearScope","WeakMap","TraversalContext","queue","priorityQueue","obj","notPriority","shouldVisit","visitQueue","visited","WeakSet","resync","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","useColors","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","formatters","j","JSON","stringify","env","createDebug","prevTime","enableOverride","self","curr","Number","Date","ms","prev","coerce","format","formatter","call","logFn","apply","selectColor","extend","configurable","delimiter","newDebug","toNamespace","regexp","toString","substring","stack","disable","names","skips","enable","split","len","substr","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","p","getStatementParent","isFile","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","type2","baseTypeStrictlyMatches","rightArg","isFlowBaseAnnotation","genericName","isGenericTypeAnnotation","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","TemplateLiteral","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","ParenthesizedExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","concat","violation","getTypeAnnotationBindingConstantViolations","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","typeValue","createTypeAnnotationBasedOnTypeof","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","_codeFrame","codeFrameColumns","start","line","column","replaceWith","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","assignmentExpression","arrowFunctionToExpression","newCallee","needToAwaitFunction","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","func","global","_evaluate","raw","cooked","expr","toComputedKey","stringLiteral","bodyNode","statements","stringPath","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","objectExpression","thisExpression","_helperFunctionName","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","assignmentPath","op","tmp","binaryExpression","isUpdateExpression","updateExpr","computedKey","sequenceExpression","isClassMethod","supers","argsBinding","restElement","super","spreadElement","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","MetaProperty","pattern","allowPartial","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","dangerous","_resolve","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isExecutionUncertain","maxIndex","_call","fns","then","isBlacklisted","isDenylisted","_this$opts$denylist","blacklist","shouldSkip","shouldStop","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","updateSiblingKeys","isWhile","isSwitchCase","insertBefore","nodes_","isJSXElement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","assertExpression","temp","fromIndex","incrementBy","verifiedNodes","hoist","hoister","_hoister","run","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","jsxExpressionContainer","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","getBindingIdentifierPaths","outerOnly","search","shift","_ids","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","statementCompletions","some","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","comments","merge","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","FLIPPED_ALIAS_KEYS","deprecatedKey","DEPRECATED_KEYS","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","arguments","dest","src","Hub"],"mappings":"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","file":"static/js/vendors-runtime-traverse.70cbe33f.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (t.isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar t = require(\"@babel/types\");\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = t.VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar t = require(\"@babel/types\");\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = require(\"@babel/types\");\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", t.FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(t.awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(t.yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? t.isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        t.assertExpression(node);\n        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) return records.concat(_getCompletionRecords(path, context));\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records = records.concat(breakCompletions);\n  }\n\n  records = records.concat(lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(t.unaryExpression(\"void\", t.numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  let completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n          newContext.shouldPopulateBreak = true;\n        } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions = completions.concat(lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions = completions.concat(statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions = completions.concat(statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions = completions.concat(statementCompletions);\n      } else {\n        completions = completions.concat(statementCompletions.filter(c => c.type === BREAK_COMPLETION));\n        lastNormalCompletions = statementCompletions.filter(c => c.type === NORMAL_COMPLETION);\n      }\n    }\n  } else if (paths.length) {\n    completions = completions.concat(_getCompletionRecords(paths[paths.length - 1], context));\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    records = records.concat(getStatementListCompletion(path.get(\"body\"), context));\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    records = completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    records = records.concat(getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    }));\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = require(\"@babel/types\");\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar t = require(\"@babel/types\");\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;"],"sourceRoot":""}
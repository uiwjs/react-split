{"version":3,"sources":["../node_modules/prismjs/components/prism-fortran.min.js"],"names":["Prism","languages","fortran","pattern","alias","string","inside","comment","lookbehind","greedy","boolean","number","keyword","operator","punctuation"],"mappings":"+GAAAA,MAAMC,UAAUC,QAAU,CACxB,gBAAiB,CACfC,QAAS,0BACTC,MAAO,UAETC,OAAQ,CACNF,QAAS,gFACTG,OAAQ,CACNC,QAAS,CACPJ,QAAS,wBACTK,YAAY,KAIlBD,QAAS,CACPJ,QAAS,MACTM,QAAQ,GAEVC,QAAS,+BACTC,OAAQ,yDACRC,QAAS,CAAC,oEAAqE,gIAAiI,4VAA6V,+JAC7iBC,SAAU,CAAC,mGAAoG,CAC7GV,QAAS,sBACTK,YAAY,IAEdM,YAAa","file":"static/js/123.2a9aa28d.chunk.js","sourcesContent":["Prism.languages.fortran = {\n  \"quoted-number\": {\n    pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n    alias: \"number\"\n  },\n  string: {\n    pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n    inside: {\n      comment: {\n        pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n        lookbehind: !0\n      }\n    }\n  },\n  comment: {\n    pattern: /!.*/,\n    greedy: !0\n  },\n  boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n  keyword: [/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n  operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n    pattern: /(^|(?!\\().)\\/(?!\\))/,\n    lookbehind: !0\n  }],\n  punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n};"],"sourceRoot":""}
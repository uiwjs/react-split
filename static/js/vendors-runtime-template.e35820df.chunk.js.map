{"version":3,"sources":["../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js"],"names":["Object","defineProperty","exports","value","program","expression","statement","statements","smart","t","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","makeStatementFormatter","fn","code","str","validate","unwrap","ast","body","slice","length","Error","start","stmt","assertExpressionStatement","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","assign","tpl","args","extendedTrace","_string","merge","Array","isArray","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","placeholderPattern","rootStack","error","stack","split","join","arg","err","opts","metadata","replacements","normalizeReplacements","_parse","_populate","shouldHighlight","getChalk","options","chalk","defs","getDefs","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","keyword","cyan","capitalized","yellow","jsx_tag","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","NEWLINE","JSX_TAG","BRACKET","getTokenType","match","offset","text","token","matchToToken","type","isKeyword","isReservedWord","test","substr","toLowerCase","replace","colorize","map","supportsColor","forceColor","constructor","enabled","level","names","nameSet","prefix","result","buildTemplateCode","Set","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","defaultReplacements","forEach","replacement","i","keys","push","path","file","builtinClasses","isLoose","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","a","b","_ref","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","RegExp","reduce","acc","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","loc","message","_codeFrame","codeFrameColumns","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","state","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","expectedNode","isNewExpression","isFunction","isStatement","resolve","index","resolveAncestors","placeholderName","reverse","stringLiteral","emptyStatement","items","splice","applyReplacement","e","formatters","_builder","_default","bind","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","filter","declare","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","CommentsParser","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","exec","getLineInfo","errorTemplate","raiseWithData","data","getLocationForPosition","_","_raise","errorContext","SyntaxError","errorRecovery","isLookahead","errors","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","estreeParseLiteral","bigInt","BigInt","parseLiteral","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","startLine","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","n","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ExpressionErrors","Node","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset"],"mappings":"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","file":"static/js/vendors-runtime-template.e35820df.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}"],"sourceRoot":""}
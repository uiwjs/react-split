{"version":3,"sources":["../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","beforeExpr","startsExpr","isLoop","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","length","CommentsParser","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","override","types","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","id","FlowScope","args","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","Array","isArray","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","key","optional","callee","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isAmbientContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","inAbstractClass","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","curr","cp","trail","clear","skipSpace","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","join","fn","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","opts","getOptions","initializeScopes","pluginMap","pluginsMap","enterInitialScopes","parseTopLevel","parseProgram","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","elem","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","obj","__esModule","cache","_getRequireWildcardCache","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","desc","_interopRequireWildcard","require","WeakMap","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","path","builtinClasses","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","constructor","blockStatement","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","constantSuper","refToPreserve","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","superIsCallableConstructor","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","isLiteral","func","toComputedKey","isStringLiteral","_helperFunctionName","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","toExpression","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","statements","smart","formatters","_builder","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,GAAI,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,MAC3wDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,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","file":"static/js/vendors-runtime-template.7f7ef5b4.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types$1.num:\n      case types$1.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types$1.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types$1._null:\n        return this.estreeParseLiteral(null);\n\n      case types$1._true:\n        return this.estreeParseLiteral(true);\n\n      case types$1._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentLoc = this.state.start;\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdent.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral();\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types$1.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types$1._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types$1._true:\n      case types$1._false:\n        return this.parseBooleanLiteral();\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types$1._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}
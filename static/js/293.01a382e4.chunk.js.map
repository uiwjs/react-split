{"version":3,"sources":["../node_modules/prismjs/components/prism-powerquery.js"],"names":["Prism","languages","powerquery","pattern","lookbehind","greedy","alias","pq","mscript"],"mappings":"+GACAA,MAAMC,UAAUC,WAAa,CAC3B,QAAW,CACTC,QAAS,2CACTC,YAAY,GAEd,oBAAqB,CACnBD,QAAS,2BACTE,QAAQ,EACRC,MAAO,YAET,OAAU,CACRH,QAAS,0BACTE,QAAQ,GAEV,SAAY,CAAC,wEAAyE,iEAAkE,qCAAsC,sCAAuC,+DAAgE,6CAA8C,+BAAgC,4EAA6E,kCAAmC,yCAA0C,gGAAiG,+BAAgC,oCAAqC,0CAA2C,0EAA2E,+IAAgJ,YACz7B,QAAW,qBACX,QAAW,6MACX,SAAY,CACVF,QAAS,mCACTC,YAAY,GAEd,YAAa,CACXD,QAAS,kIACTG,MAAO,YAET,OAAU,CACRH,QAAS,uFACTC,YAAY,GAEd,SAAY,0CACZ,YAAe,gBAEjBJ,MAAMC,UAAUM,GAAKP,MAAMC,UAAsB,WACjDD,MAAMC,UAAUO,QAAUR,MAAMC,UAAsB","file":"static/js/293.01a382e4.chunk.js","sourcesContent":["// https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\nPrism.languages.powerquery = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/).*)/,\n    lookbehind: true\n  },\n  'quoted-identifier': {\n    pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n    greedy: true,\n    alias: 'variable'\n  },\n  'string': {\n    pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n    greedy: true\n  },\n  'constant': [/\\bDay\\.(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)\\b/, /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/, /\\bOccurrence\\.(?:First|Last|All)\\b/, /\\bOrder\\.(?:Ascending|Descending)\\b/, /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/, /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/, /\\bQuoteStyle\\.(?:Csv|None)\\b/, /\\bJoinKind\\.(?:Inner|LeftOuter|RightOuter|FullOuter|LeftAnti|RightAnti)\\b/, /\\bGroupKind\\.(?:Global|Local)\\b/, /\\bExtraValues\\.(?:List|Ignore|Error)\\b/, /\\bJoinAlgorithm\\.(?:Dynamic|PairwiseHash|SortMerge|LeftHash|RightHash|LeftIndex|RightIndex)\\b/, /\\bJoinSide\\.(?:Left|Right)\\b/, /\\bPrecision\\.(?:Double|Decimal)\\b/, /\\bRelativePosition\\.From(?:End|Start)\\b/, /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf8|Utf16|Windows)\\b/, /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Int8|Int16|Int32|Int64|Function|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/, /\\bnull\\b/],\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n  'function': {\n    pattern: /(^|[^#\\w.])(?!\\d)[\\w.]+(?=\\s*\\()/,\n    lookbehind: true\n  },\n  'data-type': {\n    pattern: /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time|type)\\b/,\n    alias: 'variable'\n  },\n  'number': {\n    pattern: /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    lookbehind: true\n  },\n  'operator': /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n  'punctuation': /[,;\\[\\](){}]/\n};\nPrism.languages.pq = Prism.languages['powerquery'];\nPrism.languages.mscript = Prism.languages['powerquery'];"],"sourceRoot":""}
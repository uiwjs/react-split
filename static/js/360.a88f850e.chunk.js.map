{"version":3,"sources":["../node_modules/prismjs/components/prism-soy.min.js"],"names":["t","e","a","languages","soy","comment","pattern","lookbehind","greedy","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","buildPlaceholders","tokenizePlaceholders","Prism"],"mappings":"gHAAC,SAAUA,GACT,IAAIC,EAAI,iDACJC,EAAI,oDACRF,EAAEG,UAAUC,IAAM,CAChBC,QAAS,CAAC,mBAAoB,CAC5BC,QAAS,aACTC,YAAY,EACZC,QAAQ,IAEV,cAAe,CACbF,QAAS,yFACTC,YAAY,EACZE,MAAO,SACPC,OAAQ,CACNC,YAAa,OAGjBC,UAAW,CACTN,QAAS,mCACTC,YAAY,EACZE,MAAO,YAETI,QAAS,CAAC,CACRP,QAAS,kNACTC,YAAY,GACX,2FACHO,UAAW,CACTR,QAAS,gBACTG,MAAO,eAETM,SAAU,WACVC,SAAU,CACRV,QAAS,0CACTI,OAAQ,CACNO,OAAQ,CACNX,QAASL,EACTO,QAAQ,GAEVU,OAAQhB,EACRS,YAAa,aAGjBM,OAAQ,CACNX,QAASL,EACTO,QAAQ,GAEVW,SAAU,CAAC,YAAa,CACtBb,QAAS,oBACTC,YAAY,IAEda,QAAS,qBACTF,OAAQhB,EACRmB,SAAU,iDACVV,YAAa,kBACZX,EAAEsB,MAAMC,IAAI,mBAAmB,SAAUtB,GAC1C,IAAIC,GAAI,EACRF,EAAEG,UAAU,qBAAqBqB,kBAAkBvB,EAAG,MAAO,4CAA4C,SAAUA,GACjH,MAAO,eAAiBA,IAAMC,GAAI,IAAMA,IAAM,cAAgBD,IAAMC,GAAI,IAAK,SAE7EF,EAAEsB,MAAMC,IAAI,kBAAkB,SAAUtB,GAC1CD,EAAEG,UAAU,qBAAqBsB,qBAAqBxB,EAAG,UA5D5D,CA8DCyB","file":"static/js/360.a88f850e.chunk.js","sourcesContent":["!function (t) {\n  var e = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      a = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n  t.languages.soy = {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(\\s)\\/\\/.*/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    \"command-arg\": {\n      pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    parameter: {\n      pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"variable\"\n    },\n    keyword: [{\n      pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n      lookbehind: !0\n    }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n    delimiter: {\n      pattern: /^{+\\/?|\\/?}+$/,\n      alias: \"punctuation\"\n    },\n    property: /\\w+(?==)/,\n    variable: {\n      pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n      inside: {\n        string: {\n          pattern: e,\n          greedy: !0\n        },\n        number: a,\n        punctuation: /[\\[\\].?]/\n      }\n    },\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    function: [/\\w+(?=\\()/, {\n      pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n      lookbehind: !0\n    }],\n    boolean: /\\b(?:true|false)\\b/,\n    number: a,\n    operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n    punctuation: /[{}()\\[\\]|.,:]/\n  }, t.hooks.add(\"before-tokenize\", function (e) {\n    var a = !1;\n    t.languages[\"markup-templating\"].buildPlaceholders(e, \"soy\", /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g, function (e) {\n      return \"{/literal}\" === e && (a = !1), !a && (\"{literal}\" === e && (a = !0), !0);\n    });\n  }), t.hooks.add(\"after-tokenize\", function (e) {\n    t.languages[\"markup-templating\"].tokenizePlaceholders(e, \"soy\");\n  });\n}(Prism);"],"sourceRoot":""}
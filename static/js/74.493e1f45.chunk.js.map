{"version":3,"sources":["../node_modules/codemirror/mode/ntriples/ntriples.js"],"names":["CodeMirror","defineMode","Location","transitState","currState","c","ret","currLocation","location","startState","uris","anchors","bnodes","langs","types","token","stream","state","ch","next","parsedURI","eatWhile","push","match","parsedAnchor","parsedBNode","peek","parsedLang","parsedType","defineMIME","mod"],"mappings":"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","file":"static/js/74.493e1f45.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**********************************************************\n* This script provides syntax highlighting support for\n* the N-Triples format.\n* N-Triples format specification:\n*     https://www.w3.org/TR/n-triples/\n***********************************************************/\n\n/*\n    The following expression defines the defined ASF grammar transitions.\n\n    pre_subject ->\n        {\n        ( writing_subject_uri | writing_bnode_uri )\n            -> pre_predicate\n                -> writing_predicate_uri\n                    -> pre_object\n                        -> writing_object_uri | writing_object_bnode |\n                          (\n                            writing_object_literal\n                                -> writing_literal_lang | writing_literal_type\n                          )\n                            -> post_object\n                                -> BEGIN\n         } otherwise {\n             -> ERROR\n         }\n*/\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ntriples\", function () {\n    var Location = {\n      PRE_SUBJECT: 0,\n      WRITING_SUB_URI: 1,\n      WRITING_BNODE_URI: 2,\n      PRE_PRED: 3,\n      WRITING_PRED_URI: 4,\n      PRE_OBJ: 5,\n      WRITING_OBJ_URI: 6,\n      WRITING_OBJ_BNODE: 7,\n      WRITING_OBJ_LITERAL: 8,\n      WRITING_LIT_LANG: 9,\n      WRITING_LIT_TYPE: 10,\n      POST_OBJ: 11,\n      ERROR: 12\n    };\n\n    function transitState(currState, c) {\n      var currLocation = currState.location;\n      var ret; // Opening.\n\n      if (currLocation == Location.PRE_SUBJECT && c == '<') ret = Location.WRITING_SUB_URI;else if (currLocation == Location.PRE_SUBJECT && c == '_') ret = Location.WRITING_BNODE_URI;else if (currLocation == Location.PRE_PRED && c == '<') ret = Location.WRITING_PRED_URI;else if (currLocation == Location.PRE_OBJ && c == '<') ret = Location.WRITING_OBJ_URI;else if (currLocation == Location.PRE_OBJ && c == '_') ret = Location.WRITING_OBJ_BNODE;else if (currLocation == Location.PRE_OBJ && c == '\"') ret = Location.WRITING_OBJ_LITERAL; // Closing.\n      else if (currLocation == Location.WRITING_SUB_URI && c == '>') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_BNODE_URI && c == ' ') ret = Location.PRE_PRED;else if (currLocation == Location.WRITING_PRED_URI && c == '>') ret = Location.PRE_OBJ;else if (currLocation == Location.WRITING_OBJ_URI && c == '>') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_BNODE && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '\"') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_LANG && c == ' ') ret = Location.POST_OBJ;else if (currLocation == Location.WRITING_LIT_TYPE && c == '>') ret = Location.POST_OBJ; // Closing typed and language literal.\n        else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '@') ret = Location.WRITING_LIT_LANG;else if (currLocation == Location.WRITING_OBJ_LITERAL && c == '^') ret = Location.WRITING_LIT_TYPE; // Spaces.\n          else if (c == ' ' && (currLocation == Location.PRE_SUBJECT || currLocation == Location.PRE_PRED || currLocation == Location.PRE_OBJ || currLocation == Location.POST_OBJ)) ret = currLocation; // Reset.\n            else if (currLocation == Location.POST_OBJ && c == '.') ret = Location.PRE_SUBJECT; // Error\n              else ret = Location.ERROR;\n      currState.location = ret;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          location: Location.PRE_SUBJECT,\n          uris: [],\n          anchors: [],\n          bnodes: [],\n          langs: [],\n          types: []\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.next();\n\n        if (ch == '<') {\n          transitState(state, ch);\n          var parsedURI = '';\n          stream.eatWhile(function (c) {\n            if (c != '#' && c != '>') {\n              parsedURI += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.uris.push(parsedURI);\n          if (stream.match('#', false)) return 'variable';\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '#') {\n          var parsedAnchor = '';\n          stream.eatWhile(function (c) {\n            if (c != '>' && c != ' ') {\n              parsedAnchor += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.anchors.push(parsedAnchor);\n          return 'variable-2';\n        }\n\n        if (ch == '>') {\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == '_') {\n          transitState(state, ch);\n          var parsedBNode = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedBNode += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.bnodes.push(parsedBNode);\n          stream.next();\n          transitState(state, ' ');\n          return 'builtin';\n        }\n\n        if (ch == '\"') {\n          transitState(state, ch);\n          stream.eatWhile(function (c) {\n            return c != '\"';\n          });\n          stream.next();\n\n          if (stream.peek() != '@' && stream.peek() != '^') {\n            transitState(state, '\"');\n          }\n\n          return 'string';\n        }\n\n        if (ch == '@') {\n          transitState(state, '@');\n          var parsedLang = '';\n          stream.eatWhile(function (c) {\n            if (c != ' ') {\n              parsedLang += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.langs.push(parsedLang);\n          stream.next();\n          transitState(state, ' ');\n          return 'string-2';\n        }\n\n        if (ch == '^') {\n          stream.next();\n          transitState(state, '^');\n          var parsedType = '';\n          stream.eatWhile(function (c) {\n            if (c != '>') {\n              parsedType += c;\n              return true;\n            }\n\n            return false;\n          });\n          state.types.push(parsedType);\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n        }\n\n        if (ch == ' ') {\n          transitState(state, ch);\n        }\n\n        if (ch == '.') {\n          transitState(state, ch);\n        }\n      }\n    };\n  }); // define the registered Media Type for n-triples:\n  // https://www.w3.org/TR/n-triples/#n-triples-mediatype\n\n  CodeMirror.defineMIME(\"application/n-triples\", \"ntriples\"); // N-Quads is based on the N-Triples format (so same highlighting works)\n  // https://www.w3.org/TR/n-quads/\n\n  CodeMirror.defineMIME(\"application/n-quads\", \"ntriples\"); // previously used, though technically incorrect media type for n-triples\n\n  CodeMirror.defineMIME(\"text/n-triples\", \"ntriples\");\n});"],"sourceRoot":""}
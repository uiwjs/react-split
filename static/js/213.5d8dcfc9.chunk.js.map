{"version":3,"sources":["../node_modules/prismjs/components/prism-latte.min.js"],"names":["t","languages","latte","comment","ld","pattern","inside","punctuation","tag","alias","rd","php","e","extend","insertBefore","lookbehind","hooks","add","a","language","buildPlaceholders","grammar","tokenizePlaceholders","Prism"],"mappings":"gHAAC,SAAUA,GACTA,EAAEC,UAAUC,MAAQ,CAClBC,QAAS,eACTC,GAAI,CACFC,QAAS,kCACTC,OAAQ,CACNC,YAAa,SACbC,IAAK,CACHH,QAAS,KACTI,MAAO,eAIbC,GAAI,CACFL,QAAS,MACTC,OAAQ,CACNC,YAAa,OAGjBI,IAAK,CACHN,QAAS,mBACTI,MAAO,eACPH,OAAQN,EAAEC,UAAUU,MAGxB,IAAIC,EAAIZ,EAAEC,UAAUY,OAAO,SAAU,IACrCb,EAAEC,UAAUa,aAAa,SAAU,aAAc,CAC/C,SAAU,CACRT,QAAS,qDACTC,OAAQ,CACN,YAAa,CACXD,QAAS,WACTI,MAAO,aAET,aAAc,CACZJ,QAAS,WACTC,OAAQ,CACNC,YAAa,CAAC,KAAM,CAClBF,QAAS,mBACTU,YAAY,IAEdJ,IAAK,CACHN,QAAS,mBACTC,OAAQN,EAAEC,UAAUU,UAM7BC,EAAEJ,KAAMR,EAAEgB,MAAMC,IAAI,mBAAmB,SAAUC,GAC9C,UAAYA,EAAEC,WAChBnB,EAAEC,UAAU,qBAAqBmB,kBAAkBF,EAAG,QAAS,+GAAgHA,EAAEG,QAAUT,MAE3LZ,EAAEgB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1ClB,EAAEC,UAAU,qBAAqBqB,qBAAqBJ,EAAG,YAtD5D,CAwDCK","file":"static/js/213.5d8dcfc9.chunk.js","sourcesContent":["!function (t) {\n  t.languages.latte = {\n    comment: /^\\{\\*[\\s\\S]*/,\n    ld: {\n      pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+|)/,\n      inside: {\n        punctuation: /^\\{\\/?/,\n        tag: {\n          pattern: /.+/,\n          alias: \"important\"\n        }\n      }\n    },\n    rd: {\n      pattern: /\\}$/,\n      inside: {\n        punctuation: /.+/\n      }\n    },\n    php: {\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      alias: \"language-php\",\n      inside: t.languages.php\n    }\n  };\n  var e = t.languages.extend(\"markup\", {});\n  t.languages.insertBefore(\"inside\", \"attr-value\", {\n    \"n-attr\": {\n      pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n      inside: {\n        \"attr-name\": {\n          pattern: /^[^\\s=]+/,\n          alias: \"important\"\n        },\n        \"attr-value\": {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            punctuation: [/^=/, {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: !0\n            }],\n            php: {\n              pattern: /\\S(?:[\\s\\S]*\\S)?/,\n              inside: t.languages.php\n            }\n          }\n        }\n      }\n    }\n  }, e.tag), t.hooks.add(\"before-tokenize\", function (a) {\n    if (\"latte\" === a.language) {\n      t.languages[\"markup-templating\"].buildPlaceholders(a, \"latte\", /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*[\\s\\S]*?\\*\\/)*?\\}/g), a.grammar = e;\n    }\n  }), t.hooks.add(\"after-tokenize\", function (a) {\n    t.languages[\"markup-templating\"].tokenizePlaceholders(a, \"latte\");\n  });\n}(Prism);"],"sourceRoot":""}
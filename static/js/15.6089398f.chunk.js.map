{"version":3,"sources":["../node_modules/prismjs/components/prism-antlr4.min.js"],"names":["Prism","languages","antlr4","comment","string","pattern","greedy","alias","inside","range","lookbehind","escape","punctuation","action","content","command","function","annotation","label","keyword","definition","constant","operator","g4"],"mappings":"8GAAAA,MAAMC,UAAUC,OAAS,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,wBACTC,QAAQ,GAEV,kBAAmB,CACjBD,QAAS,2BACTC,QAAQ,EACRC,MAAO,QACPC,OAAQ,CACNC,MAAO,CACLJ,QAAS,yCACTK,YAAY,EACZH,MAAO,eAETI,OAAQ,sEACRC,YAAa,WAGjBC,OAAQ,CACNR,QAAS,0DACTC,QAAQ,EACRE,OAAQ,CACNM,QAAS,CACPT,QAAS,oBACTK,YAAY,GAEdE,YAAa,SAGjBG,QAAS,CACPV,QAAS,kEACTK,YAAY,EACZF,OAAQ,CACNQ,SAAU,yBACVJ,YAAa,UAGjBK,WAAY,CACVZ,QAAS,iBACTE,MAAO,WAETW,MAAO,CACLb,QAAS,aACTE,MAAO,eAETY,QAAS,gHACTC,WAAY,CAAC,CACXf,QAAS,qBACTE,MAAO,CAAC,OAAQ,eACf,CACDF,QAAS,qBACTE,MAAO,CAAC,QAAS,cAEnBc,SAAU,mBACVC,SAAU,wBACVV,YAAa,WACZZ,MAAMC,UAAUsB,GAAKvB,MAAMC,UAAUC","file":"static/js/15.6089398f.chunk.js","sourcesContent":["Prism.languages.antlr4 = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  string: {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n    greedy: !0\n  },\n  \"character-class\": {\n    pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n    greedy: !0,\n    alias: \"regex\",\n    inside: {\n      range: {\n        pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n        lookbehind: !0,\n        alias: \"punctuation\"\n      },\n      escape: /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n      punctuation: /[\\[\\]]/\n    }\n  },\n  action: {\n    pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n    greedy: !0,\n    inside: {\n      content: {\n        pattern: /(\\{)[\\s\\S]+(?=\\})/,\n        lookbehind: !0\n      },\n      punctuation: /[{}]/\n    }\n  },\n  command: {\n    pattern: /(->\\s*)(?:\\s*(?:,\\s*)?[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n    lookbehind: !0,\n    inside: {\n      function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n      punctuation: /[,()]/\n    }\n  },\n  annotation: {\n    pattern: /@\\w+(?:::\\w+)*/,\n    alias: \"keyword\"\n  },\n  label: {\n    pattern: /#[ \\t]*\\w+/,\n    alias: \"punctuation\"\n  },\n  keyword: /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n  definition: [{\n    pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n    alias: [\"rule\", \"class-name\"]\n  }, {\n    pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n    alias: [\"token\", \"constant\"]\n  }],\n  constant: /\\b[A-Z][A-Z_]*\\b/,\n  operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n  punctuation: /[;:()=]/\n}, Prism.languages.g4 = Prism.languages.antlr4;"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/codemirror/mode/factor/factor.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","vocabulary","string","string2","string3","stack","meta","dontIndentStates","lineComment","defineMIME","mod","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/441.169592be.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Factor syntax highlight - simple mode\n//\n// by Dimage Sapelkin (https://github.com/kerabromsmu)\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"factor\", {\n    // The start state contains the rules that are intially used\n    start: [// comments\n    {\n      regex: /#?!.*/,\n      token: \"comment\"\n    }, // strings \"\"\", multiline --> state\n    {\n      regex: /\"\"\"/,\n      token: \"string\",\n      next: \"string3\"\n    }, {\n      regex: /(STRING:)(\\s)/,\n      token: [\"keyword\", null],\n      next: \"string2\"\n    }, {\n      regex: /\\S*?\"/,\n      token: \"string\",\n      next: \"string\"\n    }, // numbers: dec, hex, unicode, bin, fractional, complex\n    {\n      regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/,\n      token: \"number\"\n    }, //{regex: /[+-]?/} //fractional\n    // definition: defining word, defined word, etc\n    {\n      regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/,\n      token: [\"keyword\", null, \"def\", null, \"bracket\"],\n      next: \"stack\"\n    }, // method definition: defining word, type, defined word, etc\n    {\n      regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/,\n      token: [\"keyword\", null, \"def\", null, \"tag\"]\n    }, // vocabulary using --> state\n    {\n      regex: /USING\\:/,\n      token: \"keyword\",\n      next: \"vocabulary\"\n    }, // vocabulary definition/use\n    {\n      regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/,\n      token: [\"keyword\", null, \"tag\"]\n    }, // definition: a defining word, defined word\n    {\n      regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/,\n      token: [\"keyword\", null, \"def\"]\n    }, // \"keywords\", incl. ; t f . [ ] { } defining words\n    {\n      regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/,\n      token: \"keyword\"\n    }, // <constructors> and the like\n    {\n      regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/,\n      token: \"builtin\"\n    }, {\n      regex: /[\\)><]+\\S+(?=\\s|$)/,\n      token: \"builtin\"\n    }, // operators\n    {\n      regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/,\n      token: \"keyword\"\n    }, // any id (?)\n    {\n      regex: /\\S+/,\n      token: \"variable\"\n    }, {\n      regex: /\\s+|./,\n      token: null\n    }],\n    vocabulary: [{\n      regex: /;/,\n      token: \"keyword\",\n      next: \"start\"\n    }, {\n      regex: /\\S+/,\n      token: \"tag\"\n    }, {\n      regex: /\\s+|./,\n      token: null\n    }],\n    string: [{\n      regex: /(?:[^\\\\]|\\\\.)*?\"/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"string\"\n    }],\n    string2: [{\n      regex: /^;/,\n      token: \"keyword\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"string\"\n    }],\n    string3: [{\n      regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/,\n      token: \"string\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"string\"\n    }],\n    stack: [{\n      regex: /\\)/,\n      token: \"bracket\",\n      next: \"start\"\n    }, {\n      regex: /--/,\n      token: \"bracket\"\n    }, {\n      regex: /\\S+/,\n      token: \"meta\"\n    }, {\n      regex: /\\s+|./,\n      token: null\n    }],\n    // The meta property contains global information about the mode. It\n    // can contain properties like lineComment, which are supported by\n    // all modes, and also directives like dontIndentStates, which are\n    // specific to simple modes.\n    meta: {\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      lineComment: [\"!\", \"#!\"]\n    }\n  });\n  CodeMirror.defineMIME(\"text/x-factor\", \"factor\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) {\n      if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [],\n            orig = states[state];\n\n        for (var i = 0; i < orig.length; i++) {\n          var data = orig[i];\n          list.push(new Rule(data, states));\n          if (data.indent || data.dedent) hasIndentation = true;\n        }\n      }\n    }\n\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) {\n          s.persistentStates = {\n            mode: pers.mode,\n            spec: pers.spec,\n            state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n            next: s.persistentStates\n          };\n        }\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) {\n      if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    }\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) {\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    }\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) {\n              if (matches[j]) state.pending.push({\n                text: matches[j],\n                token: rule.token[j - 1]\n              });\n            }\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) {\n      if (a.hasOwnProperty(prop)) {\n        if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n        props++;\n      }\n    }\n\n    for (var prop in b) {\n      if (b.hasOwnProperty(prop)) props--;\n    }\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) {\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    }\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] === val) return true;\n    }\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}
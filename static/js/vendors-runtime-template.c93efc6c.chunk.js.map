{"version":3,"sources":["../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","beforeExpr","startsExpr","isLoop","prefix","TokenType","label","conf","this","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","length","CommentsParser","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","params","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","isExpr","preserveSpace","types","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","id","FlowScope","args","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","containsEsc","strictErrors","exportedIdentifiers","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","override","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","names","join","fn","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","obj","__esModule","cache","_getRequireWildcardCache","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","desc","_interopRequireWildcard","require","WeakMap","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","path","builtinClasses","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","constructor","blockStatement","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","constantSuper","refToPreserve","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","superIsCallableConstructor","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","isLiteral","func","toComputedKey","isStringLiteral","_helperFunctionName","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","toExpression","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","metadata","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","statements","smart","formatters","_builder","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","_interopRequireDefault","rootStack","_parse","_populate","highlightTokens","_helperValidatorIdentifier","jsTokens","Chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.c93efc6c.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes$1.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types$1.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n};\n\ntypes$1.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function () {};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes$1.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = [];\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (refNeedsArrowPos) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.name) && this.state.value === \"of\" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n      this.state.exprAllowed = false;\n    } else {\n      super.updateContext(prevType);\n    }\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\", false);\ntypes.j_cTag = new TokContext(\"</tag\", false);\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = function () {\n  this.state.context.push(types.j_expr);\n  this.state.context.push(types.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes$1.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types$1.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types.j_oTag) {\n        this.state.context.push(types.braceExpression);\n      } else if (curContext === types.j_expr) {\n        this.state.context.push(types.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      exprAllowed: state.exprAllowed,\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types$1.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types$1.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types.functionExpression || parent === types.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n      return true;\n    }\n\n    if (prevType === types$1.braceL) {\n      return parent === types.braceStatement;\n    }\n\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n      return false;\n    }\n\n    if (prevType === types$1.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types$1.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.regexp:\n        {\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nconst jsTokens = require(\"js-tokens\");\n\nconst Chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = jsTokens.default.exec(text)) {\n      const token = jsTokens.matchToToken(match);\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new Chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : Chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}
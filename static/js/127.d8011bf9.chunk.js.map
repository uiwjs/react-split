{"version":3,"sources":["../node_modules/prismjs/components/prism-ftl.min.js"],"names":["n","i","e","replace","t","comment","string","pattern","greedy","RegExp","inside","interpolation","lookbehind","alias","rest","keyword","boolean","function","number","operator","punctuation","languages","ftl","directive","content","hooks","add","buildPlaceholders","tokenizePlaceholders","Prism"],"mappings":"gHAAC,SAAUA,GACT,IAAK,IAAIC,EAAI,yGAA0GC,EAAI,EAAGA,EAAI,EAAGA,IACnID,EAAIA,EAAEE,QAAQ,WAAW,WACvB,OAAOF,KAIXA,EAAIA,EAAEE,QAAQ,UAAW,SACzB,IAAIC,EAAI,CACNC,QAAS,kBACTC,OAAQ,CAAC,CACPC,QAAS,iCACTC,QAAQ,GACP,CACDD,QAASE,OAAO,kEAAkEN,QAAQ,WAAW,WACnG,OAAOF,MAETO,QAAQ,EACRE,OAAQ,CACNC,cAAe,CACbJ,QAASE,OAAO,oDAAoDN,QAAQ,WAAW,WACrF,OAAOF,MAETW,YAAY,EACZF,OAAQ,CACN,4BAA6B,CAC3BH,QAAS,YACTM,MAAO,eAETC,KAAM,UAKdC,QAAS,aACTC,QAAS,qBACT,mBAAoB,CAClBT,QAAS,uBACTK,YAAY,EACZC,MAAO,YAETI,SAAU,eACVC,OAAQ,gBACRC,SAAU,4EACVC,YAAa,iBAEfhB,EAAEE,OAAO,GAAGI,OAAOC,cAAcD,OAAOI,KAAOV,EAAGJ,EAAEqB,UAAUC,IAAM,CAClE,cAAe,CACbf,QAAS,eACTM,MAAO,WAET,gBAAiB,CACfN,QAAS,cACTG,OAAQ,CACNa,UAAW,CACThB,QAAS,uBACTK,YAAY,EACZC,MAAO,WAETO,YAAa,cACbI,QAAS,CACPjB,QAAS,mBACTM,MAAO,MACPH,OAAQN,KAId,oBAAqB,CACnBG,QAAS,kBACTG,OAAQ,CACNU,YAAa,YACbI,QAAS,CACPjB,QAAS,mBACTM,MAAO,MACPH,OAAQN,MAIbJ,EAAEyB,MAAMC,IAAI,mBAAmB,SAAUxB,GAC1C,IAAIE,EAAIK,OAAO,4EAA4EN,QAAQ,WAAW,WAC5G,OAAOF,KACL,MACJD,EAAEqB,UAAU,qBAAqBM,kBAAkBzB,EAAG,MAAOE,MAC3DJ,EAAEyB,MAAMC,IAAI,kBAAkB,SAAUxB,GAC1CF,EAAEqB,UAAU,qBAAqBO,qBAAqB1B,EAAG,UApF5D,CAsFC2B","file":"static/js/127.d8011bf9.chunk.js","sourcesContent":["!function (n) {\n  for (var i = \"(?!<#--)[^()\\\"']|\\\\((?:<expr>)*\\\\)|<#--[\\\\s\\\\S]*?--\\x3e|\\\"(?:[^\\\\\\\\\\\"]|\\\\\\\\.)*\\\"|'(?:[^\\\\\\\\']|\\\\\\\\.)*'\", e = 0; e < 2; e++) {\n    i = i.replace(/<expr>/g, function () {\n      return i;\n    });\n  }\n\n  i = i.replace(/<expr>/g, \"[^sS]\");\n  var t = {\n    comment: /<#--[\\s\\S]*?-->/,\n    string: [{\n      pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n      greedy: !0\n    }, {\n      pattern: RegExp(\"(\\\"|')(?:(?!\\\\1|\\\\$\\\\{)[^\\\\\\\\]|\\\\\\\\.|\\\\$\\\\{(?:<expr>)*?\\\\})*\\\\1\".replace(/<expr>/g, function () {\n        return i;\n      })),\n      greedy: !0,\n      inside: {\n        interpolation: {\n          pattern: RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\\\\\\\\\)*)\\\\$\\\\{(?:<expr>)*?\\\\}\".replace(/<expr>/g, function () {\n            return i;\n          })),\n          lookbehind: !0,\n          inside: {\n            \"interpolation-punctuation\": {\n              pattern: /^\\$\\{|\\}$/,\n              alias: \"punctuation\"\n            },\n            rest: null\n          }\n        }\n      }\n    }],\n    keyword: /\\b(?:as)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    \"builtin-function\": {\n      pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n      lookbehind: !0,\n      alias: \"function\"\n    },\n    function: /\\w+(?=\\s*\\()/,\n    number: /\\d+(?:\\.\\d+)?/,\n    operator: /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n    punctuation: /[,;.:()[\\]{}]/\n  };\n  t.string[1].inside.interpolation.inside.rest = t, n.languages.ftl = {\n    \"ftl-comment\": {\n      pattern: /^<#--[\\s\\S]*/,\n      alias: \"comment\"\n    },\n    \"ftl-directive\": {\n      pattern: /^<[\\s\\S]+>$/,\n      inside: {\n        directive: {\n          pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n          lookbehind: !0,\n          alias: \"keyword\"\n        },\n        punctuation: /^<\\/?|\\/?>$/,\n        content: {\n          pattern: /[\\s\\S]*\\S[\\s\\S]*/,\n          alias: \"ftl\",\n          inside: t\n        }\n      }\n    },\n    \"ftl-interpolation\": {\n      pattern: /^\\$\\{[\\s\\S]*\\}$/,\n      inside: {\n        punctuation: /^\\$\\{|\\}$/,\n        content: {\n          pattern: /[\\s\\S]*\\S[\\s\\S]*/,\n          alias: \"ftl\",\n          inside: t\n        }\n      }\n    }\n  }, n.hooks.add(\"before-tokenize\", function (e) {\n    var t = RegExp(\"<#--[\\\\s\\\\S]*?--\\x3e|<\\\\/?[#@][a-zA-Z](?:<expr>)*?>|\\\\$\\\\{(?:<expr>)*?\\\\}\".replace(/<expr>/g, function () {\n      return i;\n    }), \"gi\");\n    n.languages[\"markup-templating\"].buildPlaceholders(e, \"ftl\", t);\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"ftl\");\n  });\n}(Prism);"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js"],"names":["Object","defineProperty","exports","value","shouldHighlight","getChalk","default","code","options","chalk","defs","getDefs","highlightTokens","obj","_jsTokens","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_helperValidatorIdentifier","_chalk","WeakMap","keyword","cyan","capitalized","yellow","jsx_tag","punctuator","number","magenta","string","green","regex","comment","grey","invalid","white","bgRed","bold","NEWLINE","JSX_TAG","BRACKET","getTokenType","match","slice","offset","text","token","matchToToken","type","isKeyword","isReservedWord","test","substr","toLowerCase","replace","args","colorize","split","map","str","join","supportsColor","forceColor","constructor","enabled","level","formatter","tpl","opts","names","nameSet","metadata","prefix","result","buildTemplateCode","Set","_parse","parser","placeholderWhitelist","concat","Array","from","placeholderPattern","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","name","buildLiteralData","arg","defaultReplacements","forEach","replacement","i","replacements","_options","normalizeReplacements","keys","Error","unwrap","_populate","assign","_interopRequireDefault","length","push","path","file","builtinClasses","isLoose","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","instancePropBody","instancePropRefs","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","hasInstanceDescriptors","hasStaticDescriptors","instanceMutatorMap","staticMutatorMap","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","params","template","expression","ast","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","instanceProps","staticProps","defineMap","toClassObject","toComputedObjectFromClass","nullLiteral","lastNonNullIndex","isNullLiteral","expressionStatement","bareSuperNode","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","static","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","enumerable","mutatorMap","booleanLiteral","pushToMap","method","hasOwnBinding","rename","directives","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","fn","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","toExpression","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","statement","a","b","validate","_ref","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","RegExp","isArray","reduce","acc","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","err","loc","message","_codeFrame","codeFrameColumns","start","parseWithCodeFrame","t","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","state","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","expectedNode","isNewExpression","isFunction","isStatement","resolve","index","resolveAncestors","placeholderName","reverse","stringLiteral","emptyStatement","items","splice","applyReplacement","e","program","statements","smart","formatters","_builder","_default","bind","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","filter","declare","api","assertVersion","loose","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","beforeExpr","startsExpr","TokenType","label","conf","this","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","end","filename","identifierName","last","stack","CommentsParser","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","newTrailingComments","leadingComment","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugin","hasPlugin","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","lineStart","lastIndex","exec","getLineInfo","errorTemplate","raiseWithData","data","getLocationForPosition","_","_raise","errorContext","SyntaxError","errorRecovery","isLookahead","errors","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","reservedWordsStrictSet","reservedWordsStrictBindSet","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_TS_AMBIENT","BIND_NONE","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","optional","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","count","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","strict","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","error","failState","originalNoArrowAt","noArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","superTypeParameters","implemented","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","startLine","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","n","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","isPrivateName","checkKeywordEscapes","pushToken","old","curr","clear","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","update","ExpressionErrors","Node","range","unwrapParenthesizedExpression","LValParser","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","isObjectMethod","_expr$elements","elem","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","_this$state$labels","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","initFunction","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","classScope","hadConstructor","hadStaticBlock","parseClassMember","pushClassMethod","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_node$declaration$dec","_i5","_node$properties","_i6","_node$elements","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","isRecord","protoRef","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","hasPropertyAsPrivateName","parseUpdate","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","_this$stack","Parser","_Object$keys","getOptions","getScopeHandler","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","getExpression","tokTypes","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","gutter","marker","red","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","maybeHighlight","chalkFn","lines","hasColumns","numberMaxWidth","highlightedLines","frame","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","makeStatementFormatter","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack"],"mappings":"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","file":"static/js/vendors-runtime-template.44925110.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = _interopRequireWildcard(require(\"js-tokens\"));\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst JSX_TAG = /^[a-z][\\w-]*$/i;\nconst BRACKET = /^[()[\\]{}]$/;\n\nfunction getTokenType(match) {\n  const [offset, text] = match.slice(-2);\n  const token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === \"name\") {\n    if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isReservedWord)(token.value)) {\n      return \"keyword\";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n      return \"jsx_tag\";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return \"capitalized\";\n    }\n  }\n\n  if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n    return \"bracket\";\n  }\n\n  if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n    return \"punctuator\";\n  }\n\n  return token.type;\n}\n\nfunction highlightTokens(defs, text) {\n  return text.replace(_jsTokens.default, function (...args) {\n    const type = getTokenType(args);\n    const colorize = defs[type];\n\n    if (colorize) {\n      return args[0].split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nfunction shouldHighlight(options) {\n  return _chalk.default.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  let chalk = _chalk.default;\n\n  if (options.forceColor) {\n    chalk = new _chalk.default.constructor({\n      enabled: true,\n      level: 1\n    });\n  }\n\n  return chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperReplaceSupers = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\nvar _helperOptimiseCallExpression = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\nvar defineMap = _interopRequireWildcard(require(\"@babel/helper-define-map\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _inlineCreateSuperHelpers = _interopRequireDefault(require(\"./inline-createSuper-helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    instancePropBody: [],\n    instancePropRefs: {},\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    hasInstanceDescriptors: false,\n    hasStaticDescriptors: false,\n    instanceMutatorMap: {},\n    staticMutatorMap: {}\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function pushToMap(node, enumerable, kind = \"value\", scope) {\n    let mutatorMap;\n\n    if (node.static) {\n      setState({\n        hasStaticDescriptors: true\n      });\n      mutatorMap = classState.staticMutatorMap;\n    } else {\n      setState({\n        hasInstanceDescriptors: true\n      });\n      mutatorMap = classState.instanceMutatorMap;\n    }\n\n    const map = defineMap.push(mutatorMap, node, kind, classState.file, scope);\n\n    if (enumerable) {\n      map.enumerable = _core.types.booleanLiteral(true);\n    }\n\n    return map;\n  }\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          isLoose: classState.isLoose,\n          file: classState.file\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function clearDescriptors() {\n    setState({\n      hasInstanceDescriptors: false,\n      hasStaticDescriptors: false,\n      instanceMutatorMap: {},\n      staticMutatorMap: {}\n    });\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    let instanceProps;\n    let staticProps;\n\n    if (classState.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(classState.instanceMutatorMap);\n    }\n\n    if (classState.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(classState.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) {\n        instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      }\n\n      if (staticProps) {\n        staticProps = defineMap.toComputedObjectFromClass(staticProps);\n      }\n\n      let args = [_core.types.cloneNode(classState.classRef), _core.types.nullLiteral(), _core.types.nullLiteral()];\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n\n    clearDescriptors();\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (classState.isLoose) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    pushToMap(node, false, null, scope);\n  }\n\n  function processMethod(node, scope) {\n    if (classState.isLoose && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    if (path.scope.hasOwnBinding(classState.classRef.name)) {\n      path.scope.rename(classState.classRef.name);\n    }\n\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!classState.isLoose) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!classState.isLoose) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar _transformClass = _interopRequireDefault(require(\"./transformClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getBuiltinClasses = category => Object.keys(_globals.default[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, errorTemplate, ...params) {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  estreeParseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  estreeParseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  estreeParseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    switch (this.state.type) {\n      case types.num:\n      case types.string:\n        return this.estreeParseLiteral(this.state.value);\n\n      case types.regexp:\n        return this.estreeParseRegExpLiteral(this.state.value);\n\n      case types.bigint:\n        return this.estreeParseBigIntLiteral(this.state.value);\n\n      case types.decimal:\n        return this.estreeParseDecimalLiteral(this.state.value);\n\n      case types._null:\n        return this.estreeParseLiteral(null);\n\n      case types._true:\n        return this.estreeParseLiteral(true);\n\n      case types._false:\n        return this.estreeParseLiteral(false);\n\n      default:\n        return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    const node = super.parseLiteral(value, type, startPos, startLoc);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n    return this.finishNode(node, type);\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = void 0;\n    this.isExpr = void 0;\n    this.preserveSpace = void 0;\n    this.override = void 0;\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n}\nconst types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  let allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  const statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords$1 = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nconst keywordRelationalOperator = /^in(stanceof)?$/;\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nconst SCOPE_OTHER = 0b00000000,\n      SCOPE_PROGRAM = 0b00000001,\n      SCOPE_FUNCTION = 0b00000010,\n      SCOPE_ARROW = 0b00000100,\n      SCOPE_SIMPLE_CATCH = 0b00001000,\n      SCOPE_SUPER = 0b00010000,\n      SCOPE_DIRECT_SUPER = 0b00100000,\n      SCOPE_CLASS = 0b01000000,\n      SCOPE_TS_MODULE = 0b10000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b00000000001,\n      BIND_KIND_TYPE = 0b00000000010,\n      BIND_SCOPE_VAR = 0b00000000100,\n      BIND_SCOPE_LEXICAL = 0b00000001000,\n      BIND_SCOPE_FUNCTION = 0b00000010000,\n      BIND_FLAGS_NONE = 0b00001000000,\n      BIND_FLAGS_CLASS = 0b00010000000,\n      BIND_FLAGS_TS_ENUM = 0b00100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b01000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b10000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => {\n  var _temp;\n\n  return _temp = class extends superClass {\n    constructor(options, input) {\n      super(options, input);\n      this.flowPragma = void 0;\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes() {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums() {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type, val) {\n      if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment) {\n      if (this.flowPragma === undefined) {\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n        if (!matches) ; else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || types.colon);\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate() {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(types.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n\n      if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n\n      if (this.eat(types.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(types.colon);\n      let type = null;\n      let predicate = null;\n\n      if (this.match(types.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n\n        if (this.match(types.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node) {\n      this.next();\n      this.flowParseInterfaceish(node, true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(node) {\n      this.next();\n      const id = node.id = this.parseIdentifier();\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(types.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(types.parenR);\n      [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n      this.resetEndLocation(id);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(node, insideModule) {\n      if (this.match(types._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(types._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(types._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(types.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(types._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(node) {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(true);\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node) {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(types.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = node.body = this.startNode();\n      const body = bodyNode.body = [];\n      this.expect(types.braceL);\n\n      while (!this.match(types.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(types._import)) {\n          this.next();\n\n          if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n            this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n          }\n\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n      this.expect(types.braceR);\n      this.finishNode(bodyNode, \"BlockStatement\");\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n          }\n\n          if (kind === \"ES\") {\n            this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n          }\n\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(node, insideModule) {\n      this.expect(types._export);\n\n      if (this.eat(types._default)) {\n        if (this.match(types._function) || this.match(types._class)) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n\n        node.default = true;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n          throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n        }\n\n        if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(node) {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(node) {\n      this.next();\n      this.flowParseTypeAlias(node);\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(node) {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(node) {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    flowParseInterfaceish(node, isClass = false) {\n      node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n      this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false\n      });\n    }\n\n    flowParseInterfaceExtends() {\n      const node = this.startNode();\n      node.id = this.flowParseQualifiedTypeIdentifier();\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node) {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word, startLoc, declaration) {\n      if (!reservedTypes.has(word)) return;\n      this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n    }\n\n    flowParseRestrictedIdentifier(liberal, declaration) {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    flowParseTypeAlias(node) {\n      node.id = this.flowParseRestrictedIdentifier(false, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(types.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(node, declare) {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(true, true);\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.supertype = null;\n\n      if (this.match(types.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(types.colon);\n      }\n\n      node.impltype = null;\n\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(types.eq);\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    flowParseTypeParameter(requireDefault = false) {\n      const nodeStart = this.state.start;\n      const node = this.startNode();\n      const variance = this.flowParseVariance();\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(types.eq)) {\n        this.eat(types.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration() {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n      this.state.inType = true;\n\n      if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      } while (!this.isRelational(\">\"));\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew() {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n      this.state.inType = true;\n      this.expectRelational(\"<\");\n\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n        if (!this.isRelational(\">\")) {\n          this.expect(types.comma);\n        }\n      }\n\n      this.expectRelational(\">\");\n      this.state.inType = oldInType;\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType() {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n      node.extends = [];\n\n      if (this.eat(types._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(types.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false\n      });\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey() {\n      return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(node, isStatic, variance) {\n      node.static = isStatic;\n\n      if (this.lookahead().type === types.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n\n      this.expect(types.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(node, isStatic) {\n      node.static = isStatic;\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(types.bracketR);\n      this.expect(types.bracketR);\n\n      if (this.isRelational(\"<\") || this.match(types.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n      } else {\n        node.method = false;\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n      }\n\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(node) {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(types.parenL);\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n\n      this.expect(types.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(node, isStatic) {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact\n    }) {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const nodeStart = this.startNode();\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n      let endDelim;\n      let exact;\n      let inexact = false;\n\n      if (allowExact && this.match(types.braceBarL)) {\n        this.expect(types.braceBarL);\n        endDelim = types.braceBarR;\n        exact = true;\n      } else {\n        this.expect(types.braceL);\n        endDelim = types.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart = null;\n        let inexactStart = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(types.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (this.eat(types.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n          } else {\n            nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n          }\n        } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n\n            if (lookahead.type === types.name || lookahead.type === types.string || lookahead.type === types.num) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n        }\n      }\n\n      this.expect(endDelim);\n\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n      this.state.inType = oldInType;\n      return out;\n    }\n\n    flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n      if (this.eat(types.ellipsis)) {\n        const isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n        let optional = false;\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    flowCheckGetterSetterParams(property) {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon() {\n      if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(types.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(startPos, startLoc, id) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType() {\n      const node = this.startNode();\n      this.expect(types._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType() {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(types.bracketL);\n\n      while (this.state.pos < this.length && !this.match(types.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(types.bracketR)) break;\n        this.expect(types.comma);\n      }\n\n      this.expect(types.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam() {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n\n      if (lh.type === types.colon || lh.type === types.question) {\n        name = this.parseIdentifier();\n\n        if (this.eat(types.question)) {\n          optional = true;\n        }\n\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(type) {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params = []) {\n      let rest = null;\n\n      while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n\n        if (!this.match(types.parenR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      if (this.eat(types.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n\n      return {\n        params,\n        rest\n      };\n    }\n\n    flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    flowParsePrimaryType() {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case types.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n        case types.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true\n          });\n\n        case types.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false\n          });\n\n        case types.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case types.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(types.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n\n          break;\n\n        case types.parenL:\n          this.next();\n\n          if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n            if (this.match(types.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== types.question && token !== types.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n              this.expect(types.parenR);\n              return type;\n            } else {\n              this.eat(types.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          this.expect(types.parenR);\n          this.expect(types.arrow);\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n        case types._true:\n        case types._false:\n          node.value = this.match(types._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case types.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n\n            if (this.match(types.num)) {\n              return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            if (this.match(types.bigint)) {\n              return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n            }\n\n            throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n          }\n\n          throw this.unexpected();\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n        case types._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case types._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case types._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case types.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType() {\n      const startPos = this.state.start,\n            startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n\n      while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(types.bracketL);\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n\n      return type;\n    }\n\n    flowParsePrefixType() {\n      const node = this.startNode();\n\n      if (this.eat(types.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens() {\n      const param = this.flowParsePrefixType();\n\n      if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n\n      return param;\n    }\n\n    flowParseIntersectionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType() {\n      const node = this.startNode();\n      this.eat(types.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n\n      while (this.eat(types.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n\n      return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType() {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation() {\n      if (this.state.type === types.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation() {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n      const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n      if (this.match(types.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n\n      return ident;\n    }\n\n    typeCastToParameter(node) {\n      node.expression.typeAnnotation = node.typeAnnotation;\n      this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n      return node.expression;\n    }\n\n    flowParseVariance() {\n      let variance = null;\n\n      if (this.match(types.plusMin)) {\n        variance = this.startNode();\n\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n\n      return variance;\n    }\n\n    parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(node, type, isMethod = false) {\n      if (this.match(types.colon)) {\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    parseStatement(context, topLevel) {\n      if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      const stmt = super.parseStatement(context, topLevel);\n\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n\n      return stmt;\n    }\n\n    parseExpressionStatement(node, expr) {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    shouldParseExportDeclaration() {\n      return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier() {\n      if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (!this.match(types.question)) return expr;\n\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(types.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let {\n        consequent,\n        failed\n      } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({\n            consequent,\n            failed\n          } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(types.colon);\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent() {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(types.colon);\n      this.state.noArrowParamsConversionAt.pop();\n      return {\n        consequent,\n        failed\n      };\n    }\n\n    getArrowLikeExpressions(node, disallowInvalid) {\n      const stack = [node];\n      const arrows = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n    }\n\n    finishArrowValidation(node) {\n      var _node$extra;\n\n      this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt(node, parse) {\n      let result;\n\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(node, startPos, startLoc) {\n      node = super.parseParenItem(node, startPos, startLoc);\n\n      if (this.eat(types.question)) {\n        node.optional = true;\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(types.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node) {\n      if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node) {\n      const decl = super.parseExport(node);\n\n      if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n\n      return decl;\n    }\n\n    parseExportDeclaration(node) {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node) {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node) {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n\n      return hasNamespace;\n    }\n\n    parseClassId(node, isStatement, optionalId) {\n      super.parseClassId(node, isStatement, optionalId);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(classBody, member, state) {\n      const pos = this.state.start;\n\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n        }\n      }\n    }\n\n    getTokenFromCode(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 123 && next === 124) {\n        return this.finishOp(types.braceBarL, 2);\n      } else if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else if (this.state.inType && code === 63) {\n        return this.finishOp(types.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node, isBinding) {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            const last = node.properties.length - 1;\n            return node.properties.every((prop, i) => {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node, isLHS = false) {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableList(exprList, trailingCommaPos, isLHS) {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n\n        if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    toReferencedList(exprList, isParenthesizedExpr) {\n      for (let i = 0; i < exprList.length; i++) {\n        var _expr$extra;\n\n        const expr = exprList[i];\n\n        if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(expr, ...args) {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    parseClassProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(node) {\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      return super.parseClassPrivateProperty(node);\n    }\n\n    isClassMethod() {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty() {\n      return this.match(types.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method) {\n      return !this.match(types.colon) && super.isNonstaticConstructor(method);\n    }\n\n    pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    }\n\n    pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      if (method.variance) {\n        this.unexpected(method.variance.start);\n      }\n\n      delete method.variance;\n\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node) {\n      super.parseClassSuper(node);\n\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented = node.implements = [];\n\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(true);\n\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(types.comma));\n      }\n    }\n\n    parsePropertyName(node, isPrivateNameAllowed) {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      node.variance = variance;\n      return key;\n    }\n\n    parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      if (prop.variance) {\n        this.unexpected(prop.variance.start);\n      }\n\n      delete prop.variance;\n      let typeParameters;\n\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param) {\n      if (this.eat(types.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        param.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(startPos, startLoc, left) {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node) {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    maybeParseDefaultImportSpecifier(node) {\n      node.importKind = \"value\";\n      let kind = null;\n\n      if (this.match(types._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n\n      if (kind) {\n        const lh = this.lookahead();\n\n        if (kind === \"type\" && lh.type === types.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    parseImportSpecifier(node) {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n      let specifierTypeKind = null;\n\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(specifier.local.name, specifier.local.start, true);\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseFunctionParams(node, allowModifiers) {\n      const kind = node.kind;\n\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    parseVarId(decl, kind) {\n      super.parseVarId(decl, kind);\n\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id);\n      }\n    }\n\n    parseAsyncArrowFromCallExpression(node, call) {\n      if (this.match(types.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    shouldParseAsyncArrow() {\n      return this.match(types.colon) || super.shouldParseAsyncArrow();\n    }\n\n    parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _jsx;\n\n      let state = null;\n      let jsx;\n\n      if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n        state = this.state.clone();\n        jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);\n        if (!jsx.error) return jsx.node;\n        const {\n          context\n        } = this.state;\n\n        if (context[context.length - 1] === types$1.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === types$1.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n        var _jsx2, _jsx3;\n\n        state = state || this.state.clone();\n        let typeParameters;\n        const arrow = this.tryParse(abort => {\n          var _arrowExpression$extr;\n\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n            const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n            this.resetStartLocationFromNode(result, typeParameters);\n            return result;\n          });\n\n          if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n            abort();\n          }\n\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n          return arrowExpression;\n        }, state);\n        let arrowExpression = null;\n\n        if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n          if (!arrow.error && !arrow.aborted) {\n            if (arrow.node.async) {\n              this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n    }\n\n    parseArrow(node) {\n      if (this.match(types.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          const typeNode = this.startNode();\n          [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          return typeNode;\n        });\n        if (result.thrown) return null;\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow() {\n      return this.match(types.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(node, params) {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(node, allowDuplicates, isArrowFunction) {\n      if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow) {\n      return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n    }\n\n    parseSubscripts(base, startPos, startLoc, noCalls) {\n      if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n        const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n      if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n\n        this.next();\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(types.parenL);\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, true);\n      } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(node, subscriptState.optionalChainMember);\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n    }\n\n    parseNewArguments(node) {\n      let targs = null;\n\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n      }\n\n      node.typeArguments = targs;\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(node, undefined, true);\n    }\n\n    readToken_mult_modulo(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 47 && this.state.hasFlowComment) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code) {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 124 && next === 125) {\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file, program) {\n      const fileNode = super.parseTopLevel(file, program);\n\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n\n      return fileNode;\n    }\n\n    skipBlockComment() {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n        }\n\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment() {\n      const {\n        pos\n      } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n\n      while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === 58 && ch3 === 58) {\n        return shiftToFirstNonWhiteSpace + 2;\n      }\n\n      if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n        return shiftToFirstNonWhiteSpace + 12;\n      }\n\n      if (ch2 === 58 && ch3 !== 58) {\n        return shiftToFirstNonWhiteSpace;\n      }\n\n      return false;\n    }\n\n    hasFlowCommentCompletion() {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n      }\n    }\n\n    flowEnumErrorBooleanMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n    }\n\n    flowEnumErrorInvalidMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n    }\n\n    flowEnumErrorDuplicateMemberName(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(pos, {\n      enumName,\n      suppliedType\n    }) {\n      return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n    }\n\n    flowEnumErrorInvalidMemberInitializer(pos, {\n      enumName,\n      explicitType,\n      memberName\n    }) {\n      let message = null;\n\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n\n        default:\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(pos, {\n      enumName,\n      memberName\n    }) {\n      this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n      enumName\n    }) {\n      this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n    }\n\n    flowEnumMemberInit() {\n      const startPos = this.state.start;\n\n      const endOfInit = () => this.match(types.comma) || this.match(types.braceR);\n\n      switch (this.state.type) {\n        case types.num:\n          {\n            const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"number\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types.string:\n          {\n            const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n            if (endOfInit()) {\n              return {\n                type: \"string\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        case types._true:\n        case types._false:\n          {\n            const literal = this.parseBooleanLiteral();\n\n            if (endOfInit()) {\n              return {\n                type: \"boolean\",\n                pos: literal.start,\n                value: literal\n              };\n            }\n\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n          }\n\n        default:\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n      }\n    }\n\n    flowEnumMemberRaw() {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n        type: \"none\",\n        pos\n      };\n      return {\n        id,\n        init\n      };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n      const {\n        explicitType\n      } = context;\n\n      if (explicitType === null) {\n        return;\n      }\n\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType\n    }) {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: []\n      };\n\n      while (!this.match(types.braceR)) {\n        const memberNode = this.startNode();\n        const {\n          id,\n          init\n        } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n\n        if (memberName === \"\") {\n          continue;\n        }\n\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName\n          });\n        }\n\n        seenNames.add(memberName);\n        const context = {\n          enumName,\n          explicitType,\n          memberName\n        };\n        memberNode.id = id;\n\n        switch (init.type) {\n          case \"boolean\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n              memberNode.init = init.value;\n              members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n              break;\n            }\n\n          case \"number\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n              memberNode.init = init.value;\n              members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n              break;\n            }\n\n          case \"string\":\n            {\n              this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n              memberNode.init = init.value;\n              members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n              break;\n            }\n\n          case \"invalid\":\n            {\n              throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n            }\n\n          case \"none\":\n            {\n              switch (explicitType) {\n                case \"boolean\":\n                  this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                  break;\n\n                case \"number\":\n                  this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                  break;\n\n                default:\n                  members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n              }\n            }\n        }\n\n        if (!this.match(types.braceR)) {\n          this.expect(types.comma);\n        }\n      }\n\n      return members;\n    }\n\n    flowEnumStringMembers(initializedMembers, defaultedMembers, {\n      enumName\n    }) {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (let _i = 0; _i < initializedMembers.length; _i++) {\n          const member = initializedMembers[_i];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return defaultedMembers;\n      } else {\n        for (let _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n          const member = defaultedMembers[_i2];\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n            enumName\n          });\n        }\n\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName\n    }) {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(types.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null\n          });\n        }\n\n        const {\n          value\n        } = this.state;\n        this.next();\n\n        if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value\n          });\n        }\n\n        return value;\n      }\n\n      return null;\n    }\n\n    flowEnumBody(node, {\n      enumName,\n      nameLoc\n    }) {\n      const explicitType = this.flowEnumParseExplicitType({\n        enumName\n      });\n      this.expect(types.braceL);\n      const members = this.flowEnumMembers({\n        enumName,\n        explicitType\n      });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n            enumName\n          });\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(types.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n\n        default:\n          {\n            const empty = () => {\n              node.members = [];\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            };\n\n            node.explicitType = false;\n            const boolsLen = members.booleanMembers.length;\n            const numsLen = members.numberMembers.length;\n            const strsLen = members.stringMembers.length;\n            const defaultedLen = members.defaultedMembers.length;\n\n            if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n              return empty();\n            } else if (!boolsLen && !numsLen) {\n              node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                enumName\n              });\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumStringBody\");\n            } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n              for (let _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                const member = _members$defaultedMem[_i3];\n                this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.booleanMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumBooleanBody\");\n            } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n              for (let _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                const member = _members$defaultedMem2[_i4];\n                this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                  enumName,\n                  memberName: member.id.name\n                });\n              }\n\n              node.members = members.numberMembers;\n              this.expect(types.braceR);\n              return this.finishNode(node, \"EnumNumberBody\");\n            } else {\n              this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                enumName\n              });\n              return empty();\n            }\n          }\n      }\n    }\n\n    flowParseEnumDeclaration(node) {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType) {\n      if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    isLookaheadToken_lt() {\n      const next = this.nextTokenStart();\n\n      if (this.input.charCodeAt(next) === 60) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return afterNext !== 60 && afterNext !== 61;\n      }\n\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n\n  }, _temp;\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types.jsxTagStart:\n      case types.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types.braceL)) {\n      this.expect(types.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types.slash);\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types.jsxTagEnd)) {\n      this.expect(types.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types$1.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    if (this.match(types.braceL)) {\n      const curContext = this.curContext();\n\n      if (curContext === types$1.j_oTag) {\n        this.state.context.push(types$1.braceExpression);\n      } else if (curContext === types$1.j_expr) {\n        this.state.context.push(types$1.templateQuasi);\n      } else {\n        super.updateContext(prevType);\n      }\n\n      this.state.exprAllowed = true;\n    } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n      this.state.context.length -= 2;\n      this.state.context.push(types$1.j_cTag);\n      this.state.exprAllowed = false;\n    } else {\n      return super.updateContext(prevType);\n    }\n  }\n\n});\n\nclass Scope {\n  constructor(flags) {\n    this.flags = void 0;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n    }\n\n    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  currentThisScope() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const scope = this.scopeStack[i];\n\n      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n        return scope;\n      }\n    }\n  }\n\n}\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = [];\n    this.enums = [];\n    this.constEnums = [];\n    this.classes = [];\n    this.exportOnlyBindings = [];\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.push(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types.name);\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers) {\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers);\n      if (!modifier) break;\n\n      if (Object.hasOwnProperty.call(modified, modifier)) {\n        this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n      }\n\n      modified[modifier] = true;\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types._import);\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types.parenR);\n\n    if (this.eat(types.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types._typeof);\n\n    if (this.match(types._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types._extends);\n    node.default = this.tsEatThenParseType(types.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types.comma)) {\n      this.semicolon();\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types.name) && this.match(types.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n      const method = nodeAny;\n      this.tsFillSignature(types.colon, method);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    const readonly = !!this.tsParseModifier([\"readonly\"]);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      if (readonly) node.readonly = true;\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n    return this.tsParsePropertyOrMethodSignature(node, readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types.braceL);\n\n    if (this.match(types.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types.bracketR);\n\n    if (this.match(types.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types.question);\n    } else if (this.eat(types.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types.question);\n    const labeled = this.eat(types.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      this.expect(types._new);\n    }\n\n    this.tsFillSignature(types.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types.num:\n        case types.bigint:\n        case types.string:\n        case types._true:\n        case types._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types.name:\n      case types._void:\n      case types._null:\n        {\n          const type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types.string:\n      case types.num:\n      case types.bigint:\n      case types._true:\n      case types._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types._typeof:\n        return this.tsParseTypeQuery();\n\n      case types._import:\n        return this.tsParseImportType();\n\n      case types.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types.bracketL:\n        return this.tsParseTupleType();\n\n      case types.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n      if (this.match(types.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    this.eat(operator);\n    let type = parseConstituentType();\n\n    if (this.match(operator)) {\n      const types = [type];\n\n      while (this.eat(operator)) {\n        types.push(parseConstituentType());\n      }\n\n      const node = this.startNodeAtNode(type);\n      node.types = types;\n      type = this.finishNode(node, kind);\n    }\n\n    return type;\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types.name) || this.match(types._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types.parenR) || this.match(types.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n        return true;\n      }\n\n      if (this.match(types.parenR)) {\n        this.next();\n\n        if (this.match(types.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          const node = this.startNodeAtNode(t);\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        const node = this.startNodeAtNode(t);\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      const node = this.startNodeAtNode(t);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types.name) && !this.match(types._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types.question);\n    node.trueType = this.tsParseType();\n    this.expect(types.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types.eq);\n    node.moduleReference = this.tsParseModuleReference();\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types.parenL);\n\n    if (!this.match(types.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    return this.tsInDeclareContext(() => {\n      switch (starttype) {\n        case types._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types._const:\n          if (this.match(types._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n          const cls = node;\n          cls.abstract = true;\n\n          if (next) {\n            this.next();\n\n            if (!this.match(types._class)) {\n              this.unexpected(null, types._class);\n            }\n          }\n\n          return this.parseClass(cls, true, false);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (next) this.next();\n\n        if (this.match(types.string)) {\n          return this.tsParseAmbientExternalModuleDeclaration(node);\n        } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n          if (next) this.next();\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminatorAndMatch(tokenType, next) {\n    return (next || this.match(tokenType)) && !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.state.exprAllowed = false;\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n\n    if (allowModifiers !== undefined) {\n      accessibility = this.parseAccessModifier();\n      readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      if (allowModifiers === false && (accessibility || readonly)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n      const ahead = this.lookahead();\n\n      if (this.match(types.name) && ahead.type === types.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n\n      if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n        node.importKind = \"type\";\n        this.next();\n      }\n    }\n\n    if (!node.importKind) {\n      node.importKind = \"value\";\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types._import)) {\n      this.expect(types._import);\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      this.parseClass(cls, true, true);\n      cls.abstract = true;\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  parseClassMember(classBody, member, state) {\n    this.tsParseModifiers(member, [\"declare\"]);\n    const accessibility = this.parseAccessModifier();\n    if (accessibility) member.accessibility = accessibility;\n    this.tsParseModifiers(member, [\"declare\"]);\n\n    const callParseClassMember = () => {\n      super.parseClassMember(classBody, member, state);\n    };\n\n    if (member.declare) {\n      this.tsInDeclareContext(callParseClassMember);\n    } else {\n      callParseClassMember();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (isStatic) {\n        this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      return;\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (!refNeedsArrowPos || !this.match(types.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      refNeedsArrowPos.start = result.error.pos || this.state.start;\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n    let declaration;\n\n    if (this.match(types.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isDeclareContext && this.match(types.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.match(types.jsxTagStart)) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types$1.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types$1.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        if (this.canInsertSemicolon() || !this.match(types.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types.bang) || this.match(types.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInDeclareContext(cb) {\n    const oldIsDeclareContext = this.state.isDeclareContext;\n    this.state.isDeclareContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isDeclareContext = oldIsDeclareContext;\n    }\n  }\n\n});\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, \"A class name is required\");\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers == null ? void 0 : specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types.modulo);\n\n      if (this.match(types.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (let _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    const key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = old.clone(true);\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types.eof);\n      return;\n    }\n\n    const override = curContext == null ? void 0 : curContext.override;\n\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      if (next === 123) {\n        this.finishToken(types.braceHashL);\n      } else {\n        this.finishToken(types.bracketHashL);\n      }\n\n      this.state.pos += 2;\n    } else {\n      this.finishOp(types.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.dot);\n    }\n  }\n\n  readToken_slash() {\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types.star : types.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61 && !exprAllowed) {\n      width++;\n      type = types.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.braceBarR, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.finishOp(types.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types.assign, 2);\n    } else {\n      this.finishOp(types.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types.eq : types.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types.assign, 3);\n      } else {\n        this.finishOp(types.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.finishToken(types.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.pos;\n    let escaped, inClass;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charAt(this.state.pos);\n\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n\n        escaped = ch === \"\\\\\";\n      }\n\n      ++this.state.pos;\n    }\n\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(charCode) || charCode === 92) {\n        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    this.finishToken(types.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1() {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === 64) {\n        ++this.state.pos;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word) {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  readWord() {\n    const word = this.readWord1();\n    const type = keywords.get(word) || types.name;\n\n    if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType) {\n    const parent = this.curContext();\n\n    if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n      return true;\n    }\n\n    if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n      return !parent.isExpr;\n    }\n\n    if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return parent === types$1.braceStatement;\n    }\n\n    if (prevType === types._var || prevType === types._const || prevType === types.name) {\n      return false;\n    }\n\n    if (prevType === types.relational) {\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType) {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types.name);\n  }\n\n  expectContextual(name, message) {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  isLineTerminator() {\n    return this.eat(types.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon() {\n    if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, message);\n    }\n  }\n\n  unexpected(pos, messageOrType = \"Unexpected token\") {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto\n    } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (let _i = 0; _i < exprList.length; _i++) {\n      const expr = exprList[_i];\n\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types.braceL:\n        return this.parseObjectLike(types.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n      }\n\n      if (allowEmpty && this.match(types.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n          let prop = _expr$properties[_i2];\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (let _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n          const elem = _expr$elements[_i3];\n\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, message) {\n    this.errors.set(pos, message);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, message);\n  }\n\n  recordParenthesizedIdentifierError(pos, message) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, message) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, message);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((message, pos) => {\n      this.raise(pos, message);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types.parenL) || this.match(types.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n    if (this.eat(types.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n          this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n        }\n\n        const logical = op === types.logicalOR || op === types.logicalAND;\n        const coalesce = op === types.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n\n    const update = this.match(types.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary();\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (let _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n          const arg = _node$arguments[_i];\n\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n        start: 0\n      } : undefined, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.state.type === types.slash) this.readRegexp();\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case types._super:\n        return this.parseSuper();\n\n      case types._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types.name:\n        {\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types._function)) {\n              const last = this.state.context.length - 1;\n\n              if (this.state.context[last] !== types$1.functionStatement) {\n                throw new Error(\"Internal error\");\n              }\n\n              this.state.context[last] = types$1.functionExpression;\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types.name)) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            }\n          }\n\n          if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types._do:\n        {\n          return this.parseDo();\n        }\n\n      case types.regexp:\n        {\n          const value = this.state.value;\n          node = this.parseLiteral(value.value, \"RegExpLiteral\");\n          node.pattern = value.pattern;\n          node.flags = value.flags;\n          return node;\n        }\n\n      case types.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case types.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case types.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case types.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case types._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case types._true:\n      case types._false:\n        return this.parseBooleanLiteral();\n\n      case types.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case types.bracketBarL:\n      case types.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types.bracketL:\n        {\n          return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types.braceBarL:\n      case types.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n        }\n\n      case types.braceL:\n        {\n          return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n        }\n\n      case types._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types.at:\n        this.parseDecorators();\n\n      case types._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types._new:\n        return this.parseNewOrNewTarget();\n\n      case types.backQuote:\n        return this.parseTemplate(false);\n\n      case types.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n\n          const nextCh = this.input.codePointAt(this.state.end);\n\n          if (isIdentifierStart(nextCh) || nextCh === 92) {\n            const start = this.state.start;\n            node = this.parseMaybePrivateName(true);\n\n            if (this.match(types._in)) {\n              this.expectPlugin(\"privateIn\");\n              this.classScope.usePrivateName(node.id.name, node.start);\n            } else if (this.hasPlugin(\"privateIn\")) {\n              this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n            } else {\n              throw this.unexpected(start);\n            }\n\n            return node;\n          }\n        }\n\n      case types.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo() {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral() {\n    const node = this.startNode();\n    node.value = this.match(types._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(id.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral(value, type, startPos, startLoc) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = {\n      start: 0\n    };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma, refNeedsArrowPos.start || null);\n\n        if (this.match(types.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = ErrorMessages.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        this.raise(metaProp.start, error);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types.parenL)) {\n      const args = this.parseExprList(types.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.exprAllowed = false;\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (let _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n      const param = _node$params[_i2];\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n      const curContext = this.curContext();\n\n      if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    }\n\n    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n      this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait() {\n    const node = this.startNode();\n    this.next();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n\n    if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign();\n    }\n\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    program.sourceType = this.options.sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, types.eof);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (let _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n        const [name] = _Array$from[_i];\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = this.tokens;\n    return this.finishNode(file, \"File\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) return true;\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types._break:\n      case types._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types._do:\n        return this.parseDoStatement(node);\n\n      case types._for:\n        return this.parseForStatement(node);\n\n      case types._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types._if:\n        return this.parseIfStatement(node);\n\n      case types._return:\n        return this.parseReturnStatement(node);\n\n      case types._switch:\n        return this.parseSwitchStatement(node);\n\n      case types._throw:\n        return this.parseThrowStatement(node);\n\n      case types._try:\n        return this.parseTryStatement(node);\n\n      case types._const:\n      case types._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types._while:\n        return this.parseWhileStatement(node);\n\n      case types._with:\n        return this.parseWithStatement(node);\n\n      case types.braceL:\n        return this.parseBlock();\n\n      case types.semi:\n        return this.parseEmptyStatement(node);\n\n      case types._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(node.start, {\n        code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n      }, ErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types.parenL);\n    const val = this.parseExpression();\n    this.expect(types.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types.parenL);\n\n    if (this.match(types.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n\n    if (this.match(types._var) || this.match(types._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n\n    if (this.match(types._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, true);\n      const description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types.braceR);) {\n      if (this.match(types._case) || this.match(types._default)) {\n        const isCase = this.match(types._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL)) {\n        this.expect(types.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (let _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n      const label = _this$state$labels[_i2];\n\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.match(types.semi) ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.match(types.parenR) ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(constructorAllowsSuper, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types.braceR)) {\n        if (this.eat(types.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types.braceL)) {\n        this.parseClassStaticBlock(classBody, member, state);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types.star)) {\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const key = this.parsePropertyName(member, true);\n\n    if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n      this.raise(key.start, ErrorMessages.StaticPrototype);\n    }\n\n    if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n      this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(classBody, member, state) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if (state.hadStaticBlock) {\n      this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n    }\n\n    if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    if (!node.typeAnnotation || this.match(types.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (let _i3 = 0, _node$specifiers = node.specifiers; _i3 < _node$specifiers.length; _i3++) {\n          const specifier = _node$specifiers[_i3];\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type === \"StringLiteral\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (let _i4 = 0, _node$declaration$dec = node.declaration.declarations; _i4 < _node$declaration$dec.length; _i4++) {\n            const declaration = _node$declaration$dec[_i4];\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (let _i5 = 0, _node$properties = node.properties; _i5 < _node$properties.length; _i5++) {\n        const prop = _node$properties[_i5];\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (let _i6 = 0, _node$elements = node.elements; _i6 < _node$elements.length; _i6++) {\n        const elem = _node$elements[_i6];\n\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral(this.state.value, \"StringLiteral\");\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n        const attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (this.match(types.string)) {\n        node.key = this.parseLiteral(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types.colon);\n\n      if (keyName !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n      }\n\n      if (attrNames.has(keyName)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types.colon);\n\n      if (!this.match(types.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types.braceL);\n\n    while (!this.eat(types.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types.comma);\n        if (this.eat(types.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (let _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n      const [name, pos] = _Array$from[_i];\n\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (let _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n      classScope = _this$stack[_i2];\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    const ScopeHandler = this.getScopeHandler();\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (let _i = 0; _i < plugins.length; _i++) {\n    const plugin = plugins[_i];\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (let _i = 0; _i < pluginList.length; _i++) {\n      const plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}"],"sourceRoot":""}
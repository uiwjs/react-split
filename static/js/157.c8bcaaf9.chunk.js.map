{"version":3,"sources":["../node_modules/prismjs/components/prism-hcl.min.js"],"names":["Prism","languages","hcl","comment","heredoc","pattern","greedy","alias","keyword","inside","type","lookbehind","property","string","interpolation","function","number","punctuation","boolean"],"mappings":"+GAAAA,MAAMC,UAAUC,IAAM,CACpBC,QAAS,sCACTC,QAAS,CACPC,QAAS,2BACTC,QAAQ,EACRC,MAAO,UAETC,QAAS,CAAC,CACRH,QAAS,qEACTI,OAAQ,CACNC,KAAM,CACJL,QAAS,iDACTM,YAAY,EACZJ,MAAO,cAGV,CACDF,QAAS,uGACTI,OAAQ,CACNC,KAAM,CACJL,QAAS,gGACTM,YAAY,EACZJ,MAAO,cAGV,CACDF,QAAS,mBAEXO,SAAU,CAAC,wBAAyB,qCACpCC,OAAQ,CACNR,QAAS,0FACTC,QAAQ,EACRG,OAAQ,CACNK,cAAe,CACbT,QAAS,mDACTM,YAAY,EACZF,OAAQ,CACNC,KAAM,CACJL,QAAS,sEACTM,YAAY,EACZJ,MAAO,YAETC,QAAS,2DACTO,SAAU,YACVF,OAAQ,CACNR,QAAS,yBACTC,QAAQ,GAEVU,OAAQ,wCACRC,YAAa,2CAKrBD,OAAQ,wCACRE,QAAS,sBACTD,YAAa","file":"static/js/157.c8bcaaf9.chunk.js","sourcesContent":["Prism.languages.hcl = {\n  comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  heredoc: {\n    pattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n    greedy: !0,\n    alias: \"string\"\n  },\n  keyword: [{\n    pattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n    inside: {\n      type: {\n        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n    inside: {\n      type: {\n        pattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /[\\w-]+(?=\\s+{)/\n  }],\n  property: [/[\\w-\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n  string: {\n    pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n        lookbehind: !0,\n        inside: {\n          type: {\n            pattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n            lookbehind: !0,\n            alias: \"variable\"\n          },\n          keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n          function: /\\w+(?=\\()/,\n          string: {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n            greedy: !0\n          },\n          number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n          punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n        }\n      }\n    }\n  },\n  number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  punctuation: /[=\\[\\]{}]/\n};"],"sourceRoot":""}
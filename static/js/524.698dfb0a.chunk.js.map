{"version":3,"sources":["../node_modules/codemirror/mode/textile/textile.js"],"names":["CodeMirror","TOKEN_STYLES","addition","attributes","bold","cite","code","definitionList","deletion","div","em","footnote","footCite","header","html","image","italic","link","linkDefinition","list1","list2","list3","notextile","pre","p","quote","span","specialChar","strong","sub","sup","table","tableHeading","handlePhraseModifier","stream","state","ch","eat","togglePhraseModifier","match","tokenStyles","tokenStylesWith","type","phraseModifier","closeRE","openSize","charBefore","pos","string","charAt","charAfter","peek","test","RegExp","source","mode","Modes","disabled","textileDisabled","styles","layoutType","push","concat","i","arguments","length","activeStyles","join","extraStyles","blankLine","spanningLayout","key","hasOwnProperty","newLayout","REs","cache","single","bc","bq","definitionListEnd","drawTable","foot","list","para","tableCellAttributes","tableText","text","align","selector","lang","pad","css","createRe","name","makeRe","RE","choiceRe","pattern","arg","parts","unshift","apply","blockType","newMode","parseInt","next","layoutLength","listDepth","listMod","skipToEnd","tableCell","defineMode","startState","token","sol","startNewLine","defineMIME","mod"],"mappings":"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","file":"static/js/524.698dfb0a.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") {\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  } else if (typeof define == \"function\" && define.amd) {\n    // AMD\n    define([\"../../lib/codemirror\"], mod);\n  } else {\n    // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var TOKEN_STYLES = {\n    addition: \"positive\",\n    attributes: \"attribute\",\n    bold: \"strong\",\n    cite: \"keyword\",\n    code: \"atom\",\n    definitionList: \"number\",\n    deletion: \"negative\",\n    div: \"punctuation\",\n    em: \"em\",\n    footnote: \"variable\",\n    footCite: \"qualifier\",\n    header: \"header\",\n    html: \"comment\",\n    image: \"string\",\n    italic: \"em\",\n    link: \"link\",\n    linkDefinition: \"link\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    notextile: \"string-2\",\n    pre: \"operator\",\n    p: \"property\",\n    quote: \"bracket\",\n    span: \"quote\",\n    specialChar: \"tag\",\n    strong: \"strong\",\n    sub: \"builtin\",\n    sup: \"builtin\",\n    table: \"variable-3\",\n    tableHeading: \"operator\"\n  };\n\n  function startNewLine(stream, state) {\n    state.mode = Modes.newLayout;\n    state.tableHeading = false;\n    if (state.layoutType === \"definitionList\" && state.spanningLayout && stream.match(RE(\"definitionListEnd\"), false)) state.spanningLayout = false;\n  }\n\n  function handlePhraseModifier(stream, state, ch) {\n    if (ch === \"_\") {\n      if (stream.eat(\"_\")) return togglePhraseModifier(stream, state, \"italic\", /__/, 2);else return togglePhraseModifier(stream, state, \"em\", /_/, 1);\n    }\n\n    if (ch === \"*\") {\n      if (stream.eat(\"*\")) {\n        return togglePhraseModifier(stream, state, \"bold\", /\\*\\*/, 2);\n      }\n\n      return togglePhraseModifier(stream, state, \"strong\", /\\*/, 1);\n    }\n\n    if (ch === \"[\") {\n      if (stream.match(/\\d+\\]/)) state.footCite = true;\n      return tokenStyles(state);\n    }\n\n    if (ch === \"(\") {\n      var spec = stream.match(/^(r|tm|c)\\)/);\n      if (spec) return tokenStylesWith(state, TOKEN_STYLES.specialChar);\n    }\n\n    if (ch === \"<\" && stream.match(/(\\w+)[^>]+>[^<]+<\\/\\1>/)) return tokenStylesWith(state, TOKEN_STYLES.html);\n    if (ch === \"?\" && stream.eat(\"?\")) return togglePhraseModifier(stream, state, \"cite\", /\\?\\?/, 2);\n    if (ch === \"=\" && stream.eat(\"=\")) return togglePhraseModifier(stream, state, \"notextile\", /==/, 2);\n    if (ch === \"-\" && !stream.eat(\"-\")) return togglePhraseModifier(stream, state, \"deletion\", /-/, 1);\n    if (ch === \"+\") return togglePhraseModifier(stream, state, \"addition\", /\\+/, 1);\n    if (ch === \"~\") return togglePhraseModifier(stream, state, \"sub\", /~/, 1);\n    if (ch === \"^\") return togglePhraseModifier(stream, state, \"sup\", /\\^/, 1);\n    if (ch === \"%\") return togglePhraseModifier(stream, state, \"span\", /%/, 1);\n    if (ch === \"@\") return togglePhraseModifier(stream, state, \"code\", /@/, 1);\n\n    if (ch === \"!\") {\n      var type = togglePhraseModifier(stream, state, \"image\", /(?:\\([^\\)]+\\))?!/, 1);\n      stream.match(/^:\\S+/); // optional Url portion\n\n      return type;\n    }\n\n    return tokenStyles(state);\n  }\n\n  function togglePhraseModifier(stream, state, phraseModifier, closeRE, openSize) {\n    var charBefore = stream.pos > openSize ? stream.string.charAt(stream.pos - openSize - 1) : null;\n    var charAfter = stream.peek();\n\n    if (state[phraseModifier]) {\n      if ((!charAfter || /\\W/.test(charAfter)) && charBefore && /\\S/.test(charBefore)) {\n        var type = tokenStyles(state);\n        state[phraseModifier] = false;\n        return type;\n      }\n    } else if ((!charBefore || /\\W/.test(charBefore)) && charAfter && /\\S/.test(charAfter) && stream.match(new RegExp(\"^.*\\\\S\" + closeRE.source + \"(?:\\\\W|$)\"), false)) {\n      state[phraseModifier] = true;\n      state.mode = Modes.attributes;\n    }\n\n    return tokenStyles(state);\n  }\n\n  ;\n\n  function tokenStyles(state) {\n    var disabled = textileDisabled(state);\n    if (disabled) return disabled;\n    var styles = [];\n    if (state.layoutType) styles.push(TOKEN_STYLES[state.layoutType]);\n    styles = styles.concat(activeStyles(state, \"addition\", \"bold\", \"cite\", \"code\", \"deletion\", \"em\", \"footCite\", \"image\", \"italic\", \"link\", \"span\", \"strong\", \"sub\", \"sup\", \"table\", \"tableHeading\"));\n    if (state.layoutType === \"header\") styles.push(TOKEN_STYLES.header + \"-\" + state.header);\n    return styles.length ? styles.join(\" \") : null;\n  }\n\n  function textileDisabled(state) {\n    var type = state.layoutType;\n\n    switch (type) {\n      case \"notextile\":\n      case \"code\":\n      case \"pre\":\n        return TOKEN_STYLES[type];\n\n      default:\n        if (state.notextile) return TOKEN_STYLES.notextile + (type ? \" \" + TOKEN_STYLES[type] : \"\");\n        return null;\n    }\n  }\n\n  function tokenStylesWith(state, extraStyles) {\n    var disabled = textileDisabled(state);\n    if (disabled) return disabled;\n    var type = tokenStyles(state);\n    if (extraStyles) return type ? type + \" \" + extraStyles : extraStyles;else return type;\n  }\n\n  function activeStyles(state) {\n    var styles = [];\n\n    for (var i = 1; i < arguments.length; ++i) {\n      if (state[arguments[i]]) styles.push(TOKEN_STYLES[arguments[i]]);\n    }\n\n    return styles;\n  }\n\n  function blankLine(state) {\n    var spanningLayout = state.spanningLayout,\n        type = state.layoutType;\n\n    for (var key in state) {\n      if (state.hasOwnProperty(key)) delete state[key];\n    }\n\n    state.mode = Modes.newLayout;\n\n    if (spanningLayout) {\n      state.layoutType = type;\n      state.spanningLayout = true;\n    }\n  }\n\n  var REs = {\n    cache: {},\n    single: {\n      bc: \"bc\",\n      bq: \"bq\",\n      definitionList: /- .*?:=+/,\n      definitionListEnd: /.*=:\\s*$/,\n      div: \"div\",\n      drawTable: /\\|.*\\|/,\n      foot: /fn\\d+/,\n      header: /h[1-6]/,\n      html: /\\s*<(?:\\/)?(\\w+)(?:[^>]+)?>(?:[^<]+<\\/\\1>)?/,\n      link: /[^\"]+\":\\S/,\n      linkDefinition: /\\[[^\\s\\]]+\\]\\S+/,\n      list: /(?:#+|\\*+)/,\n      notextile: \"notextile\",\n      para: \"p\",\n      pre: \"pre\",\n      table: \"table\",\n      tableCellAttributes: /[\\/\\\\]\\d+/,\n      tableHeading: /\\|_\\./,\n      tableText: /[^\"_\\*\\[\\(\\?\\+~\\^%@|-]+/,\n      text: /[^!\"_=\\*\\[\\(<\\?\\+~\\^%@-]+/\n    },\n    attributes: {\n      align: /(?:<>|<|>|=)/,\n      selector: /\\([^\\(][^\\)]+\\)/,\n      lang: /\\[[^\\[\\]]+\\]/,\n      pad: /(?:\\(+|\\)+){1,2}/,\n      css: /\\{[^\\}]+\\}/\n    },\n    createRe: function createRe(name) {\n      switch (name) {\n        case \"drawTable\":\n          return REs.makeRe(\"^\", REs.single.drawTable, \"$\");\n\n        case \"html\":\n          return REs.makeRe(\"^\", REs.single.html, \"(?:\", REs.single.html, \")*\", \"$\");\n\n        case \"linkDefinition\":\n          return REs.makeRe(\"^\", REs.single.linkDefinition, \"$\");\n\n        case \"listLayout\":\n          return REs.makeRe(\"^\", REs.single.list, RE(\"allAttributes\"), \"*\\\\s+\");\n\n        case \"tableCellAttributes\":\n          return REs.makeRe(\"^\", REs.choiceRe(REs.single.tableCellAttributes, RE(\"allAttributes\")), \"+\\\\.\");\n\n        case \"type\":\n          return REs.makeRe(\"^\", RE(\"allTypes\"));\n\n        case \"typeLayout\":\n          return REs.makeRe(\"^\", RE(\"allTypes\"), RE(\"allAttributes\"), \"*\\\\.\\\\.?\", \"(\\\\s+|$)\");\n\n        case \"attributes\":\n          return REs.makeRe(\"^\", RE(\"allAttributes\"), \"+\");\n\n        case \"allTypes\":\n          return REs.choiceRe(REs.single.div, REs.single.foot, REs.single.header, REs.single.bc, REs.single.bq, REs.single.notextile, REs.single.pre, REs.single.table, REs.single.para);\n\n        case \"allAttributes\":\n          return REs.choiceRe(REs.attributes.selector, REs.attributes.css, REs.attributes.lang, REs.attributes.align, REs.attributes.pad);\n\n        default:\n          return REs.makeRe(\"^\", REs.single[name]);\n      }\n    },\n    makeRe: function makeRe() {\n      var pattern = \"\";\n\n      for (var i = 0; i < arguments.length; ++i) {\n        var arg = arguments[i];\n        pattern += typeof arg === \"string\" ? arg : arg.source;\n      }\n\n      return new RegExp(pattern);\n    },\n    choiceRe: function choiceRe() {\n      var parts = [arguments[0]];\n\n      for (var i = 1; i < arguments.length; ++i) {\n        parts[i * 2 - 1] = \"|\";\n        parts[i * 2] = arguments[i];\n      }\n\n      parts.unshift(\"(?:\");\n      parts.push(\")\");\n      return REs.makeRe.apply(null, parts);\n    }\n  };\n\n  function RE(name) {\n    return REs.cache[name] || (REs.cache[name] = REs.createRe(name));\n  }\n\n  var Modes = {\n    newLayout: function newLayout(stream, state) {\n      if (stream.match(RE(\"typeLayout\"), false)) {\n        state.spanningLayout = false;\n        return (state.mode = Modes.blockType)(stream, state);\n      }\n\n      var newMode;\n\n      if (!textileDisabled(state)) {\n        if (stream.match(RE(\"listLayout\"), false)) newMode = Modes.list;else if (stream.match(RE(\"drawTable\"), false)) newMode = Modes.table;else if (stream.match(RE(\"linkDefinition\"), false)) newMode = Modes.linkDefinition;else if (stream.match(RE(\"definitionList\"))) newMode = Modes.definitionList;else if (stream.match(RE(\"html\"), false)) newMode = Modes.html;\n      }\n\n      return (state.mode = newMode || Modes.text)(stream, state);\n    },\n    blockType: function blockType(stream, state) {\n      var match, type;\n      state.layoutType = null;\n      if (match = stream.match(RE(\"type\"))) type = match[0];else return (state.mode = Modes.text)(stream, state);\n\n      if (match = type.match(RE(\"header\"))) {\n        state.layoutType = \"header\";\n        state.header = parseInt(match[0][1]);\n      } else if (type.match(RE(\"bq\"))) {\n        state.layoutType = \"quote\";\n      } else if (type.match(RE(\"bc\"))) {\n        state.layoutType = \"code\";\n      } else if (type.match(RE(\"foot\"))) {\n        state.layoutType = \"footnote\";\n      } else if (type.match(RE(\"notextile\"))) {\n        state.layoutType = \"notextile\";\n      } else if (type.match(RE(\"pre\"))) {\n        state.layoutType = \"pre\";\n      } else if (type.match(RE(\"div\"))) {\n        state.layoutType = \"div\";\n      } else if (type.match(RE(\"table\"))) {\n        state.layoutType = \"table\";\n      }\n\n      state.mode = Modes.attributes;\n      return tokenStyles(state);\n    },\n    text: function text(stream, state) {\n      if (stream.match(RE(\"text\"))) return tokenStyles(state);\n      var ch = stream.next();\n      if (ch === '\"') return (state.mode = Modes.link)(stream, state);\n      return handlePhraseModifier(stream, state, ch);\n    },\n    attributes: function attributes(stream, state) {\n      state.mode = Modes.layoutLength;\n      if (stream.match(RE(\"attributes\"))) return tokenStylesWith(state, TOKEN_STYLES.attributes);else return tokenStyles(state);\n    },\n    layoutLength: function layoutLength(stream, state) {\n      if (stream.eat(\".\") && stream.eat(\".\")) state.spanningLayout = true;\n      state.mode = Modes.text;\n      return tokenStyles(state);\n    },\n    list: function list(stream, state) {\n      var match = stream.match(RE(\"list\"));\n      state.listDepth = match[0].length;\n      var listMod = (state.listDepth - 1) % 3;\n      if (!listMod) state.layoutType = \"list1\";else if (listMod === 1) state.layoutType = \"list2\";else state.layoutType = \"list3\";\n      state.mode = Modes.attributes;\n      return tokenStyles(state);\n    },\n    link: function link(stream, state) {\n      state.mode = Modes.text;\n\n      if (stream.match(RE(\"link\"))) {\n        stream.match(/\\S+/);\n        return tokenStylesWith(state, TOKEN_STYLES.link);\n      }\n\n      return tokenStyles(state);\n    },\n    linkDefinition: function linkDefinition(stream, state) {\n      stream.skipToEnd();\n      return tokenStylesWith(state, TOKEN_STYLES.linkDefinition);\n    },\n    definitionList: function definitionList(stream, state) {\n      stream.match(RE(\"definitionList\"));\n      state.layoutType = \"definitionList\";\n      if (stream.match(/\\s*$/)) state.spanningLayout = true;else state.mode = Modes.attributes;\n      return tokenStyles(state);\n    },\n    html: function html(stream, state) {\n      stream.skipToEnd();\n      return tokenStylesWith(state, TOKEN_STYLES.html);\n    },\n    table: function table(stream, state) {\n      state.layoutType = \"table\";\n      return (state.mode = Modes.tableCell)(stream, state);\n    },\n    tableCell: function tableCell(stream, state) {\n      if (stream.match(RE(\"tableHeading\"))) state.tableHeading = true;else stream.eat(\"|\");\n      state.mode = Modes.tableCellAttributes;\n      return tokenStyles(state);\n    },\n    tableCellAttributes: function tableCellAttributes(stream, state) {\n      state.mode = Modes.tableText;\n      if (stream.match(RE(\"tableCellAttributes\"))) return tokenStylesWith(state, TOKEN_STYLES.attributes);else return tokenStyles(state);\n    },\n    tableText: function tableText(stream, state) {\n      if (stream.match(RE(\"tableText\"))) return tokenStyles(state);\n\n      if (stream.peek() === \"|\") {\n        // end of cell\n        state.mode = Modes.tableCell;\n        return tokenStyles(state);\n      }\n\n      return handlePhraseModifier(stream, state, stream.next());\n    }\n  };\n  CodeMirror.defineMode(\"textile\", function () {\n    return {\n      startState: function startState() {\n        return {\n          mode: Modes.newLayout\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) startNewLine(stream, state);\n        return state.mode(stream, state);\n      },\n      blankLine: blankLine\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-textile\", \"textile\");\n});"],"sourceRoot":""}
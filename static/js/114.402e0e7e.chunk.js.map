{"version":3,"sources":["../node_modules/prismjs/components/prism-excel-formula.js"],"names":["Prism","languages","pattern","lookbehind","greedy","alias","inside"],"mappings":"+GAAAA,MAAMC,UAAU,iBAAmB,CACjC,QAAW,CACTC,QAAS,qCACTC,YAAY,EACZC,QAAQ,GAEV,OAAU,CACRF,QAAS,sBACTE,QAAQ,GAEV,UAAa,CAQXF,QAAS,uEACTE,QAAQ,EACRC,MAAO,SACPC,OAAQ,CACN,SAAY,KACZ,YAAe,IACf,MAAS,CACPJ,QAAS,WACTG,MAAO,YAET,KAAQ,CACNH,QAAS,eACTI,OAAQ,CACN,YAAe,UAGnB,KAAQ,YAGZ,gBAAiB,CACfJ,QAAS,kBACTG,MAAO,WAET,MAAS,CACPH,QAAS,mEACTG,MAAO,WACPC,OAAQ,CACN,SAAY,IACZ,KAAQ,mBACR,OAAU,aACV,IAAO,WAGX,KAAQ,CAGNJ,QAAS,6CACTG,MAAO,YAET,OAAU,+CACV,QAAW,sBACX,SAAY,yBACZ,YAAe,eAEjBL,MAAMC,UAAgB,KAAID,MAAMC,UAAe,IAAID,MAAMC,UAAU","file":"static/js/114.402e0e7e.chunk.js","sourcesContent":["Prism.languages['excel-formula'] = {\n  'comment': {\n    pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n    greedy: true\n  },\n  'reference': {\n    // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n    // Sales!B2\n    // 'Winter sales'!B2\n    // [Sales.xlsx]Jan!B2:B5\n    // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n    // '[Sales.xlsx]Jan sales'!B2:B5\n    // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n    pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'operator': /!$/,\n      'punctuation': /'/,\n      'sheet': {\n        pattern: /[^[\\]]+$/,\n        alias: 'function'\n      },\n      'file': {\n        pattern: /\\[[^[\\]]+\\]$/,\n        inside: {\n          'punctuation': /[[\\]]/\n        }\n      },\n      'path': /[\\s\\S]+/\n    }\n  },\n  'function-name': {\n    pattern: /[A-Z]\\w*(?=\\()/i,\n    alias: 'keyword'\n  },\n  'range': {\n    pattern: /\\$?(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)/i,\n    alias: 'property',\n    inside: {\n      'operator': /:/,\n      'cell': /\\$?[A-Z]+\\$?\\d+/i,\n      'column': /\\$?[A-Z]+/i,\n      'row': /\\$?\\d+/\n    }\n  },\n  'cell': {\n    // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n    // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n    pattern: /[A-Z]+\\d+|\\$[A-Za-z]+\\$?\\d+|[A-Za-z]+\\$\\d+/,\n    alias: 'property'\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n  'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n  'punctuation': /[[\\]();{}|]/\n};\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];"],"sourceRoot":""}